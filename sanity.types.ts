/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type StatsSectionObject = {
  _type: "statsSectionObject";
  topFullWidthData?: Array<{
    value?: string;
    description?: string;
    _key: string;
  }>;
  leftSideData?: Array<{
    value?: string;
    description?: string;
    _key: string;
  }>;
  rightSideData?: Array<{
    value?: string;
    description?: string;
    _key: string;
  }>;
  bottomFullWidthData?: Array<{
    value?: string;
    description?: string;
    _key: string;
  }>;
};

export type BlogButtonObject = {
  _type: "blogButtonObject";
  buttonText?: string;
  buttonLink?: string;
  buttonVariant?: "primary" | "secondary";
};

export type Faq = {
  _type: "faq";
  question?: string;
  answer?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type Iframe = {
  _type: "iframe";
  url?: string;
  title?: string;
  height?: number;
};

export type AnnouncementBar = {
  _id: string;
  _type: "announcementBar";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  show?: boolean;
  backgroundColor?: SimplerColor;
  icon?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  textColor?: SimplerColor;
  text?: string;
  linkColor?: SimplerColor;
  linkText?: string;
  link?: string;
  excludedRoutes?: Array<{
    path?: string;
    note?: string;
    _type: "routeExclusion";
    _key: string;
  }>;
};

export type MenuItem = {
  _type: "menuItem";
  name?: string;
  hasDropdown?: boolean;
  path?: string;
  dropdownItems?: Array<{
    _key: string;
  } & DropdownItem>;
};

export type DropdownItem = {
  _type: "dropdownItem";
  title?: string;
  description?: string;
  path?: string;
};

export type VideoObject = {
  _type: "videoObject";
  title?: string;
  videoUrl?: string;
};

export type CallToActionObject = {
  _type: "callToActionObject";
  callToActionTitle?: string;
  callToActionParagraph?: string;
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
};

export type SpacerObject = {
  _type: "spacerObject";
  spacing?: "none" | "small" | "medium" | "large";
};

export type SingleImageObject = {
  _type: "singleImageObject";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    _type: "image";
  };
};

export type ButtonObject = {
  _type: "buttonObject";
  showButton?: boolean;
  buttonText?: string;
  buttonType?: "internal" | "anchor" | "external" | "fileDownload" | "emailAddress";
  buttonAnchorLocation?: "currentPage" | "choosePage";
  buttonPageReference?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "servicesPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "projectsPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "service";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "project";
  };
  buttonAnchorId?: string;
  buttonExternalUrl?: string;
  buttonEmailAddress?: string;
  buttonFileUrl?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    media?: unknown;
    _type: "file";
  };
  buttonVariant?: "primary" | "secondary" | "tertiary" | "outline" | "underline";
  buttonWidth?: "auto" | "fullWidth";
};

export type RichTextObject = {
  _type: "richTextObject";
  richTextContent?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type HeadingObject = {
  _type: "headingObject";
  headingText?: string;
  headingTag?: "h2" | "h3" | "h4" | "h5" | "h6";
  headingSize?: "xxxl" | "xxl" | "xl" | "lg" | "md" | "sm" | "xs";
};

export type TestimonialV1Block = {
  _type: "testimonialV1Block";
  testimonials?: Array<{
    company?: string;
    companyLogo?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    text?: string;
    profile?: {
      name?: string;
      role?: string;
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      };
    };
    _type: "testimonial";
    _key: string;
  }>;
};

export type DataTableBlock = {
  _type: "dataTableBlock";
  heading?: string;
  subheading?: string;
  tableHeaders?: Array<{
    id?: string;
    label?: string;
    width?: string;
    _type: "header";
    _key: string;
  }>;
  tableRows?: Array<{
    feature?: string;
    values?: Array<{
      text?: string;
      color?: string;
      _type: "cell";
      _key: string;
    }>;
    _type: "row";
    _key: string;
  }>;
};

export type HeroBannerWithTagBlock = {
  _type: "heroBannerWithTagBlock";
  tag?: string;
  headingBold?: string;
  headingOrdinary?: string;
  headingWidth?: number;
  subheading?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  subheadingWidth?: number;
};

export type DisconnectedAppsEmpoweredTeamsBlock = {
  _type: "disconnectedAppsEmpoweredTeamsBlock";
  heading?: string;
  brands?: Array<{
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    caseStudy?: boolean;
    caseStudyLink?: string;
    _type: "brand";
    _key: string;
  }>;
};

export type DisconnectedAppsSectionWithCardsBlock = {
  _type: "disconnectedAppsSectionWithCardsBlock";
  tagline?: string;
  heading?: string;
  highlightedText?: string;
  description?: string;
  cards?: Array<{
    title?: string;
    description?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    _type: "card";
    _key: string;
  }>;
};

export type DisconnectedAppsFeaturesBlock = {
  _type: "disconnectedAppsFeaturesBlock";
  heading?: string;
  highlightedText?: string;
  description?: string;
  features?: Array<{
    title?: string;
    description?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    _type: "feature";
    _key: string;
  }>;
};

export type DisconnectedAppsStickyStackBlock = {
  _type: "disconnectedAppsStickyStackBlock";
  eyebrow?: string;
  heading?: string;
  highlightedText?: string;
  description?: string;
  ctaLabel?: string;
  ctaLink?: string;
  features?: Array<{
    title?: string;
    description?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    mobileImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    _type: "feature";
    _key: string;
  }>;
};

export type DisconnectedAppsBrandsBlock = {
  _type: "disconnectedAppsBrandsBlock";
  brandStats?: Array<{
    stat?: string;
    description?: string;
    logo?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    width?: number;
    height?: number;
    _type: "brandStat";
    _key: string;
  }>;
};

export type DisconnectedAppsHeroBlock = {
  _type: "disconnectedAppsHeroBlock";
  heading?: string;
  highlightedText?: string;
  description?: string;
  ctaLabel?: string;
  ctaLink?: string;
  marqueeImages?: Array<{
    asset?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    width?: number;
    height?: number;
    _type: "marqueeImage";
    _key: string;
  }>;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type AuditReadinessSolutionsListBlock = {
  _type: "auditReadinessSolutionsListBlock";
  tagline?: string;
  heading?: string;
  highlightedText?: string;
  teamCards?: Array<{
    title?: string;
    description?: string;
    _type: "card";
    _key: string;
  }>;
};

export type AuditReadinessRightAccordionBlock = {
  _type: "auditReadinessRightAccordionBlock";
  tagline?: string;
  heading?: string;
  highlightedText?: string;
  description?: string;
  accordionItems?: Array<{
    heading?: string;
    subheading?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    _type: "item";
    _key: string;
  }>;
};

export type AuditReadinessLeftAccordionBlock = {
  _type: "auditReadinessLeftAccordionBlock";
  tagline?: string;
  heading?: string;
  highlightedText?: string;
  description?: string;
  accordionItems?: Array<{
    heading?: string;
    subheading?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    _type: "item";
    _key: string;
  }>;
};

export type AuditReadinessHeroBlock = {
  _type: "auditReadinessHeroBlock";
  tagline?: string;
  heading?: string;
  highlightedText?: string;
  description?: string;
  marqueeImages?: Array<{
    asset?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    width?: number;
    height?: number;
    _type: "marqueeImage";
    _key: string;
  }>;
  video?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    media?: unknown;
    _type: "file";
  };
};

export type SamActionBlock = {
  _type: "samActionBlock";
  tagline?: string;
  heading?: string;
  highlightedText?: string;
  description?: string;
  videoUrl?: string;
};

export type SamFixTheGapsBlock = {
  _type: "samFixTheGapsBlock";
  title?: string;
  subtitle?: string;
  description?: string;
  accordionItems?: Array<{
    heading?: string;
    subheading?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    subsections?: Array<{
      title?: string;
      desc?: string;
      _key: string;
    }>;
    button?: string;
    _key: string;
  }>;
};

export type SamCardsBlock = {
  _type: "samCardsBlock";
  tagline?: string;
  heading?: string;
  highlightedText?: string;
  description?: string;
  cards?: Array<{
    tagline?: string;
    heading?: string;
    description?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      width?: number;
      height?: number;
      _type: "image";
    };
    _type: "card";
    _key: string;
  }>;
};

export type SamCenteredBlock = {
  _type: "samCenteredBlock";
  badge?: string;
  title?: string;
  description?: string;
  buttonText?: string;
};

export type SamHeroSection = {
  _type: "samHeroSection";
  title?: string;
  description?: string;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    width?: number;
    height?: number;
    _type: "image";
  };
  backedByImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    width?: number;
    height?: number;
    _type: "image";
  };
  avatarImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    width?: number;
    height?: number;
    _type: "image";
  };
  buttonText?: string;
  marqueeImages?: Array<{
    asset?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    width?: number;
    height?: number;
    _type: "marqueeImage";
    _key: string;
  }>;
};

export type OktaIdpCtaSection = {
  _type: "oktaIdpCtaSection";
  heading?: string;
  description?: string;
  buttonText?: string;
  avatarImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    width?: number;
    height?: number;
    _type: "image";
  };
};

export type OktaIdpFaqSection = {
  _type: "oktaIdpFaqSection";
  heading?: string;
  faqs?: Array<{
    question?: string;
    answer?: string;
    _type: "faqItem";
    _key: string;
  }>;
};

export type OktaIdpTraditionalTools = {
  _type: "oktaIdpTraditionalTools";
  traditionalTools?: Array<{
    list?: string;
    listIcon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    _type: "traditionalTool";
    _key: string;
  }>;
  stitchflowTools?: Array<{
    list?: string;
    listIcon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    _type: "stitchflowTool";
    _key: string;
  }>;
};

export type OktaIdpCustomer = {
  _type: "oktaIdpCustomer";
  title?: string;
  cards?: Array<{
    mainHeading?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      width?: number;
      height?: number;
      _type: "image";
    };
    description?: string;
    name?: string;
    designation?: string;
    avatarImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      width?: number;
      height?: number;
      _type: "image";
    };
    impact?: Array<{
      contractCount?: string;
      contractDesc?: string;
      reductionRate?: string;
      reductionDesc?: string;
      _type: "impactItem";
      _key: string;
    }>;
    _type: "customerCard";
    _key: string;
  }>;
};

export type OktaIdpSaasManagementActuallyWorks = {
  _type: "oktaIdpSaasManagementActuallyWorks";
  title?: string;
  topLineImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    width?: number;
    height?: number;
    _type: "image";
  };
  sections?: Array<{
    mainTitle?: string;
    subTitle?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      width?: number;
      height?: number;
      _type: "image";
    };
    _type: "saasManagementSection";
    _key: string;
  }>;
  bottomLineImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    width?: number;
    height?: number;
    _type: "image";
  };
};

export type OktaIdpPointers = {
  _type: "oktaIdpPointers";
  title?: string;
  pointers?: Array<{
    text?: string;
    _type: "pointer";
    _key: string;
  }>;
};

export type OktaIdpWhySaasSection = {
  _type: "oktaIdpWhySaasSection";
  title?: string;
  lineImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    width?: number;
    height?: number;
    _type: "image";
  };
  cards?: Array<{
    mainHeading?: string;
    description?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      width?: number;
      height?: number;
      _type: "image";
    };
    _type: "card";
    _key: string;
  }>;
};

export type OktaIdpHeroSection = {
  _type: "oktaIdpHeroSection";
  title?: string;
  subtitle?: string;
  description?: string;
  avatarImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    width?: number;
    height?: number;
    _type: "image";
  };
  buttonText?: string;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    width?: number;
    height?: number;
    _type: "image";
  };
  marqueeImages?: Array<{
    asset?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    width?: number;
    height?: number;
    _type: "marqueeImage";
    _key: string;
  }>;
};

export type PngImageBlock = {
  _type: "pngImageBlock";
  hasFeaturedCard?: boolean;
  featuredCard?: {
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    altText?: string;
    title?: string;
    description?: string;
    bgColor?: SimplerColor;
  };
  cards?: Array<{
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    altText?: string;
    title?: string;
    description?: string;
    bgColor?: SimplerColor;
    _key: string;
  }>;
  sectionBgColor?: SimplerColor;
};

export type IconBlock = {
  _type: "iconBlock";
  title?: string;
  icons?: Array<{
    logo?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    altText?: string;
    width?: number;
    height?: number;
    _key: string;
  }>;
};

export type AvatarWithDetails = {
  _id: string;
  _type: "avatarWithDetails";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  sectionTitle?: string;
  avatarList?: Array<{
    name?: string;
    title?: string;
    avatar?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    bio?: string;
    socialLinks?: Array<{
      name?: string;
      url?: string;
      icon?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      _key: string;
    }>;
    _key: string;
  }>;
};

export type JoinOurNewsletterBlock = {
  _type: "joinOurNewsletterBlock";
  title?: string;
  description?: string;
  placeholder?: string;
  buttonText?: string;
  successMessage?: string;
  processingText?: string;
  spacing?: {
    top?: number;
    bottom?: number;
  };
  backgroundColor?: SimplerColor;
  successBorderColor?: SimplerColor;
  successTextColor?: SimplerColor;
};

export type FrequentlyAskedQuestionBlock = {
  _type: "frequentlyAskedQuestionBlock";
  title?: string;
  faqs?: Array<{
    question?: string;
    answer?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    _key: string;
  }>;
};

export type AccordionAndImageBlock = {
  _type: "accordionAndImageBlock";
  sectionTitle?: string;
  description?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  features?: Array<{
    title?: string;
    description?: Array<string>;
    _key: string;
  }>;
};

export type SocialReviewBlock = {
  _type: "socialReviewBlock";
  title?: string;
  background?: {
    color?: SimplerColor;
    gradient?: boolean;
  };
  spacing?: {
    top?: number;
    bottom?: number;
  };
  avatarImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  comments?: Array<{
    username?: string;
    content?: string;
    width?: "md:w-1/3" | "md:w-2/3" | "w-full";
    _key: string;
  }>;
};

export type ItToolsCardBlock = {
  _type: "itToolsCardBlock";
  title?: string;
  backgroundColor?: SimplerColor;
  spacing?: {
    top?: number;
    bottom?: number;
  };
  tools?: Array<{
    label?: string;
    labelBackground?: SimplerColor;
    title?: string;
    comingSoon?: boolean;
    url?: string;
    description?: string;
    buttonText?: string;
    _key: string;
  }>;
};

export type PricingBlock = {
  _id: string;
  _type: "pricingBlock";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  pricingBlockReference?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "pricingItem";
  };
  backgroundColor?: SimplerColor;
};

export type PricingItem = {
  _id: string;
  _type: "pricingItem";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  freePilotCard?: {
    title?: string;
    subtitle?: string;
    features?: Array<string>;
    buttonText?: string;
    buttonLink?: string;
  };
  afterPilotCard?: {
    title?: string;
    price?: string;
    priceUnit?: string;
  };
  backgroundColor?: SimplerColor;
};

export type IconHighlightBlock = {
  _type: "iconHighlightBlock";
  title?: string;
  cards?: Array<{
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    text?: string;
    _key: string;
  }>;
  backgroundColor?: SimplerColor;
};

export type IconListTwoColumnBlock = {
  _type: "iconListTwoColumnBlock";
  heading?: string;
  features?: Array<{
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    title?: string;
    description?: string;
    _key: string;
  }>;
  backgroundColor?: SimplerColor;
};

export type IconListBlock = {
  _type: "iconListBlock";
  heading?: string;
  features?: Array<{
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    title?: string;
    _key: string;
  }>;
  backgroundColor?: SimplerColor;
};

export type StepRightImageBlock = {
  _type: "stepRightImageBlock";
  title?: string;
  steps?: Array<{
    number?: string;
    title?: string;
    _key: string;
  }>;
  footnote?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  badgeColor?: SimplerColor;
  backgroundGradient?: {
    topColor?: SimplerColor;
    bottomColor?: SimplerColor;
  };
};

export type ClickthroughTopicBlock = {
  _type: "clickthroughTopicBlock";
  useCases?: Array<{
    title?: string;
    description?: string;
    backgroundColor?: SimplerColor;
    embedUrl?: string;
    _key: string;
  }>;
  sectionBackgroundColor?: SimplerColor;
};

export type StepProcessBlock = {
  _type: "stepProcessBlock";
  heading?: string;
  subheading?: string;
  steps?: Array<{
    number?: number;
    title?: string;
    description?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      width?: number;
      height?: number;
      _type: "image";
    };
    badgeColor?: SimplerColor;
    _key: string;
  }>;
  borderColor?: SimplerColor;
  backgroundColor?: SimplerColor;
};

export type HeroSectionBlock = {
  _type: "heroSectionBlock";
  title?: string;
  titleWidth?: number;
  description?: string;
  descriptionWidth?: number;
  showButton?: boolean;
  button?: {
    text?: string;
    link?: string;
    variant?: "primary" | "secondary" | "outline";
    buttonBelowSpacing?: number;
  };
  showImage?: boolean;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    height?: number;
    width?: number;
    _type: "image";
  };
  modifySpacing?: boolean;
  spacing?: {
    topSpacing?: number;
    bottomSpacing?: number;
    titleBelowSpacing?: number;
    descriptionBelowSpacing?: number;
    imageBelowSpacing?: number;
  };
  backgroundColor?: SimplerColor;
};

export type TestimonialCarouselBlock = {
  _type: "testimonialCarouselBlock";
  title?: string;
  testimonials?: Array<{
    text?: string;
    author?: string;
    position?: string;
    avatar?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    companyLogo?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      width?: number;
      height?: number;
      _type: "image";
    };
    _key: string;
  }>;
};

export type ComparisonTableBlock = {
  _type: "comparisonTableBlock";
  title?: string;
  leftColumn?: {
    title?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
  };
  rightColumn?: {
    title?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    backgroundColor?: SimplerColor;
  };
  rows?: Array<{
    leftText?: string;
    rightText?: string;
    _key: string;
  }>;
};

export type FeaturedTestimonialBlock = {
  _type: "featuredTestimonialBlock";
  quote?: string;
  author?: {
    name?: string;
    position?: string;
    avatar?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
  };
  backgroundColor?: SimplerColor;
  quoteIcon?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type SimpleCardBlock = {
  _type: "simpleCardBlock";
  title?: string;
  cards?: Array<{
    title?: string;
    description?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    backgroundColor?: SimplerColor;
    _key: string;
  }>;
};

export type HeroClickthroughBlock = {
  _type: "heroClickthroughBlock";
  heading?: string;
  headingWidth?: number;
  subheading?: string;
  subheadingWidth?: number;
};

export type FormBlock = {
  _type: "formBlock";
  heading?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  form?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "form";
  };
  anchorId?: string;
};

export type ServicesBlock = {
  _type: "servicesBlock";
  heading?: string;
  services?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "service";
  }>;
  background?: "white" | "pattern";
  topCornerRadius?: "straight" | "rounded";
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  anchorId?: string;
  paddingTop?: "none" | "small" | "medium" | "default" | "large";
  paddingBottom?: "none" | "small" | "medium" | "default" | "large";
};

export type TestimonialBlock = {
  _type: "testimonialBlock";
  heading?: string;
  eyebrow?: string;
  testimonials?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "testimonial";
  }>;
  cornerRadiusTop?: "rounded" | "straight";
  cornerRadiusBottom?: "rounded" | "straight";
  anchorId?: string;
};

export type MediaBlock = {
  _type: "mediaBlock";
  backgroundType?: "image" | "video";
  backgroundWidth?: "full" | "contained";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    _type: "image";
  };
  overlayType?: "none" | "dark";
  dialogType?: "none" | "video";
  videoUrl?: string;
  anchorId?: string;
};

export type LogoBlock = {
  _type: "logoBlock";
  heading?: string;
  logos?: Array<{
    title?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    size?: "default" | "large";
    link?: string;
    _key: string;
  }>;
  anchorId?: string;
};

export type CallToActionBlock = {
  _type: "callToActionBlock";
  heading?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  anchorId?: string;
};

export type PortableTextBlock = {
  _type: "portableTextBlock";
  title?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & CallToActionObject | {
    _key: string;
  } & Table>;
  alignment?: "left" | "center" | "right";
  anchorId?: string;
};

export type FreeformBlock = {
  _type: "freeformBlock";
  title?: string;
  columnsPerRow?: "2" | "3" | "4";
  columns?: Array<{
    title?: string;
    spacing?: "none" | "small" | "medium" | "large";
    alignment?: "left" | "center" | "right";
    items?: Array<{
      _key: string;
    } & SpacerObject | {
      _key: string;
    } & HeadingObject | {
      _key: string;
    } & RichTextObject | {
      _key: string;
    } & ButtonObject | {
      _key: string;
    } & SingleImageObject>;
    _key: string;
  }>;
  border?: "none" | "topBottom" | "top" | "bottom";
  anchorId?: string;
};

export type FeaturesMinimalBlock = {
  _type: "featuresMinimalBlock";
  heading?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  features?: Array<string>;
  enableBorderTop?: boolean;
  cornerRadiusTop?: "rounded" | "straight";
  enableBorderBottom?: boolean;
  cornerRadiusBottom?: "rounded" | "straight";
  anchorId?: string;
};

export type FeatureCardsBlock = {
  _type: "featureCardsBlock";
  heading?: string;
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  features?: Array<{
    title?: string;
    description?: string;
    items?: Array<string>;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    button?: {
      showButton?: boolean;
      buttonText?: string;
      buttonType?: "internal" | "anchor" | "external" | "fileDownload" | "emailAddress";
      buttonAnchorLocation?: "currentPage" | "choosePage";
      buttonPageReference?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "blogPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "servicesPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "projectsPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "service";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "project";
      };
      buttonAnchorId?: string;
      buttonExternalUrl?: string;
      buttonEmailAddress?: string;
      buttonFileUrl?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      buttonVariant?: "primary" | "secondary" | "tertiary" | "outline" | "underline";
      buttonWidth?: "auto" | "fullWidth";
    };
    _key: string;
  }>;
  showCallToAction?: boolean;
  callToActionHeading?: string;
  callToActionContent?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  callToActionButtons?: Array<{
    _key: string;
  } & ButtonObject>;
  anchorId?: string;
};

export type HeaderBlock = {
  _type: "headerBlock";
  heading?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  bottomCornerRadius?: "straight" | "rounded";
  anchorId?: string;
};

export type HeroBlock = {
  _type: "heroBlock";
  heading?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  mediaType?: "image" | "none";
  bottomCornerRadius?: "straight" | "rounded";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    height?: "full" | "short";
    _type: "image";
  };
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  dialogType?: "none" | "video";
  videoUrl?: string;
  overlayType?: "none" | "dark";
  anchorId?: string;
};

export type PageBuilder = Array<{
  _key: string;
} & HeroBlock | {
  _key: string;
} & HeaderBlock | {
  _key: string;
} & FeatureCardsBlock | {
  _key: string;
} & FeaturesMinimalBlock | {
  _key: string;
} & FreeformBlock | {
  _key: string;
} & PortableTextBlock | {
  _key: string;
} & CallToActionBlock | {
  _key: string;
} & LogoBlock | {
  _key: string;
} & TestimonialBlock | {
  _key: string;
} & ServicesBlock | {
  _key: string;
} & FormBlock | {
  _key: string;
} & MediaBlock | {
  _key: string;
} & HeroClickthroughBlock | {
  _key: string;
} & SimpleCardBlock | {
  _key: string;
} & FeaturedTestimonialBlock | {
  _key: string;
} & ComparisonTableBlock | {
  _key: string;
} & TestimonialCarouselBlock | {
  _key: string;
} & HeroSectionBlock | {
  _key: string;
} & StepProcessBlock | {
  _key: string;
} & ClickthroughTopicBlock | {
  _key: string;
} & StepRightImageBlock | {
  _key: string;
} & IconListBlock | {
  _key: string;
} & IconListTwoColumnBlock | {
  _key: string;
} & IconHighlightBlock | {
  title?: string;
  pricingBlockReference?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "pricingItem";
  };
  backgroundColor?: SimplerColor;
  _type: "pricingBlock";
  _key: string;
} | {
  _key: string;
} & ItToolsCardBlock | {
  _key: string;
} & SocialReviewBlock | {
  _key: string;
} & AccordionAndImageBlock | {
  _key: string;
} & FrequentlyAskedQuestionBlock | {
  _key: string;
} & JoinOurNewsletterBlock | {
  sectionTitle?: string;
  avatarList?: Array<{
    name?: string;
    title?: string;
    avatar?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    bio?: string;
    socialLinks?: Array<{
      name?: string;
      url?: string;
      icon?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      _key: string;
    }>;
    _key: string;
  }>;
  _type: "avatarWithDetails";
  _key: string;
} | {
  _key: string;
} & IconBlock | {
  _key: string;
} & PngImageBlock | {
  _key: string;
} & OktaIdpHeroSection | {
  _key: string;
} & OktaIdpWhySaasSection | {
  _key: string;
} & OktaIdpPointers | {
  _key: string;
} & OktaIdpSaasManagementActuallyWorks | {
  _key: string;
} & OktaIdpCustomer | {
  _key: string;
} & OktaIdpTraditionalTools | {
  _key: string;
} & OktaIdpFaqSection | {
  _key: string;
} & OktaIdpCtaSection | {
  _key: string;
} & SamHeroSection | {
  _key: string;
} & SamCenteredBlock | {
  _key: string;
} & SamCardsBlock | {
  _key: string;
} & SamFixTheGapsBlock | {
  _key: string;
} & SamActionBlock | {
  _key: string;
} & AuditReadinessHeroBlock | {
  _key: string;
} & AuditReadinessLeftAccordionBlock | {
  _key: string;
} & AuditReadinessRightAccordionBlock | {
  _key: string;
} & AuditReadinessSolutionsListBlock | {
  _key: string;
} & DisconnectedAppsHeroBlock | {
  _key: string;
} & DisconnectedAppsBrandsBlock | {
  _key: string;
} & DisconnectedAppsStickyStackBlock | {
  _key: string;
} & DisconnectedAppsFeaturesBlock | {
  _key: string;
} & DisconnectedAppsSectionWithCardsBlock | {
  _key: string;
} & DisconnectedAppsEmpoweredTeamsBlock | {
  _key: string;
} & HeroBannerWithTagBlock | {
  _key: string;
} & DataTableBlock | {
  _key: string;
} & TestimonialV1Block>;

export type TamingDisconnectedAppsPage = {
  _id: string;
  _type: "tamingDisconnectedAppsPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  badge?: string;
  title?: string;
  subtitle?: string;
  description?: Array<string>;
  learningPoints?: Array<string>;
  keyChallenges?: Array<string>;
  formThumbnail?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  videoId?: string;
  seo?: SeoObject;
};

export type Sitemap = {
  _id: string;
  _type: "sitemap";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  addToSitemap?: Array<string>;
  removeFromSitemap?: Array<string>;
};

export type DemoSettings = {
  _id: string;
  _type: "demoSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  mainHeading?: string;
  benefits?: Array<{
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    text?: string;
    _key: string;
  }>;
  trustedByText?: string;
  testimonialCard?: QuoteCardObject;
  testimonialsHeading?: string;
  testimonialsG2?: Array<{
    name?: string;
    jobTitle?: string;
    quote?: string;
    avatar?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    url?: string;
    _key: string;
  }>;
  logos?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
  demoComponentHeading?: string;
  seo?: SeoObject;
};

export type QuoteCardObject = {
  _type: "quoteCardObject";
  quoteText?: string;
  authorName?: string;
  authorTitle?: string;
  authorImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type IntegrationsPage = {
  _id: string;
  _type: "integrationsPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  headerActionButton?: {
    buttonText?: string;
    buttonUrl?: string;
    buttonVariant?: "primary" | "secondary";
  };
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type IntegrationApplication = {
  _id: string;
  _type: "integrationApplication";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  applicationName?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  category?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "integrationCategory";
  };
  addDescription?: boolean;
  applicationDesc?: string;
  orderRank?: string;
};

export type IntegrationCategory = {
  _id: string;
  _type: "integrationCategory";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  orderRank?: string;
};

export type CasestudiesPage = {
  _id: string;
  _type: "casestudiesPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heroText?: string;
  heroDescription?: string;
  featuredCS?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "casestudy";
  };
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type Casestudy = {
  _id: string;
  _type: "casestudy";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  company?: string;
  slug?: Slug;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  backgroundColor?: SimplerColor;
  cardTitle?: string;
  cardSummary?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & StatsSectionObject | {
    _key: string;
  } & QuoteCardObject | {
    _key: string;
  } & Table>;
  relatedCaseStudies?: "autofill" | "custom";
  customRelatedPosts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "casestudy";
  }>;
  seo?: SeoObject;
  orderRank?: string;
};

export type PrivacyPage = {
  _id: string;
  _type: "privacyPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & Table>;
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type TermsPage = {
  _id: string;
  _type: "termsPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & Table>;
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type HomePage = {
  _id: string;
  _type: "homePage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heading?: string;
  headingWidth?: number;
  subheading?: string;
  subheadingWidth?: number;
  clickthrough?: string;
  emailCapture?: string;
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type Footer = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  footerCTA?: FooterCTA;
  footerLinks?: FooterLinks;
  footerCoLinks?: FooterCoLinks;
  footerExcludedRoutes?: Array<{
    path?: string;
    note?: string;
    _type: "routeExclusion";
    _key: string;
  }>;
  footerCTAexcludedRoutes?: Array<{
    path?: string;
    note?: string;
    _type: "routeExclusion";
    _key: string;
  }>;
};

export type FooterCoLinks = {
  _type: "footerCoLinks";
  companyNameMark?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  copyright?: string;
  coLinks?: Array<{
    label?: string;
    url?: string;
    _key: string;
  }>;
  businessEmail?: string;
};

export type FooterLinks = {
  _type: "footerLinks";
  companyLogo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  socialLinks?: Array<{
    platform?: string;
    url?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
  backedBy?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  certifications?: Array<{
    label?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
  reviewBadges?: Array<{
    platform?: string;
    url?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
  platform?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
  resources?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
  companys?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
  getStarted?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
  freeTools?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
  customers?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
  popularGuides?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
};

export type FooterCTA = {
  _type: "footerCTA";
  title?: string;
  description?: string;
  ctaButton?: CtaButton;
  desktopImage?: {
    src?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    alt?: string;
    width?: number;
    height?: number;
  };
  mobileImage?: {
    src?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    alt?: string;
    width?: number;
    height?: number;
  };
};

export type Navbar = {
  _id: string;
  _type: "navbar";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  logo?: Logo;
  menuItems?: Array<{
    _key: string;
  } & MenuItem>;
  ctaButton?: CtaButton;
  excludedRoutes?: Array<{
    path?: string;
    note?: string;
    _type: "routeExclusion";
    _key: string;
  }>;
};

export type CtaButton = {
  _type: "ctaButton";
  text?: string;
  link?: string;
  variant?: "primary" | "secondary" | "danger" | "outline";
};

export type Logo = {
  _type: "logo";
  src?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  alt?: string;
  width?: number;
  height?: number;
};

export type Form = {
  _id: string;
  _type: "form";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  submitButtonText?: string;
  fields?: Array<{
    name?: string;
    placeholder?: string;
    inputType?: "text" | "textarea" | "email" | "tel";
    isRequired?: boolean;
    _key: string;
  }>;
};

export type Testimonial = {
  _id: string;
  _type: "testimonial";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  jobTitle?: string;
  company?: string;
  quote?: string;
  avatar?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  orderRank?: string;
};

export type Redirect = {
  _id: string;
  _type: "redirect";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  source?: string;
  destination?: string;
  permanent?: boolean;
  isEnabled?: boolean;
};

export type BlogSettings = {
  _id: string;
  _type: "blogSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  showRelatedPosts?: boolean;
  showTableOfContents?: boolean;
};

export type MarketingSettings = {
  _id: string;
  _type: "marketingSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  googleAnalyticsId?: string;
  googleTagManagerId?: string;
};

export type GeneralSettings = {
  _id: string;
  _type: "generalSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  siteTitle?: string;
  siteLogo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  homePage?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "servicesPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "projectsPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "service";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "project";
  };
  companyEmailAddress?: string;
  companyPhoneNumber?: string;
  companySocialMediaLinks?: Array<{
    title?: string;
    profileUrl?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
  copyright?: string;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  pageType?: "platform" | "solution" | "resource" | "company" | "landing";
  slug?: Slug;
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type BlogPage = {
  _id: string;
  _type: "blogPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  heroText?: string;
  featuredBlog?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "post";
  };
  editorsPicks?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "post";
  }>;
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type ServicesPage = {
  _id: string;
  _type: "servicesPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type ProjectsPage = {
  _id: string;
  _type: "projectsPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type Service = {
  _id: string;
  _type: "service";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  shortDescription?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    caption?: string;
    _type: "image";
  };
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
  orderRank?: string;
};

export type Project = {
  _id: string;
  _type: "project";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  category?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "projectCategory";
  };
  excerpt?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    caption?: string;
    _type: "image";
  };
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type ProjectCategory = {
  _id: string;
  _type: "projectCategory";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  orderRank?: string;
};

export type Post = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  category?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "postCategory";
  };
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
  excerpt?: string;
  publishedAt?: string;
  isModified?: boolean;
  modifiedAt?: string;
  readTime?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & CallToActionObject | {
    _key: string;
  } & SingleImageObject | {
    _key: string;
  } & VideoObject | {
    _key: string;
  } & Iframe | {
    _key: string;
  } & Table | {
    _key: string;
  } & BlogButtonObject>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    _type: "image";
  };
  faqs?: Array<{
    _key: string;
  } & Faq>;
  relatedPostsType?: "autofill" | "custom";
  customRelatedPosts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "post";
  }>;
  seo?: SeoObject;
};

export type SeoObject = {
  _type: "seoObject";
  title?: string;
  description?: string;
  noIndex?: boolean;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  avatar?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  name?: string;
  slug?: Slug;
  position?: string;
  bio?: string;
  socials?: Array<{
    platform?: "x" | "linkedin" | "github" | "youtube" | "website" | "other";
    url?: string;
    customIcon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
};

export type PostCategory = {
  _id: string;
  _type: "postCategory";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  orderRank?: string;
};

export type HighlightColor = {
  _type: "highlightColor";
  label?: string;
  value?: string;
};

export type TextColor = {
  _type: "textColor";
  label?: string;
  value?: string;
};

export type SimplerColor = {
  _type: "simplerColor";
  label?: string;
  value?: string;
};

export type MediaTag = {
  _id: string;
  _type: "media.tag";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
};

export type Table = {
  _type: "table";
  rows?: Array<{
    _key: string;
  } & TableRow>;
};

export type TableRow = {
  _type: "tableRow";
  cells?: Array<string>;
};

export type Color = {
  _type: "color";
  hex?: string;
  alpha?: number;
  hsl?: HslaColor;
  hsv?: HsvaColor;
  rgb?: RgbaColor;
};

export type RgbaColor = {
  _type: "rgbaColor";
  r?: number;
  g?: number;
  b?: number;
  a?: number;
};

export type HsvaColor = {
  _type: "hsvaColor";
  h?: number;
  s?: number;
  v?: number;
  a?: number;
};

export type HslaColor = {
  _type: "hslaColor";
  h?: number;
  s?: number;
  l?: number;
  a?: number;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = StatsSectionObject | BlogButtonObject | Faq | Iframe | AnnouncementBar | MenuItem | DropdownItem | VideoObject | CallToActionObject | SpacerObject | SingleImageObject | ButtonObject | RichTextObject | HeadingObject | TestimonialV1Block | DataTableBlock | HeroBannerWithTagBlock | DisconnectedAppsEmpoweredTeamsBlock | DisconnectedAppsSectionWithCardsBlock | DisconnectedAppsFeaturesBlock | DisconnectedAppsStickyStackBlock | DisconnectedAppsBrandsBlock | DisconnectedAppsHeroBlock | AuditReadinessSolutionsListBlock | AuditReadinessRightAccordionBlock | AuditReadinessLeftAccordionBlock | AuditReadinessHeroBlock | SamActionBlock | SamFixTheGapsBlock | SamCardsBlock | SamCenteredBlock | SamHeroSection | OktaIdpCtaSection | OktaIdpFaqSection | OktaIdpTraditionalTools | OktaIdpCustomer | OktaIdpSaasManagementActuallyWorks | OktaIdpPointers | OktaIdpWhySaasSection | OktaIdpHeroSection | PngImageBlock | IconBlock | AvatarWithDetails | JoinOurNewsletterBlock | FrequentlyAskedQuestionBlock | AccordionAndImageBlock | SocialReviewBlock | ItToolsCardBlock | PricingBlock | PricingItem | IconHighlightBlock | IconListTwoColumnBlock | IconListBlock | StepRightImageBlock | ClickthroughTopicBlock | StepProcessBlock | HeroSectionBlock | TestimonialCarouselBlock | ComparisonTableBlock | FeaturedTestimonialBlock | SimpleCardBlock | HeroClickthroughBlock | FormBlock | ServicesBlock | TestimonialBlock | MediaBlock | LogoBlock | CallToActionBlock | PortableTextBlock | FreeformBlock | FeaturesMinimalBlock | FeatureCardsBlock | HeaderBlock | HeroBlock | PageBuilder | TamingDisconnectedAppsPage | Sitemap | DemoSettings | QuoteCardObject | IntegrationsPage | IntegrationApplication | IntegrationCategory | CasestudiesPage | Casestudy | PrivacyPage | TermsPage | HomePage | Footer | FooterCoLinks | FooterLinks | FooterCTA | Navbar | CtaButton | Logo | Form | Testimonial | Redirect | BlogSettings | MarketingSettings | GeneralSettings | Page | BlogPage | ServicesPage | ProjectsPage | Service | Project | ProjectCategory | Post | SeoObject | Author | PostCategory | HighlightColor | TextColor | SimplerColor | MediaTag | Table | TableRow | Color | RgbaColor | HsvaColor | HslaColor | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries/documents/author.ts
// Variable: authorBySlugQuery
// Query: *[_type == 'author' && slug.current == $slug][0] {  _id,  _type,  name,  avatar {    asset -> {      url    }  },  bio,  socials[] {    platform,    url,    customIcon {      asset -> {        url      }    }  },  "posts": *[_type == 'post' && author._ref == ^._id] {    _id,    title,    'slug': slug.current,    excerpt,    publishedAt,    category -> {      title,      slug    },    image {      asset -> {        url      },      altText    }  }}
export type AuthorBySlugQueryResult = {
  _id: string;
  _type: "author";
  name: string | null;
  avatar: {
    asset: {
      url: string | null;
    } | null;
  } | null;
  bio: string | null;
  socials: Array<{
    platform: "github" | "linkedin" | "other" | "website" | "x" | "youtube" | null;
    url: string | null;
    customIcon: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  }> | null;
  posts: Array<{
    _id: string;
    title: string | null;
    slug: string | null;
    excerpt: string | null;
    publishedAt: string | null;
    category: {
      title: string | null;
      slug: Slug | null;
    } | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      altText: string | null;
    } | null;
  }>;
} | null;

// Source: ./src/sanity/lib/queries/documents/casestudy.ts
// Variable: casestudySlugsQuery
// Query: *[_type == "casestudy" && defined(slug.current)] {  'params': { 'slug': slug.current }}
export type CasestudySlugsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: casestudiesPageQuery
// Query: *[_type == 'casestudiesPage'][0] {  _id,  _type,  'slug': slug.current,  heroText,  heroDescription,  featuredCS->{    _id,    _type,    company,    'slug': slug.current,    logo {       asset->{ url },       altText     },    backgroundColor {      value    },    cardSummary,  },    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },  "casestudies": *[_type == 'casestudy'] | order(orderRank asc) {    _id,    _type,    _createdAt,    company,    'slug': slug.current,    logo {       asset->{ url },       altText     },    backgroundColor {      value    },    cardSummary,  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type CasestudiesPageQueryResult = {
  _id: string;
  _type: "casestudiesPage";
  slug: null;
  heroText: string | null;
  heroDescription: string | null;
  featuredCS: {
    _id: string;
    _type: "casestudy";
    company: string | null;
    slug: string | null;
    logo: {
      asset: {
        url: string | null;
      } | null;
      altText: null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    cardSummary: string | null;
  } | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
  casestudies: Array<{
    _id: string;
    _type: "casestudy";
    _createdAt: string;
    company: string | null;
    slug: string | null;
    logo: {
      asset: {
        url: string | null;
      } | null;
      altText: null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    cardSummary: string | null;
  }>;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: casestudyBySlugQuery
// Query: *[_type == 'casestudy' && slug.current == $slug][0] {  _id,  _type,  _createdAt,  company,  'slug': slug.current,  content[],  relatedCaseStudies,  "relatedCasestudies": select(    relatedCaseStudies == "custom" => customRelatedPosts[]->{       _id,      _type,      _createdAt,      company,      'slug': slug.current,      logo {         asset->{ url },         altText       },      backgroundColor {        value      },      cardTitle,    },    relatedCaseStudies == "autofill" => *[_type == 'casestudy' && _id != ^._id][0...2]{       _id,      _type,      _createdAt,      company,      'slug': slug.current,      logo {         asset->{ url },         altText       },      backgroundColor {        value      },      cardTitle,    },  ),  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type CasestudyBySlugQueryResult = {
  _id: string;
  _type: "casestudy";
  _createdAt: string;
  company: string | null;
  slug: string | null;
  content: Array<{
    _key: string;
  } & QuoteCardObject | {
    _key: string;
  } & StatsSectionObject | {
    _key: string;
  } & Table | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  relatedCaseStudies: "autofill" | "custom" | null;
  relatedCasestudies: Array<{
    _id: string;
    _type: "casestudy";
    _createdAt: string;
    company: string | null;
    slug: string | null;
    logo: {
      asset: {
        url: string | null;
      } | null;
      altText: null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    cardTitle: string | null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: allCasestudiesQuery
// Query: *[_type == 'casestudy'] | order(orderRank asc) {  _id,  _type,  company,  'slug': slug.current,  logo {     asset->{ url },     altText   },  backgroundColor {    value  },  cardTitle,  cardSummary,}
export type AllCasestudiesQueryResult = Array<{
  _id: string;
  _type: "casestudy";
  company: string | null;
  slug: string | null;
  logo: {
    asset: {
      url: string | null;
    } | null;
    altText: null;
  } | null;
  backgroundColor: {
    value: string | null;
  } | null;
  cardTitle: string | null;
  cardSummary: string | null;
}>;
// Variable: casestudiesExcludingFeaturedQuery
// Query: *[_type == 'casestudy' && _id != $featuredId] | order(orderRank asc) {  _id,  _type,  company,  'slug': slug.current,  logo {     asset->{ url },     altText   },  backgroundColor {    value  },  cardSummary,}
export type CasestudiesExcludingFeaturedQueryResult = Array<{
  _id: string;
  _type: "casestudy";
  company: string | null;
  slug: string | null;
  logo: {
    asset: {
      url: string | null;
    } | null;
    altText: null;
  } | null;
  backgroundColor: {
    value: string | null;
  } | null;
  cardSummary: string | null;
}>;

// Source: ./src/sanity/lib/queries/documents/integration.ts
// Variable: integrationPageQuery
// Query: *[_type == 'integrationsPage'][0] {    _id,    _type,    title,    description,    heroImageDesktop {      asset->{ url }    },    heroImageMobile {      asset->{ url }    },    headerActionButton,      pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },    "seo": {      "title": coalesce(seo.title, title, ""),      "description": coalesce(seo.description, ""),      "noIndex": seo.noIndex == true,      "image": seo.image,    },  }
export type IntegrationPageQueryResult = {
  _id: string;
  _type: "integrationsPage";
  title: string | null;
  description: string | null;
  heroImageDesktop: null;
  heroImageMobile: null;
  headerActionButton: {
    buttonText?: string;
    buttonUrl?: string;
    buttonVariant?: "primary" | "secondary";
  } | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: allIntegrationApplicationsQuery
// Query: *[_type == 'integrationApplication'] | order(orderRank asc) {    _id,    _type,    applicationName,    image {      asset->{ url },      altText    },    category->{      _id,      _type,      title,      'slug': slug.current,    },    addDescription,    applicationDesc,  }
export type AllIntegrationApplicationsQueryResult = Array<{
  _id: string;
  _type: "integrationApplication";
  applicationName: string | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    altText: null;
  } | null;
  category: {
    _id: string;
    _type: "integrationCategory";
    title: string | null;
    slug: string | null;
  } | null;
  addDescription: boolean | null;
  applicationDesc: string | null;
}>;
// Variable: allIntegrationCategoriesQuery
// Query: *[_type == 'integrationCategory'] | order(orderRank asc) {    _id,    _type,    title,    'slug': slug.current,  }
export type AllIntegrationCategoriesQueryResult = Array<{
  _id: string;
  _type: "integrationCategory";
  title: string | null;
  slug: string | null;
}>;
// Variable: integrationApplicationsByCategoryQuery
// Query: *[_type == 'integrationApplication' && category._ref == $categoryId] | order(orderRank asc) {    _id,    _type,    applicationName,    image {      asset->{ url },      altText    },    category->{      _id,      _type,      title,      'slug': slug.current,    },    addDescription,    applicationDesc,  }
export type IntegrationApplicationsByCategoryQueryResult = Array<{
  _id: string;
  _type: "integrationApplication";
  applicationName: string | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    altText: null;
  } | null;
  category: {
    _id: string;
    _type: "integrationCategory";
    title: string | null;
    slug: string | null;
  } | null;
  addDescription: boolean | null;
  applicationDesc: string | null;
}>;
// Variable: integrationCategoryBySlugQuery
// Query: *[_type == 'integrationCategory' && slug.current == $slug][0] {    _id,    _type,    title,    'slug': slug.current,  }
export type IntegrationCategoryBySlugQueryResult = {
  _id: string;
  _type: "integrationCategory";
  title: string | null;
  slug: string | null;
} | null;

// Source: ./src/sanity/lib/queries/documents/page.ts
// Variable: pageSlugsQuery
// Query: *[_type == "page" && defined(slug.current)] {  'params': { 'slug': slug.current }}
export type PageSlugsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: pageBySlugQuery
// Query: *[_type == 'page' && slug.current == $slug][0] {  _type,  _id,  title,  pageType,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type PageBySlugQueryResult = {
  _type: "page";
  _id: string;
  title: string | null;
  pageType: "company" | "landing" | "platform" | "resource" | "solution" | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;

// Source: ./src/sanity/lib/queries/documents/post.ts
// Variable: postSlugsQuery
// Query: *[_type == "post" && defined(slug.current)] {  'params': { 'slug': slug.current }}
export type PostSlugsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: blogPageQuery
// Query: *[_type == 'blogPage'][0] {  _id,  _type,  title,  'slug': slug.current,  heroText,  featuredBlog->{    _id,    _type,    title,    'slug': slug.current,    excerpt,    category->{      _id,      title,      'slug': slug.current,    },    image {       asset->{ url },       altText     },  },  editorsPicks[]->{    _id,    _type,    title,    'slug': slug.current,    excerpt,    category->{      _id,      title,      'slug': slug.current,    },    image {       asset->{ url },       altText     },  },    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },  "posts": *[_type == 'post'] | order(publishedAt desc) {    _id,    _type,    _createdAt,    title,    'slug': slug.current,    excerpt,    category->{      _id,      title,      'slug': slug.current,    },    image {       asset->{ url },       altText     },  },  "categories": *[_type == "postCategory"] | order(orderRank asc) {    _id,    _type,    title,    'slug': slug.current,  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type BlogPageQueryResult = {
  _id: string;
  _type: "blogPage";
  title: string | null;
  slug: string | null;
  heroText: string | null;
  featuredBlog: {
    _id: string;
    _type: "post";
    title: string | null;
    slug: string | null;
    excerpt: string | null;
    category: {
      _id: string;
      title: string | null;
      slug: string | null;
    } | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      altText: string | null;
    } | null;
  } | null;
  editorsPicks: Array<{
    _id: string;
    _type: "post";
    title: string | null;
    slug: string | null;
    excerpt: string | null;
    category: {
      _id: string;
      title: string | null;
      slug: string | null;
    } | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      altText: string | null;
    } | null;
  }> | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
  posts: Array<{
    _id: string;
    _type: "post";
    _createdAt: string;
    title: string | null;
    slug: string | null;
    excerpt: string | null;
    category: {
      _id: string;
      title: string | null;
      slug: string | null;
    } | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      altText: string | null;
    } | null;
  }>;
  categories: Array<{
    _id: string;
    _type: "postCategory";
    title: string | null;
    slug: string | null;
  }>;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: postBySlugQuery
// Query: *[_type == 'post' && slug.current == $slug][0] {  _id,  _type,  _createdAt,  publishedAt,  isModified,  modifiedAt,  readTime,  title,  'slug': slug.current,  excerpt,  "tableOfContents": content[style in ["h2"]],  content[],  faqs[] {    question,    answer  },  category->{    _id,    title,    'slug': slug.current,  },  author->{    _id,    name,    'slug': slug.current,    position,    bio,    avatar {       asset->{ url },     },    socials[] {      platform,      url,      customIcon {        asset->{ url },      },    }  },  relatedPostsType,  "relatedPosts": select(    relatedPostsType == "custom" => customRelatedPosts[]->{       _id,      _type,      _createdAt,      title,      'slug': slug.current,      excerpt,      category->{        _id,        title,        'slug': slug.current,      },      image {         asset->{ url },         altText       }    },    relatedPostsType == "autofill" => *[_type == 'post' && category._ref == ^.category._ref && _id != ^._id][0...3]{       _id,      _type,      _createdAt,      title,      'slug': slug.current,      category->{        _id,        title,        'slug': slug.current,      },      excerpt,      image {         asset->{ url },         altText       }    },  ),  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type PostBySlugQueryResult = {
  _id: string;
  _type: "post";
  _createdAt: string;
  publishedAt: string | null;
  isModified: boolean | null;
  modifiedAt: string | null;
  readTime: string | null;
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  tableOfContents: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  content: Array<{
    _key: string;
  } & BlogButtonObject | {
    _key: string;
  } & CallToActionObject | {
    _key: string;
  } & Iframe | {
    _key: string;
  } & SingleImageObject | {
    _key: string;
  } & Table | {
    _key: string;
  } & VideoObject | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  faqs: Array<{
    question: string | null;
    answer: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
  }> | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  author: {
    _id: string;
    name: string | null;
    slug: string | null;
    position: string | null;
    bio: string | null;
    avatar: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    socials: Array<{
      platform: "github" | "linkedin" | "other" | "website" | "x" | "youtube" | null;
      url: string | null;
      customIcon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
  } | null;
  relatedPostsType: "autofill" | "custom" | null;
  relatedPosts: Array<{
    _id: string;
    _type: "post";
    _createdAt: string;
    title: string | null;
    slug: string | null;
    category: {
      _id: string;
      title: string | null;
      slug: string | null;
    } | null;
    excerpt: string | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      altText: string | null;
    } | null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: allPostsQuery
// Query: *[_type == 'post'] | order(_createdAt asc) {  _id,  _type,  title,  'slug': slug.current,  excerpt,  category->{    _id,    title,    'slug': slug.current,  },  image {     asset->{ url },     altText   },}
export type AllPostsQueryResult = Array<{
  _id: string;
  _type: "post";
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    altText: string | null;
  } | null;
}>;
// Variable: paginatedPostsQuery
// Query: {  "posts": *[_type == "post"] | order(_createdAt desc) [$offset...$end] {    _id,    _type,    title,    'slug': slug.current,    excerpt,    category->{      _id,      title,      'slug': slug.current,    },    image {      asset->{ url },      altText    },  },  "total": count(*[_type == "post"])}
export type PaginatedPostsQueryResult = {
  posts: Array<{
    _id: string;
    _type: "post";
    title: string | null;
    slug: string | null;
    excerpt: string | null;
    category: {
      _id: string;
      title: string | null;
      slug: string | null;
    } | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      altText: string | null;
    } | null;
  }>;
  total: number;
};
// Variable: allPostCategoriesQuery
// Query: * [_type == 'postCategory'] | order(orderRank asc) {  _id,  _type,  title,  'slug': slug.current,}
export type AllPostCategoriesQueryResult = Array<{
  _id: string;
  _type: "postCategory";
  title: string | null;
  slug: string | null;
}>;
// Variable: postsByCategoryQuery
// Query: * [_type == 'post' && category -> slug.current == $slug] {  _id,  _type,  title,  'slug': slug.current,  excerpt,  category-> {  _id,  title,  'slug': slug.current,},  image {    asset-> { url },  altText   },}
export type PostsByCategoryQueryResult = Array<{
  _id: string;
  _type: "post";
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    altText: string | null;
  } | null;
}>;
// Variable: postCategoryBySlugQuery
// Query: * [_type == 'postCategory' && slug.current == $slug][0] {  _id,    _type,    title,    'slug': slug.current,}
export type PostCategoryBySlugQueryResult = {
  _id: string;
  _type: "postCategory";
  title: string | null;
  slug: string | null;
} | null;

// Source: ./src/sanity/lib/queries/documents/privacy.ts
// Variable: privacyPageQuery
// Query: *[_type == 'privacyPage'][0] {	_id,	_type,	title,	content[],	  pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },	"seo": {		"title": coalesce(seo.title, title, ""),		"description": coalesce(seo.description,  ""),		"noIndex": seo.noIndex == true,		"image": seo.image,	},}
export type PrivacyPageQueryResult = {
  _id: string;
  _type: "privacyPage";
  title: string | null;
  content: Array<{
    _key: string;
  } & Table | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;

// Source: ./src/sanity/lib/queries/documents/project.ts
// Variable: projectSlugsQuery
// Query: *[_type == "project" && defined(slug.current)] {  'params': { 'slug': slug.current }}
export type ProjectSlugsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: projectsPageQuery
// Query: *[_type == 'projectsPage'][0] {  _id,  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },  "projects": *[_type == "project"] | order(_createdAt asc) {    _id,    _type,    title,    'slug': slug.current,    excerpt,    category->{      _id,      title,      'slug': slug.current,    },    image {       asset->{ url },       height,      altText     },      pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },  },  "categories": *[_type == "projectCategory"] | order(orderRank asc) {    _id,    _type,    title,    'slug': slug.current,  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type ProjectsPageQueryResult = {
  _id: string;
  _type: "projectsPage";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
  projects: Array<{
    _id: string;
    _type: "project";
    title: string | null;
    slug: string | null;
    excerpt: string | null;
    category: {
      _id: string;
      title: string | null;
      slug: string | null;
    } | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      height: null;
      altText: string | null;
    } | null;
    pageBuilder: Array<{
      _id: null;
      _key: string;
      _type: "accordionAndImageBlock";
      title: null;
      sectionTitle: string | null;
      description: string | null;
      spacing: null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      features: Array<{
        title: string | null;
        description: Array<string> | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "avatarWithDetails";
      sectionTitle: string | null;
      spacing: null;
      avatarList: Array<{
        name: string | null;
        title: string | null;
        avatar: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
        bio: string | null;
        socialLinks: Array<{
          name: string | null;
          url: string | null;
          icon: {
            asset: {
              url: string | null;
              metadata: {
                dimensions: {
                  width: number | null;
                  height: number | null;
                } | null;
              } | null;
            } | null;
          } | null;
        }> | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "callToActionBlock";
      heading: string | null;
      content: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      buttons: Array<{
        _key: string;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      }> | null;
      anchorId: string | null;
      paddingTop: null;
      paddingBottom: null;
    } | {
      _id: null;
      _key: string;
      _type: "clickthroughTopicBlock";
      useCases: Array<{
        title: string | null;
        description: string | null;
        backgroundColor: {
          value: string | null;
        } | null;
        embedUrl: string | null;
      }> | null;
      sectionBackgroundColor: {
        value: string | null;
      } | null;
    } | {
      _id: null;
      _key: string;
      _type: "comparisonTableBlock";
      title: string | null;
      leftColumn: {
        title: string | null;
        icon: {
          asset: {
            url: string | null;
          } | null;
          alt: string | null;
        } | null;
      } | null;
      rightColumn: {
        title: string | null;
        icon: {
          asset: {
            url: string | null;
          } | null;
          alt: string | null;
        } | null;
        backgroundColor: {
          value: string | null;
        } | null;
      } | null;
      rows: Array<{
        leftText: string | null;
        rightText: string | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "featureCardsBlock";
      heading: string | null;
      buttons: Array<{
        _key: string;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      }> | null;
      features: Array<{
        _key: string;
        title: string | null;
        description: string | null;
        items: Array<string> | null;
        image: {
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        button: {
          _key: null;
          showButton: boolean | null;
          buttonText: string | null;
          buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
          buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
          buttonWidth: "auto" | "fullWidth" | null;
          buttonFileUrl: {
            asset: {
              url: string | null;
            } | null;
          } | null;
          buttonPageReference: {
            _id: string;
            _type: "blogPage";
            title: string | null;
            slug: string | null;
          } | {
            _id: string;
            _type: "page";
            title: string | null;
            slug: string | null;
          } | {
            _id: string;
            _type: "project";
            title: string | null;
            slug: string | null;
          } | {
            _id: string;
            _type: "projectsPage";
            title: string | null;
            slug: string | null;
          } | {
            _id: string;
            _type: "service";
            title: string | null;
            slug: string | null;
          } | {
            _id: string;
            _type: "servicesPage";
            title: string | null;
            slug: string | null;
          } | null;
          buttonEmailAddress: string | null;
          buttonExternalUrl: string | null;
          buttonAnchorLocation: "choosePage" | "currentPage" | null;
          buttonAnchorId: string | null;
        } | null;
      }> | null;
      showCallToAction: boolean | null;
      callToActionHeading: string | null;
      callToActionContent: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      callToActionButtons: Array<{
        _key: string;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      }> | null;
      anchorId: string | null;
      paddingTop: null;
      paddingBottom: null;
    } | {
      _id: null;
      _key: string;
      _type: "featuredTestimonialBlock";
      quote: string | null;
      author: {
        name: string | null;
        position: string | null;
        avatar: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: SanityImageDimensions | null;
            } | null;
          } | null;
          alt: null;
        } | null;
      } | null;
      quoteIcon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | {
      _id: null;
      _key: string;
      _type: "featuresMinimalBlock";
      heading: string | null;
      content: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      buttons: Array<{
        _key: string;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      }> | null;
      features: Array<string> | null;
      enableBorderTop: boolean | null;
      cornerRadiusTop: "rounded" | "straight" | null;
      enableBorderBottom: boolean | null;
      cornerRadiusBottom: "rounded" | "straight" | null;
      anchorId: string | null;
      paddingTop: null;
      paddingBottom: null;
    } | {
      _id: null;
      _key: string;
      _type: "formBlock";
      heading: string | null;
      content: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      form: {
        title: string | null;
        submitButtonText: string | null;
        fields: Array<{
          name?: string;
          placeholder?: string;
          inputType?: "email" | "tel" | "text" | "textarea";
          isRequired?: boolean;
          _key: string;
        }> | null;
      } | null;
      anchorId: string | null;
      paddingTop: null;
      paddingBottom: null;
    } | {
      _id: null;
      _key: string;
      _type: "freeformBlock";
      title: string | null;
      columnsPerRow: "2" | "3" | "4" | null;
      columns: Array<{
        _key: string;
        _type: null;
        title: string | null;
        spacing: "large" | "medium" | "none" | "small" | null;
        alignment: "center" | "left" | "right" | null;
        items: Array<{
          _key: string;
          _type: "buttonObject";
          image: null;
          heading: null;
          headingText: null;
          headingTag: null;
          headingSize: null;
          richTextContent: null;
          buttonText: string | null;
          buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
          buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
          buttonPageReference: {
            _id: string;
            title: string | null;
            slug: string | null;
          } | null;
          buttonExternalUrl: string | null;
          spacing: null;
        } | {
          _key: string;
          _type: "headingObject";
          image: null;
          heading: null;
          headingText: string | null;
          headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
          headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
          richTextContent: null;
          buttonText: null;
          buttonVariant: null;
          buttonType: null;
          buttonPageReference: null;
          buttonExternalUrl: null;
          spacing: null;
        } | {
          _key: string;
          _type: "richTextObject";
          image: null;
          heading: null;
          headingText: null;
          headingTag: null;
          headingSize: null;
          richTextContent: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "normal";
            listItem?: never;
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          buttonText: null;
          buttonVariant: null;
          buttonType: null;
          buttonPageReference: null;
          buttonExternalUrl: null;
          spacing: null;
        } | {
          _key: string;
          _type: "singleImageObject";
          image: {
            aspectRatio: null;
            asset: {
              _ref: null;
              _type: "sanity.imageAsset";
              url: string | null;
              altText: string | null;
              description: string | null;
              tags: null;
              title: string | null;
            } | null;
          } | null;
          heading: null;
          headingText: null;
          headingTag: null;
          headingSize: null;
          richTextContent: null;
          buttonText: null;
          buttonVariant: null;
          buttonType: null;
          buttonPageReference: null;
          buttonExternalUrl: null;
          spacing: null;
        } | {
          _key: string;
          _type: "spacerObject";
          image: null;
          heading: null;
          headingText: null;
          headingTag: null;
          headingSize: null;
          richTextContent: null;
          buttonText: null;
          buttonVariant: null;
          buttonType: null;
          buttonPageReference: null;
          buttonExternalUrl: null;
          spacing: "large" | "medium" | "none" | "small" | null;
        }> | null;
      }> | null;
      anchorId: string | null;
      border: "bottom" | "none" | "top" | "topBottom" | null;
    } | {
      _id: null;
      _key: string;
      _type: "frequentlyAskedQuestionBlock";
      title: string | null;
      faqs: Array<{
        question: string | null;
        answer: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "headerBlock";
      heading: string | null;
      content: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      bottomCornerRadius: "rounded" | "straight" | null;
      anchorId: string | null;
    } | {
      _id: null;
      _key: string;
      _type: "heroBannerWithTagBlock";
      tag: string | null;
      headingBold: string | null;
      headingOrdinary: string | null;
      headingWidth: number | null;
      subheading: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      subheadingWidth: number | null;
    } | {
      _id: null;
      _key: string;
      _type: "heroBlock";
      heading: string | null;
      content: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      mediaType: "image" | "none" | null;
      bottomCornerRadius: "rounded" | "straight" | null;
      buttons: Array<{
        _key: string;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      }> | null;
      image: {
        height: "full" | "short" | null;
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      dialogType: "none" | "video" | null;
      videoUrl: string | null;
      overlayType: "dark" | "none" | null;
      anchorId: string | null;
    } | {
      _id: null;
      _key: string;
      _type: "heroClickthroughBlock";
      heading: string | null;
      subheading: string | null;
      headingWidth: number | null;
      subheadingWidth: number | null;
    } | {
      _id: null;
      _key: string;
      _type: "heroSectionBlock";
      title: string | null;
      titleWidth: number | null;
      description: string | null;
      descriptionWidth: number | null;
      showButton: boolean | null;
      button: {
        text: string | null;
        link: string | null;
        variant: "outline" | "primary" | "secondary" | null;
        buttonBelowSpacing: number | null;
      } | null;
      showImage: boolean | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        height: number | null;
        width: number | null;
      } | null;
      modifySpacing: boolean | null;
      spacing: {
        topSpacing: number | null;
        bottomSpacing: number | null;
        titleBelowSpacing: number | null;
        descriptionBelowSpacing: number | null;
        imageBelowSpacing: number | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | {
      _id: null;
      _key: string;
      _type: "iconBlock";
      title: string | null;
      icons: Array<{
        logo: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        altText: string | null;
        width: number | null;
        height: number | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "iconHighlightBlock";
      title: string | null;
      cards: Array<{
        text: string | null;
        image: {
          asset: {
            url: string | null;
          } | null;
        } | null;
      }> | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | {
      _id: null;
      _key: string;
      _type: "iconListBlock";
      heading: string | null;
      features: Array<{
        title: string | null;
        icon: {
          asset: {
            url: string | null;
          } | null;
        } | null;
      }> | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | {
      _id: null;
      _key: string;
      _type: "iconListTwoColumnBlock";
      heading: string | null;
      features: Array<{
        title: string | null;
        description: string | null;
        icon: {
          asset: {
            url: string | null;
          } | null;
        } | null;
      }> | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | {
      _id: null;
      _key: string;
      _type: "itToolsCardBlock";
      title: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      spacing: {
        top: number | null;
        bottom: number | null;
      } | null;
      tools: Array<{
        label: string | null;
        title: string | null;
        description: string | null;
        url: string | null;
        comingSoon: boolean | null;
        buttonText: string | null;
        labelBackground: {
          value: string | null;
        } | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "joinOurNewsletterBlock";
      title: string | null;
      description: string | null;
      placeholder: string | null;
      buttonText: string | null;
      successMessage: string | null;
      processingText: string | null;
      spacing: {
        top: number | null;
        bottom: number | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
      successBorderColor: {
        value: string | null;
      } | null;
      successTextColor: {
        value: string | null;
      } | null;
    } | {
      _id: null;
      _key: string;
      _type: "logoBlock";
      heading: string | null;
      logos: Array<{
        _key: string;
        title: string | null;
        image: {
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        size: "default" | "large" | null;
        link: string | null;
      }> | null;
      anchorId: string | null;
    } | {
      _id: null;
      _key: string;
      _type: "mediaBlock";
      backgroundType: "image" | "video" | null;
      backgroundWidth: "contained" | "full" | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      overlayType: "dark" | "none" | null;
      dialogType: "none" | "video" | null;
      videoUrl: string | null;
      anchorId: string | null;
    } | {
      _id: null;
      _key: string;
      _type: "oktaIdpCustomer";
      title: string | null;
      cards: Array<{
        _key: string;
        mainHeading: string | null;
        description: string | null;
        name: string | null;
        designation: string | null;
        image: {
          alt: string | null;
          width: number | null;
          height: number | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
        avatarImage: {
          alt: string | null;
          width: number | null;
          height: number | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
        impact: Array<{
          _key: string;
          contractCount: string | null;
          contractDesc: string | null;
          reductionRate: string | null;
          reductionDesc: string | null;
        }> | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "oktaIdpHeroSection";
      title: string | null;
      subtitle: string | null;
      description: string | null;
      buttonText: string | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      heroImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      marqueeImages: Array<{
        width: number | null;
        height: number | null;
        asset: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "oktaIdpPointers";
      title: string | null;
      pointers: Array<{
        text: string | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "oktaIdpSaasManagementActuallyWorks";
      title: string | null;
      topLineImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      sections: Array<{
        mainTitle: string | null;
        subTitle: string | null;
        image: {
          alt: string | null;
          width: number | null;
          height: number | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
      bottomLineImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    } | {
      _id: null;
      _key: string;
      _type: "oktaIdpWhySaasSection";
      title: string | null;
      lineImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      cards: Array<{
        mainHeading: string | null;
        description: string | null;
        image: {
          alt: string | null;
          width: number | null;
          height: number | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "pngImageBlock";
      hasFeaturedCard: boolean | null;
      featuredCard: {
        image: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        altText: string | null;
        title: string | null;
        description: string | null;
        bgColor: {
          value: string | null;
        } | null;
      } | null;
      cards: Array<{
        image: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        altText: string | null;
        title: string | null;
        description: string | null;
        bgColor: {
          value: string | null;
        } | null;
      }> | null;
      sectionBgColor: {
        value: string | null;
      } | null;
    } | {
      _id: null;
      _key: string;
      _type: "portableTextBlock";
      title: string | null;
      content: Array<{
        _key: string;
      } & CallToActionObject | {
        _key: string;
      } & Table | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      alignment: "center" | "left" | "right" | null;
      anchorId: string | null;
      paddingTop: null;
      paddingBottom: null;
    } | {
      _id: null;
      _key: string;
      _type: "pricingBlock";
      title: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      pricingBlockReference: {
        _id: string;
        freePilotCard: {
          title: string | null;
          subtitle: string | null;
          features: Array<string> | null;
          buttonText: string | null;
          buttonLink: string | null;
        } | null;
        afterPilotCard: {
          title: string | null;
          price: string | null;
          priceUnit: string | null;
        } | null;
      } | null;
    } | {
      _id: null;
      _key: string;
      _type: "servicesBlock";
      heading: string | null;
      services: Array<{
        _id: string;
        title: string | null;
        shortDescription: string | null;
        image: {
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        slug: string | null;
      }> | null;
      buttons: Array<{
        _key: string;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      }> | null;
      background: "pattern" | "white" | null;
      topCornerRadius: "rounded" | "straight" | null;
      anchorId: string | null;
      paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
      paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
    } | {
      _id: null;
      _key: string;
      _type: "simpleCardBlock";
      title: string | null;
      cards: Array<{
        title: string | null;
        description: string | null;
        image: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: SanityImageDimensions | null;
            } | null;
          } | null;
          alt: string | null;
        } | null;
        backgroundColor: {
          value: string | null;
        } | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "socialReviewBlock";
      title: string | null;
      background: {
        color: {
          value: string | null;
        } | null;
        gradient: boolean | null;
      } | null;
      spacing: {
        top: number | null;
        bottom: number | null;
      } | null;
      avatarImage: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      comments: Array<{
        username: string | null;
        content: string | null;
        width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "stepProcessBlock";
      heading: string | null;
      subheading: string | null;
      steps: Array<{
        number: number | null;
        title: string | null;
        description: string | null;
        badgeColor: {
          value: string | null;
        } | null;
        image: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: SanityImageDimensions | null;
            } | null;
          } | null;
          width: number | null;
          height: number | null;
        } | null;
      }> | null;
      borderColor: {
        value: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | {
      _id: null;
      _key: string;
      _type: "stepRightImageBlock";
      title: string | null;
      steps: Array<{
        number: string | null;
        title: string | null;
      }> | null;
      footnote: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      badgeColor: {
        value: string | null;
      } | null;
      backgroundGradient: {
        topColor: {
          value: string | null;
        } | null;
        bottomColor: {
          value: string | null;
        } | null;
      } | null;
    } | {
      _id: null;
      _key: string;
      _type: "testimonialBlock";
      heading: string | null;
      eyebrow: string | null;
      testimonials: Array<{
        _id: string;
        name: string | null;
        jobTitle: string | null;
        company: string | null;
        quote: string | null;
        avatar: {
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        logo: {
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
      }> | null;
      anchorId: string | null;
      cornerRadiusTop: "rounded" | "straight" | null;
      cornerRadiusBottom: "rounded" | "straight" | null;
      paddingTop: null;
      paddingBottom: null;
    } | {
      _id: null;
      _key: string;
      _type: "testimonialCarouselBlock";
      title: string | null;
      testimonials: Array<{
        text: string | null;
        author: string | null;
        position: string | null;
        avatar: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: SanityImageDimensions | null;
            } | null;
          } | null;
          alt: string | null;
        } | null;
        companyLogo: {
          asset: {
            url: string | null;
          } | null;
          alt: string | null;
          width: number | null;
          height: number | null;
        } | null;
      }> | null;
    } | {
      _key: string;
      _type: "auditReadinessHeroBlock";
      tagline: string | null;
      heading: string | null;
      highlightedText: string | null;
      description: string | null;
      marqueeImages: Array<{
        width: number | null;
        height: number | null;
        asset: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
      video: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    } | {
      _key: string;
      _type: "auditReadinessLeftAccordionBlock";
      tagline: string | null;
      heading: string | null;
      highlightedText: string | null;
      description: string | null;
      accordionItems: Array<{
        heading: string | null;
        subheading: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    } | {
      _key: string;
      _type: "auditReadinessRightAccordionBlock";
      tagline: string | null;
      heading: string | null;
      highlightedText: string | null;
      description: string | null;
      accordionItems: Array<{
        heading: string | null;
        subheading: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    } | {
      _key: string;
      _type: "auditReadinessSolutionsListBlock";
      tagline: string | null;
      heading: string | null;
      highlightedText: string | null;
      teamCards: Array<{
        title: string | null;
        description: string | null;
      }> | null;
    } | {
      _key: string;
      _type: "dataTableBlock";
      heading: string | null;
      subheading: string | null;
      tableHeaders: Array<{
        id: string | null;
        label: string | null;
        width: string | null;
      }> | null;
      tableRows: Array<{
        feature: string | null;
        values: Array<{
          text: string | null;
          color: string | null;
        }> | null;
      }> | null;
    } | {
      _key: string;
      _type: "disconnectedAppsBrandsBlock";
      brandStats: Array<{
        stat: string | null;
        description: string | null;
        width: number | null;
        height: number | null;
        logo: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    } | {
      _key: string;
      _type: "disconnectedAppsEmpoweredTeamsBlock";
      heading: string | null;
      brands: Array<{
        caseStudy: boolean | null;
        caseStudyLink: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    } | {
      _key: string;
      _type: "disconnectedAppsFeaturesBlock";
      heading: string | null;
      highlightedText: string | null;
      description: string | null;
      features: Array<{
        title: string | null;
        description: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    } | {
      _key: string;
      _type: "disconnectedAppsHeroBlock";
      heading: string | null;
      highlightedText: string | null;
      description: string | null;
      ctaLabel: string | null;
      ctaLink: string | null;
      marqueeImages: Array<{
        width: number | null;
        height: number | null;
        asset: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
      heroImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    } | {
      _key: string;
      _type: "disconnectedAppsSectionWithCardsBlock";
      tagline: string | null;
      heading: string | null;
      highlightedText: string | null;
      description: string | null;
      cards: Array<{
        title: string | null;
        description: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    } | {
      _key: string;
      _type: "disconnectedAppsStickyStackBlock";
      eyebrow: string | null;
      heading: string | null;
      highlightedText: string | null;
      description: string | null;
      ctaLabel: string | null;
      ctaLink: string | null;
      features: Array<{
        title: string | null;
        description: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
        mobileImage: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    } | {
      _key: string;
      _type: "oktaIdpCtaSection";
      heading: string | null;
      description: string | null;
      buttonText: string | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    } | {
      _key: string;
      _type: "oktaIdpFaqSection";
      heading: string | null;
      faqs: Array<{
        question: string | null;
        answer: string | null;
      }> | null;
    } | {
      _key: string;
      _type: "oktaIdpTraditionalTools";
      traditionalTools: Array<{
        list: string | null;
        listIcon: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
      stitchflowTools: Array<{
        list: string | null;
        listIcon: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    } | {
      _key: string;
      _type: "samActionBlock";
      tagline: string | null;
      heading: string | null;
      highlightedText: string | null;
      description: string | null;
      videoUrl: string | null;
    } | {
      _key: string;
      _type: "samCardsBlock";
      tagline: string | null;
      heading: string | null;
      highlightedText: string | null;
      description: string | null;
      cards: Array<{
        tagline: string | null;
        heading: string | null;
        description: string | null;
        image: {
          alt: string | null;
          width: number | null;
          height: number | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    } | {
      _key: string;
      _type: "samCenteredBlock";
      badge: string | null;
      title: string | null;
      description: string | null;
      buttonText: string | null;
    } | {
      _key: string;
      _type: "samFixTheGapsBlock";
      title: string | null;
      subtitle: string | null;
      description: string | null;
      accordionItems: Array<{
        heading: string | null;
        subheading: string | null;
        button: string | null;
        image: {
          alt: null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
        icon: {
          alt: null;
          asset: {
            url: string | null;
          } | null;
        } | null;
        subsections: Array<{
          title: string | null;
          desc: string | null;
        }> | null;
      }> | null;
    } | {
      _key: string;
      _type: "samHeroSection";
      title: string | null;
      description: string | null;
      buttonText: string | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      heroImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      backedByImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      marqueeImages: Array<{
        width: number | null;
        height: number | null;
        asset: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    } | {
      _key: string;
      _type: "testimonialV1Block";
      testimonials: Array<{
        company: string | null;
        companyLogo: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
        text: string | null;
        profile: {
          name: string | null;
          role: string | null;
          image: {
            alt: string | null;
            asset: {
              url: string | null;
              metadata: {
                dimensions: {
                  width: number | null;
                  height: number | null;
                } | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  }>;
  categories: Array<{
    _id: string;
    _type: "projectCategory";
    title: string | null;
    slug: string | null;
  }>;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: projectPathsQuery
// Query: *[_type == "project" && defined(slug.current)][] {  'params': { 'slug': slug.current }}
export type ProjectPathsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: projectBySlugQuery
// Query: *[_type == 'project' && slug.current == $slug][0] {  _id,  _type,  title,  'slug': slug.current,  category->{    _id,    title,    'slug': slug.current,  },    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type ProjectBySlugQueryResult = {
  _id: string;
  _type: "project";
  title: string | null;
  slug: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: allProjectsQuery
// Query: *[_type == 'project'] | order(_createdAt asc) {  _id,  _type,  title,  'slug': slug.current,  excerpt,  category->{    _id,    title,    'slug': slug.current,  },  image {     asset->{ url },     height,    altText   },    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },}
export type AllProjectsQueryResult = Array<{
  _id: string;
  _type: "project";
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    height: null;
    altText: string | null;
  } | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
}>;
// Variable: allProjectCategoriesQuery
// Query: *[_type == 'projectCategory'] | order(orderRank asc) {  _id,  _type,  title,  'slug': slug.current,}
export type AllProjectCategoriesQueryResult = Array<{
  _id: string;
  _type: "projectCategory";
  title: string | null;
  slug: string | null;
}>;
// Variable: projectsByCategoryQuery
// Query: *[_type == 'project' && category->slug.current == $slug] {  _id,  _type,  _createdAt,  title,  'slug': slug.current,  excerpt,  category->{    _id,    title,    'slug': slug.current,  },  image {     asset->{ url },     height,    altText   },    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },}
export type ProjectsByCategoryQueryResult = Array<{
  _id: string;
  _type: "project";
  _createdAt: string;
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    height: null;
    altText: string | null;
  } | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
}>;
// Variable: projectCategoryBySlugQuery
// Query: *[_type == 'projectCategory' && slug.current == $slug][0] {  _id,  _type,  title,  'slug': slug.current,}
export type ProjectCategoryBySlugQueryResult = {
  _id: string;
  _type: "projectCategory";
  title: string | null;
  slug: string | null;
} | null;

// Source: ./src/sanity/lib/queries/documents/service.ts
// Variable: serviceSlugsQuery
// Query: *[_type == "service" && defined(slug.current)] {  'params': { 'slug': slug.current }}
export type ServiceSlugsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: serviceBySlugQuery
// Query: *[_type == 'service' && slug.current == $slug][0] {  _id,  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type ServiceBySlugQueryResult = {
  _id: string;
  _type: "service";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: allServicesQuery
// Query: *[_type == 'service'] {  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },}
export type AllServicesQueryResult = Array<{
  _type: "service";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
}>;
// Variable: servicesPageQuery
// Query: *[_type == 'servicesPage'][0] {  _id,  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type ServicesPageQueryResult = {
  _id: string;
  _type: "servicesPage";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;

// Source: ./src/sanity/lib/queries/documents/taming-disconnected-apps.ts
// Variable: tamingDisconnectedAppsPageQuery
// Query: *[_type == "tamingDisconnectedAppsPage"][0] {  _id,  _type,  badge,  title,  subtitle,  description[],  learningPoints[],  keyChallenges[],  formThumbnail{    asset->{      _id,      url    }  },  videoId,  seo {    title,    description,    noIndex,    image,  }}
export type TamingDisconnectedAppsPageQueryResult = {
  _id: string;
  _type: "tamingDisconnectedAppsPage";
  badge: string | null;
  title: string | null;
  subtitle: string | null;
  description: Array<string> | null;
  learningPoints: Array<string> | null;
  keyChallenges: Array<string> | null;
  formThumbnail: {
    asset: {
      _id: string;
      url: string | null;
    } | null;
  } | null;
  videoId: string | null;
  seo: {
    title: string | null;
    description: string | null;
    noIndex: boolean | null;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  } | null;
} | null;

// Source: ./src/sanity/lib/queries/documents/terms.ts
// Variable: termsPageQuery
// Query: *[_type == 'termsPage'][0] {	_id,	_type,	title,	content[],	  pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },	"seo": {		"title": coalesce(seo.title, title, ""),		"description": coalesce(seo.description,  ""),		"noIndex": seo.noIndex == true,		"image": seo.image,	},}
export type TermsPageQueryResult = {
  _id: string;
  _type: "termsPage";
  title: string | null;
  content: Array<{
    _key: string;
  } & Table | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;

// Source: ./src/sanity/lib/queries/misc.ts
// Variable: sitemapQuery
// Query: *[_type in ["page", "post", "project", "service", "blogPage", "projectsPage", "servicesPage"] && defined(slug.current)] {    "href": select(      _type == "page" => "/" + slug.current,      _type == "post" => "/blog/" + slug.current,      _type == "blogPage" => "/blog",      _type == "project" => "/projects/" + slug.current,      slug.current    ),    _updatedAt  }
export type SitemapQueryResult = Array<{
  href: "/blog";
  _updatedAt: string;
} | {
  href: string | null;
  _updatedAt: string;
}>;
// Variable: sitemapSettingsQuery
// Query: *[_type == "sitemap"][0] {    addToSitemap,    removeFromSitemap  }
export type SitemapSettingsQueryResult = {
  addToSitemap: Array<string> | null;
  removeFromSitemap: Array<string> | null;
} | null;
// Variable: redirectsQuery
// Query: *[_type == "redirect" && isEnabled == true] {      source,      destination,      permanent  }
export type RedirectsQueryResult = Array<{
  source: string | null;
  destination: string | null;
  permanent: boolean | null;
}>;

// Source: ./src/sanity/lib/queries/singletons/announcement-bar.ts
// Variable: announcementBarQuery
// Query: *[_type == "announcementBar"][0] {    show,    backgroundColor { value },    textColor { value },    linkColor { value },    icon {        asset->{            url,        }    },    text,    linkText,    link,    excludedRoutes[] {        path    }}
export type AnnouncementBarQueryResult = {
  show: boolean | null;
  backgroundColor: {
    value: string | null;
  } | null;
  textColor: {
    value: string | null;
  } | null;
  linkColor: {
    value: string | null;
  } | null;
  icon: {
    asset: {
      url: string | null;
    } | null;
  } | null;
  text: string | null;
  linkText: string | null;
  link: string | null;
  excludedRoutes: Array<{
    path: string | null;
  }> | null;
} | null;

// Source: ./src/sanity/lib/queries/singletons/demo.ts
// Variable: demoSettingsQuery
// Query: *[_type == 'demoSettings'][0] {  mainHeading,  benefits[] {    icon {      asset->{ url }    },    text  },  trustedByText,  testimonialCard {    quoteText,    authorName,    authorTitle,    authorImage {      asset->{ url }    }  },  testimonialsHeading,  testimonialsG2[] {    name,    jobTitle,    company,    quote,    avatar {      asset->{ url }    },    logo {      asset->{ url }    }  },  logos[] {    asset->{ url }  },  demoComponentHeading,  "seo": {    "title": coalesce(seo.title, "Schedule a demo | Stitchflow"),    "description": coalesce(seo.description, "See how Stitchflow helps IT teams discover shadow apps, fix access risks, and reclaim SaaS waste. Schedule a personalized demo today."),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type DemoSettingsQueryResult = {
  mainHeading: string | null;
  benefits: Array<{
    icon: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    text: string | null;
  }> | null;
  trustedByText: string | null;
  testimonialCard: {
    quoteText: string | null;
    authorName: string | null;
    authorTitle: string | null;
    authorImage: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | null;
  testimonialsHeading: string | null;
  testimonialsG2: Array<{
    name: string | null;
    jobTitle: string | null;
    company: null;
    quote: string | null;
    avatar: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    logo: null;
  }> | null;
  logos: Array<{
    asset: {
      url: string | null;
    } | null;
  }> | null;
  demoComponentHeading: string | null;
  seo: {
    title: string | "Schedule a demo | Stitchflow";
    description: string | "See how Stitchflow helps IT teams discover shadow apps, fix access risks, and reclaim SaaS waste. Schedule a personalized demo today.";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: testimonialsQuery
// Query: *[_type == 'testimonial'] | order(_createdAt desc) {  _id,  name,  jobTitle,  company,  quote,  avatar {    asset->{ url }  },  logo {    asset->{ url }  }}
export type TestimonialsQueryResult = Array<{
  _id: string;
  name: string | null;
  jobTitle: string | null;
  company: string | null;
  quote: string | null;
  avatar: {
    asset: {
      url: string | null;
    } | null;
  } | null;
  logo: {
    asset: {
      url: string | null;
    } | null;
  } | null;
}>;

// Source: ./src/sanity/lib/queries/singletons/footer-co-links.ts
// Variable: footerCoLinksQuery
// Query: *[_type == "footer"][0] {  footerCoLinks {    companyNameMark {      asset->{        url,      }    },    copyright,    coLinks[] {      label,      url    },    businessEmail,  }}
export type FooterCoLinksQueryResult = {
  footerCoLinks: {
    companyNameMark: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    copyright: string | null;
    coLinks: Array<{
      label: string | null;
      url: string | null;
    }> | null;
    businessEmail: string | null;
  } | null;
} | null;

// Source: ./src/sanity/lib/queries/singletons/footer-cta.ts
// Variable: footerCTAQuery
// Query: *[_type == "footer"][0] {  footerCTA {    title,    description,    ctaButton {      text,      link,      variant    },    desktopImage {      src {        asset->{          url        }      },      alt,      width,      height    },    mobileImage {      src {        asset->{          url        }      },      alt,      width,      height    }  },  footerCTAexcludedRoutes[] {    path  }}
export type FooterCTAQueryResult = {
  footerCTA: {
    title: string | null;
    description: string | null;
    ctaButton: {
      text: string | null;
      link: string | null;
      variant: "danger" | "outline" | "primary" | "secondary" | null;
    } | null;
    desktopImage: {
      src: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      alt: string | null;
      width: number | null;
      height: number | null;
    } | null;
    mobileImage: {
      src: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      alt: string | null;
      width: number | null;
      height: number | null;
    } | null;
  } | null;
  footerCTAexcludedRoutes: Array<{
    path: string | null;
  }> | null;
} | null;

// Source: ./src/sanity/lib/queries/singletons/footer-links.ts
// Variable: footerLinksQuery
// Query: *[_type == "footer"][0] {  footerLinks {    companyLogo {      asset->{        url,      }    },    backedBy {      asset->{        url,      }    },    socialLinks[] {      platform,      url,      icon {          asset->{              url,          }      }    },    certifications[] {      label,      icon {          asset->{              url,          }      }    },    reviewBadges[] {      url,      icon {          asset->{              url,          }      }    },    platform[] {      label,      url,      badge    },    resources[] {      label,      url,      badge    },    companys[] {      label,      url,      badge    },    getStarted[] {      label,      url,      badge    },    freeTools[] {      label,      url,      badge    },    customers[] {      label,      url,      badge    },    popularGuides[] {      label,      url,      badge    }  }}
export type FooterLinksQueryResult = {
  footerLinks: {
    companyLogo: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    backedBy: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    socialLinks: Array<{
      platform: string | null;
      url: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    certifications: Array<{
      label: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    reviewBadges: Array<{
      url: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    platform: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    resources: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    companys: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    getStarted: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    freeTools: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    customers: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    popularGuides: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
  } | null;
} | null;

// Source: ./src/sanity/lib/queries/singletons/footer.ts
// Variable: footerQuery
// Query: *[_type == "footer"][0] {  footerCTA {    title,    description,    ctaButton {      text,      link,      variant    },    desktopImage {      src {        asset->{          url        }      },      alt,      width,      height    },    mobileImage {      src {        asset->{          url        }      },      alt,      width,      height    }  },  footerLinks {    companyLogo {      asset->{        url,      }    },    backedBy {      asset->{        url,      }    },    socialLinks[] {      platform,      url,      icon {          asset->{              url,          }      }    },    certifications[] {      label,      icon {          asset->{              url,          }      }    },    reviewBadges[] {      url,      icon {          asset->{              url,          }      }    },    platform[] {      label,      url,      badge    },    resources[] {      label,      url,      badge    },    companys[] {      label,      url,      badge    },    getStarted[] {      label,      url,      badge    },    freeTools[] {      label,      url,      badge    },    customers[] {      label,      url,      badge    },    popularGuides[] {      label,      url,      badge    },  },  footerCoLinks {    companyNameMark {      asset->{        url,      }    },    copyright,    coLinks[] {      label,      url    },    businessEmail,  },  footerExcludedRoutes[] {    path  },  footerCTAexcludedRoutes[] {    path  }}
export type FooterQueryResult = {
  footerCTA: {
    title: string | null;
    description: string | null;
    ctaButton: {
      text: string | null;
      link: string | null;
      variant: "danger" | "outline" | "primary" | "secondary" | null;
    } | null;
    desktopImage: {
      src: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      alt: string | null;
      width: number | null;
      height: number | null;
    } | null;
    mobileImage: {
      src: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      alt: string | null;
      width: number | null;
      height: number | null;
    } | null;
  } | null;
  footerLinks: {
    companyLogo: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    backedBy: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    socialLinks: Array<{
      platform: string | null;
      url: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    certifications: Array<{
      label: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    reviewBadges: Array<{
      url: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    platform: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    resources: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    companys: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    getStarted: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    freeTools: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    customers: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    popularGuides: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
  } | null;
  footerCoLinks: {
    companyNameMark: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    copyright: string | null;
    coLinks: Array<{
      label: string | null;
      url: string | null;
    }> | null;
    businessEmail: string | null;
  } | null;
  footerExcludedRoutes: Array<{
    path: string | null;
  }> | null;
  footerCTAexcludedRoutes: Array<{
    path: string | null;
  }> | null;
} | null;

// Source: ./src/sanity/lib/queries/singletons/home-page.ts
// Variable: homePageQuery
// Query: *[_type == "homePage"][0] {  _id,  _type,  heading,  headingWidth,  subheading,  subheadingWidth,  clickthrough,  emailCapture,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        value      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },    backgroundColor {      value    }  },      _type == "comparisonTableBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        value      }    },    rows[] {      leftText,      rightText    }  },      _type == "testimonialCarouselBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    testimonials[] {      text,      author,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      },      companyLogo {        asset->{          url        },        alt,        width,        height      }    }  },      _type == "heroSectionBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    titleWidth,    description,    descriptionWidth,    showButton,    button {      text,      link,      variant,      buttonBelowSpacing    },    showImage,    image {      asset->{        url,        metadata {          dimensions        }      },      height,      width    },    modifySpacing,    spacing {      topSpacing,      bottomSpacing,      titleBelowSpacing,      descriptionBelowSpacing,      imageBelowSpacing    },    backgroundColor {      value    }  },      _type == "stepProcessBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    subheading,    steps[] {      number,      title,      description,      badgeColor {        value      },      image {        asset->{          url,          metadata {            dimensions          }        },        width,        height      }    },    borderColor {      value    },    backgroundColor {      value    }  },      _type == "clickthroughTopicBlock" => {      _id,  _key,  _type,    _key,    _type,    useCases[] {      title,      description,      backgroundColor {        value      },      embedUrl,    },    sectionBackgroundColor {      value    }  },      _type == "stepRightImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    steps[] {      number,      title    },    footnote,    image {      asset->{        url,        metadata {          dimensions        }      },      alt    },    badgeColor {      value    },    backgroundGradient {      topColor {        value      },      bottomColor {        value      }    }  },      _type == "iconListBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconListTwoColumnBlock" => {      _id,  _key,  _type,    _key,    _type,    heading,    features[] {      title,      description,      icon {        asset->{          url        }      }    },    backgroundColor {      value    },  },      _type == "iconHighlightBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[]{      text,      image {        asset->{          url,        }      }    },    backgroundColor {      value    },  },      _type == "pricingBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor{      value    },    pricingBlockReference->{      _id,      freePilotCard{        title,        subtitle,        features,        buttonText,        buttonLink      },      afterPilotCard{        title,        price,        priceUnit      },    }  },      _type == "itToolsCardBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    backgroundColor {      value    },    spacing {      top,      bottom    },    tools[] {      label,      title,      description,      url,      comingSoon,      buttonText,      labelBackground {        value      }    }  },      _type == "socialReviewBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    background {      color {        value      },      gradient    },    spacing {      top,      bottom    },    avatarImage {      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    comments[] {      username,      content,      width    }  },      _type == "accordionAndImageBlock" => {      _id,  _key,  _type,    _key,    _type,    title,    sectionTitle,    description,    spacing {      top,      bottom    },    image {      asset->{        url,      }    },    features[] {      title,      description    }  },      _type == "frequentlyAskedQuestionBlock" => {      _id,  _key,  _type,    title,    faqs[] {      question,      answer    }  },      _type == "joinOurNewsletterBlock" => {      _id,  _key,  _type,    title,    description,    placeholder,    buttonText,    successMessage,    processingText,    spacing {      top,      bottom    },    backgroundColor {      value    },    successBorderColor {      value    },    successTextColor {      value    }  },      _type == "avatarWithDetails" => {      _id,  _key,  _type,    _key,    _type,    sectionTitle,    spacing {      topSpacing,      topSpacingMobile,      bottomSpacing,      bottomSpacingMobile,      headingBottomSpacing,      headingBottomSpacingMobile    },    avatarList[]{      name,      title,      avatar {        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      },      bio,      socialLinks[]{        name,        url,        icon {          asset->{            url,            metadata {              dimensions {                width,                height              }            }          }        }      }    }  },      _type == "iconBlock" => {      _id,  _key,  _type,      title,      icons[] {      logo { asset->{url} },      altText,      width,      height    },  },      _type == "pngImageBlock" => {      _id,  _key,  _type,    hasFeaturedCard,    featuredCard {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    cards[] {      image { asset->{url} },      altText,      title,      description,      bgColor { value }    },    sectionBgColor { value }  },      _type == "oktaIdpHeroSection" => {      _id,  _key,  _type,    _key,    _type,    title,    subtitle,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata {            dimensions {              width,              height            }          }        }      }    }  },      _type == "oktaIdpWhySaasSection" => {      _id,  _key,  _type,    _key,    _type,    title,    lineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    cards[] {      mainHeading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "oktaIdpPointers" => {      _id,  _key,  _type,    _key,    _type,    title,    pointers[] {      text    }  },      _type == "oktaIdpSaasManagementActuallyWorks" => {      _id,  _key,  _type,    _key,    _type,    title,    topLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    sections[] {      mainTitle,      subTitle,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    bottomLineImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },  },      _type == "oktaIdpCustomer" => {      _id,  _key,  _type,    _key,    _type,    title,    cards[] {      _key,      mainHeading,      description,      name,      designation,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      avatarImage {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      },      impact[] {        _key,        contractCount,        contractDesc,        reductionRate,        reductionDesc      }    }  },      _type == "oktaIdpTraditionalTools" => {    _key,    _type,    traditionalTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    },    stitchflowTools[] {      list,      listIcon {        alt,        asset->{          url,          metadata {            dimensions { width, height }          }        }      }    }  },      _type == "oktaIdpFaqSection" => {    _key,    _type,    heading,    faqs[] {      question,      answer    }  },      _type == "oktaIdpCtaSection" => {    _key,    _type,    heading,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "samHeroSection" => {    _key,    _type,    title,    description,    buttonText,    avatarImage {      alt,      width,      height,      asset->{        url,        metadata {          dimensions {            width,            height          }        }      }    },    heroImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    backedByImage {      alt,      width,      height,      asset->{        url,        metadata { dimensions { width, height } }      }    },    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samCenteredBlock" => {    _key,    _type,    badge,    title,    description,    buttonText  },      _type == "samCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      tagline,      heading,      description,      image {        alt,        width,        height,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "samFixTheGapsBlock" => {    _key,    _type,    title,    subtitle,    description,    accordionItems[] {      heading,      subheading,      button,      image {        alt,        asset-> { url, metadata { dimensions { width, height } } }      },      icon {        alt,        asset-> { url }      },      subsections[] {        title,        desc      }    }  },      _type == "samActionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    videoUrl  },      _type == "auditReadinessHeroBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    video {      asset->{        url      }    }  },      _type == "auditReadinessLeftAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessRightAccordionBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    accordionItems[] {      heading,      subheading,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "auditReadinessSolutionsListBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    teamCards[] {      title,      description    }  },      _type == "disconnectedAppsHeroBlock" => {    _key,    _type,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    marqueeImages[] {      width,      height,      asset {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    },    heroImage {      alt,      asset->{        url,        metadata { dimensions { width, height } }      }    }  },      _type == "disconnectedAppsBrandsBlock" => {    _key,    _type,    brandStats[] {      stat,      description,      width,      height,      logo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsStickyStackBlock" => {    _key,    _type,    eyebrow,    heading,    highlightedText,    description,    ctaLabel,    ctaLink,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      mobileImage {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsFeaturesBlock" => {    _key,    _type,    heading,    highlightedText,    description,    features[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsSectionWithCardsBlock" => {    _key,    _type,    tagline,    heading,    highlightedText,    description,    cards[] {      title,      description,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "disconnectedAppsEmpoweredTeamsBlock" => {    _key,    _type,    heading,    brands[] {      caseStudy,      caseStudyLink,      image {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      }    }  },      _type == "heroBannerWithTagBlock" => {      _id,  _key,  _type,    tag,    headingBold,    headingOrdinary,    headingWidth,    subheading[],    subheadingWidth  },      _type == "dataTableBlock" => {    _key,    _type,    heading,    subheading,    tableHeaders[] {      id,      label,      width    },    tableRows[] {      feature,      values[] {        text,        color      }    }  },      _type == "testimonialV1Block" => {    _key,    _type,    testimonials[] {      company,      companyLogo {        alt,        asset->{          url,          metadata { dimensions { width, height } }        }      },      text,      profile {        name,        role,        image {          alt,          asset->{            url,            metadata { dimensions { width, height } }          }        }      }    }  }  },  "seo": {    "title": coalesce(seo.title, heading, ""),    "description": coalesce(seo.description, ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type HomePageQueryResult = {
  _id: string;
  _type: "homePage";
  heading: string | null;
  headingWidth: number | null;
  subheading: string | null;
  subheadingWidth: number | null;
  clickthrough: string | null;
  emailCapture: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "accordionAndImageBlock";
    title: null;
    sectionTitle: string | null;
    description: string | null;
    spacing: null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    features: Array<{
      title: string | null;
      description: Array<string> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "avatarWithDetails";
    sectionTitle: string | null;
    spacing: null;
    avatarList: Array<{
      name: string | null;
      title: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      bio: string | null;
      socialLinks: Array<{
        name: string | null;
        url: string | null;
        icon: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "clickthroughTopicBlock";
    useCases: Array<{
      title: string | null;
      description: string | null;
      backgroundColor: {
        value: string | null;
      } | null;
      embedUrl: string | null;
    }> | null;
    sectionBackgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "frequentlyAskedQuestionBlock";
    title: string | null;
    faqs: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBannerWithTagBlock";
    tag: string | null;
    headingBold: string | null;
    headingOrdinary: string | null;
    headingWidth: number | null;
    subheading: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroSectionBlock";
    title: string | null;
    titleWidth: number | null;
    description: string | null;
    descriptionWidth: number | null;
    showButton: boolean | null;
    button: {
      text: string | null;
      link: string | null;
      variant: "outline" | "primary" | "secondary" | null;
      buttonBelowSpacing: number | null;
    } | null;
    showImage: boolean | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      height: number | null;
      width: number | null;
    } | null;
    modifySpacing: boolean | null;
    spacing: {
      topSpacing: number | null;
      bottomSpacing: number | null;
      titleBelowSpacing: number | null;
      descriptionBelowSpacing: number | null;
      imageBelowSpacing: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconBlock";
    title: string | null;
    icons: Array<{
      logo: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      width: number | null;
      height: number | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconHighlightBlock";
    title: string | null;
    cards: Array<{
      text: string | null;
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "iconListTwoColumnBlock";
    heading: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "itToolsCardBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    tools: Array<{
      label: string | null;
      title: string | null;
      description: string | null;
      url: string | null;
      comingSoon: boolean | null;
      buttonText: string | null;
      labelBackground: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "joinOurNewsletterBlock";
    title: string | null;
    description: string | null;
    placeholder: string | null;
    buttonText: string | null;
    successMessage: string | null;
    processingText: string | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
    successBorderColor: {
      value: string | null;
    } | null;
    successTextColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpCustomer";
    title: string | null;
    cards: Array<{
      _key: string;
      mainHeading: string | null;
      description: string | null;
      name: string | null;
      designation: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      avatarImage: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      impact: Array<{
        _key: string;
        contractCount: string | null;
        contractDesc: string | null;
        reductionRate: string | null;
        reductionDesc: string | null;
      }> | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpHeroSection";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpPointers";
    title: string | null;
    pointers: Array<{
      text: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpSaasManagementActuallyWorks";
    title: string | null;
    topLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    sections: Array<{
      mainTitle: string | null;
      subTitle: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    bottomLineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "oktaIdpWhySaasSection";
    title: string | null;
    lineImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    cards: Array<{
      mainHeading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "pngImageBlock";
    hasFeaturedCard: boolean | null;
    featuredCard: {
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    } | null;
    cards: Array<{
      image: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      altText: string | null;
      title: string | null;
      description: string | null;
      bgColor: {
        value: string | null;
      } | null;
    }> | null;
    sectionBgColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      _key: string;
    } & Table | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "pricingBlock";
    title: string | null;
    backgroundColor: {
      value: string | null;
    } | null;
    pricingBlockReference: {
      _id: string;
      freePilotCard: {
        title: string | null;
        subtitle: string | null;
        features: Array<string> | null;
        buttonText: string | null;
        buttonLink: string | null;
      } | null;
      afterPilotCard: {
        title: string | null;
        price: string | null;
        priceUnit: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        value: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "socialReviewBlock";
    title: string | null;
    background: {
      color: {
        value: string | null;
      } | null;
      gradient: boolean | null;
    } | null;
    spacing: {
      top: number | null;
      bottom: number | null;
    } | null;
    avatarImage: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    comments: Array<{
      username: string | null;
      content: string | null;
      width: "md:w-1/3" | "md:w-2/3" | "w-full" | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepProcessBlock";
    heading: string | null;
    subheading: string | null;
    steps: Array<{
      number: number | null;
      title: string | null;
      description: string | null;
      badgeColor: {
        value: string | null;
      } | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
    borderColor: {
      value: string | null;
    } | null;
    backgroundColor: {
      value: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "stepRightImageBlock";
    title: string | null;
    steps: Array<{
      number: string | null;
      title: string | null;
    }> | null;
    footnote: string | null;
    image: {
      asset: {
        url: string | null;
        metadata: {
          dimensions: SanityImageDimensions | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    badgeColor: {
      value: string | null;
    } | null;
    backgroundGradient: {
      topColor: {
        value: string | null;
      } | null;
      bottomColor: {
        value: string | null;
      } | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialCarouselBlock";
    title: string | null;
    testimonials: Array<{
      text: string | null;
      author: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      companyLogo: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
        width: number | null;
        height: number | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessHeroBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    video: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "auditReadinessLeftAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessRightAccordionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "auditReadinessSolutionsListBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    teamCards: Array<{
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "dataTableBlock";
    heading: string | null;
    subheading: string | null;
    tableHeaders: Array<{
      id: string | null;
      label: string | null;
      width: string | null;
    }> | null;
    tableRows: Array<{
      feature: string | null;
      values: Array<{
        text: string | null;
        color: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsBrandsBlock";
    brandStats: Array<{
      stat: string | null;
      description: string | null;
      width: number | null;
      height: number | null;
      logo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsEmpoweredTeamsBlock";
    heading: string | null;
    brands: Array<{
      caseStudy: boolean | null;
      caseStudyLink: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsFeaturesBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsHeroBlock";
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    heroImage: {
      alt: string | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "disconnectedAppsSectionWithCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "disconnectedAppsStickyStackBlock";
    eyebrow: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    ctaLabel: string | null;
    ctaLink: string | null;
    features: Array<{
      title: string | null;
      description: string | null;
      image: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileImage: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpCtaSection";
    heading: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
  } | {
    _key: string;
    _type: "oktaIdpFaqSection";
    heading: string | null;
    faqs: Array<{
      question: string | null;
      answer: string | null;
    }> | null;
  } | {
    _key: string;
    _type: "oktaIdpTraditionalTools";
    traditionalTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
    stitchflowTools: Array<{
      list: string | null;
      listIcon: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samActionBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    videoUrl: string | null;
  } | {
    _key: string;
    _type: "samCardsBlock";
    tagline: string | null;
    heading: string | null;
    highlightedText: string | null;
    description: string | null;
    cards: Array<{
      tagline: string | null;
      heading: string | null;
      description: string | null;
      image: {
        alt: string | null;
        width: number | null;
        height: number | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "samCenteredBlock";
    badge: string | null;
    title: string | null;
    description: string | null;
    buttonText: string | null;
  } | {
    _key: string;
    _type: "samFixTheGapsBlock";
    title: string | null;
    subtitle: string | null;
    description: string | null;
    accordionItems: Array<{
      heading: string | null;
      subheading: string | null;
      button: string | null;
      image: {
        alt: null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      icon: {
        alt: null;
        asset: {
          url: string | null;
        } | null;
      } | null;
      subsections: Array<{
        title: string | null;
        desc: string | null;
      }> | null;
    }> | null;
  } | {
    _key: string;
    _type: "samHeroSection";
    title: string | null;
    description: string | null;
    buttonText: string | null;
    avatarImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    heroImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    backedByImage: {
      alt: string | null;
      width: number | null;
      height: number | null;
      asset: {
        url: string | null;
        metadata: {
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    marqueeImages: Array<{
      width: number | null;
      height: number | null;
      asset: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "testimonialV1Block";
    testimonials: Array<{
      company: string | null;
      companyLogo: {
        alt: string | null;
        asset: {
          url: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      text: string | null;
      profile: {
        name: string | null;
        role: string | null;
        image: {
          alt: string | null;
          asset: {
            url: string | null;
            metadata: {
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
        } | null;
      } | null;
    }> | null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;

// Source: ./src/sanity/lib/queries/singletons/navbar.ts
// Variable: navbarQuery
// Query: *[_type =="navbar"][0]{  logo {    src {      asset->{        _id,        url      }    },    alt,    width,    height  },  menuItems[] {    name,    hasDropdown,    dropdownItems[] {      title,      description,      path    },    path  },  ctaButton {    text,    link,    variant  },  excludedRoutes[] {    path  }}
export type NavbarQueryResult = {
  logo: {
    src: {
      asset: {
        _id: string;
        url: string | null;
      } | null;
    } | null;
    alt: string | null;
    width: number | null;
    height: number | null;
  } | null;
  menuItems: Array<{
    name: string | null;
    hasDropdown: boolean | null;
    dropdownItems: Array<{
      title: string | null;
      description: string | null;
      path: string | null;
    }> | null;
    path: string | null;
  }> | null;
  ctaButton: {
    text: string | null;
    link: string | null;
    variant: "danger" | "outline" | "primary" | "secondary" | null;
  } | null;
  excludedRoutes: Array<{
    path: string | null;
  }> | null;
} | null;

// Source: ./src/sanity/lib/queries/singletons/og.ts
// Variable: ogImageQuery
// Query: *[_id == $id][0]{    title,  }
export type OgImageQueryResult = {
  title: null;
} | {
  title: string | null;
} | null;

// Source: ./src/sanity/lib/queries/singletons/settings.ts
// Variable: generalSettingsQuery
// Query: *[_type == 'generalSettings'][0] {  siteTitle,  siteLogo {     asset->{ url },  },  copyright,  homePage->{    _id,    _type,    title,    'slug': slug.current,    "seo": {      "title": coalesce(seo.title, title, ""),      "description": coalesce(seo.description,  ""),      "noIndex": seo.noIndex == true,      "image": seo.image,    },  },}
export type GeneralSettingsQueryResult = {
  siteTitle: string | null;
  siteLogo: {
    asset: {
      url: string | null;
    } | null;
  } | null;
  copyright: string | null;
  homePage: {
    _id: string;
    _type: "blogPage";
    title: string | null;
    slug: string | null;
    seo: {
      title: string | "";
      description: string | "";
      noIndex: boolean | false;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  } | {
    _id: string;
    _type: "page";
    title: string | null;
    slug: string | null;
    seo: {
      title: string | "";
      description: string | "";
      noIndex: boolean | false;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  } | {
    _id: string;
    _type: "project";
    title: string | null;
    slug: string | null;
    seo: {
      title: string | "";
      description: string | "";
      noIndex: boolean | false;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  } | {
    _id: string;
    _type: "projectsPage";
    title: string | null;
    slug: string | null;
    seo: {
      title: string | "";
      description: string | "";
      noIndex: boolean | false;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  } | {
    _id: string;
    _type: "service";
    title: string | null;
    slug: string | null;
    seo: {
      title: string | "";
      description: string | "";
      noIndex: boolean | false;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  } | {
    _id: string;
    _type: "servicesPage";
    title: string | null;
    slug: string | null;
    seo: {
      title: string | "";
      description: string | "";
      noIndex: boolean | false;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  } | null;
} | null;
// Variable: marketingSettingsQuery
// Query: *[_type == 'marketingSettings'][0] {  googleAnalyticsId,  googleTagManagerId,}
export type MarketingSettingsQueryResult = {
  googleAnalyticsId: string | null;
  googleTagManagerId: string | null;
} | null;
// Variable: blogSettingsQuery
// Query: *[_type == 'blogSettings'][0] {  showRelatedPosts,  showTableOfContents,  showPostsByCategory}
export type BlogSettingsQueryResult = {
  showRelatedPosts: boolean | null;
  showTableOfContents: boolean | null;
  showPostsByCategory: null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type == 'author' && slug.current == $slug][0] {\n  _id,\n  _type,\n  name,\n  avatar {\n    asset -> {\n      url\n    }\n  },\n  bio,\n  socials[] {\n    platform,\n    url,\n    customIcon {\n      asset -> {\n        url\n      }\n    }\n  },\n  \"posts\": *[_type == 'post' && author._ref == ^._id] {\n    _id,\n    title,\n    'slug': slug.current,\n    excerpt,\n    publishedAt,\n    category -> {\n      title,\n      slug\n    },\n    image {\n      asset -> {\n        url\n      },\n      altText\n    }\n  }\n}": AuthorBySlugQueryResult;
    "*[_type == \"casestudy\" && defined(slug.current)] {\n  'params': { 'slug': slug.current }\n}": CasestudySlugsQueryResult;
    "*[_type == 'casestudiesPage'][0] {\n  _id,\n  _type,\n  'slug': slug.current,\n  heroText,\n  heroDescription,\n  featuredCS->{\n    _id,\n    _type,\n    company,\n    'slug': slug.current,\n    logo { \n      asset->{ url }, \n      altText \n    },\n    backgroundColor {\n      value\n    },\n    cardSummary,\n  },\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n  \"casestudies\": *[_type == 'casestudy'] | order(orderRank asc) {\n    _id,\n    _type,\n    _createdAt,\n    company,\n    'slug': slug.current,\n    logo { \n      asset->{ url }, \n      altText \n    },\n    backgroundColor {\n      value\n    },\n    cardSummary,\n  },\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": CasestudiesPageQueryResult;
    "*[_type == 'casestudy' && slug.current == $slug][0] {\n  _id,\n  _type,\n  _createdAt,\n  company,\n  'slug': slug.current,\n  content[],\n  relatedCaseStudies,\n  \"relatedCasestudies\": select(\n    relatedCaseStudies == \"custom\" => customRelatedPosts[]->{ \n      _id,\n      _type,\n      _createdAt,\n      company,\n      'slug': slug.current,\n      logo { \n        asset->{ url }, \n        altText \n      },\n      backgroundColor {\n        value\n      },\n      cardTitle,\n    },\n    relatedCaseStudies == \"autofill\" => *[_type == 'casestudy' && _id != ^._id][0...2]{ \n      _id,\n      _type,\n      _createdAt,\n      company,\n      'slug': slug.current,\n      logo { \n        asset->{ url }, \n        altText \n      },\n      backgroundColor {\n        value\n      },\n      cardTitle,\n    },\n  ),\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": CasestudyBySlugQueryResult;
    "*[_type == 'casestudy'] | order(orderRank asc) {\n  _id,\n  _type,\n  company,\n  'slug': slug.current,\n  logo { \n    asset->{ url }, \n    altText \n  },\n  backgroundColor {\n    value\n  },\n  cardTitle,\n  cardSummary,\n}": AllCasestudiesQueryResult;
    "*[_type == 'casestudy' && _id != $featuredId] | order(orderRank asc) {\n  _id,\n  _type,\n  company,\n  'slug': slug.current,\n  logo { \n    asset->{ url }, \n    altText \n  },\n  backgroundColor {\n    value\n  },\n  cardSummary,\n}": CasestudiesExcludingFeaturedQueryResult;
    "\n  *[_type == 'integrationsPage'][0] {\n    _id,\n    _type,\n    title,\n    description,\n    heroImageDesktop {\n      asset->{ url }\n    },\n    heroImageMobile {\n      asset->{ url }\n    },\n    headerActionButton,\n    \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n    \"seo\": {\n      \"title\": coalesce(seo.title, title, \"\"),\n      \"description\": coalesce(seo.description, \"\"),\n      \"noIndex\": seo.noIndex == true,\n      \"image\": seo.image,\n    },\n  }\n": IntegrationPageQueryResult;
    "\n  *[_type == 'integrationApplication'] | order(orderRank asc) {\n    _id,\n    _type,\n    applicationName,\n    image {\n      asset->{ url },\n      altText\n    },\n    category->{\n      _id,\n      _type,\n      title,\n      'slug': slug.current,\n    },\n    addDescription,\n    applicationDesc,\n  }\n": AllIntegrationApplicationsQueryResult;
    "\n  *[_type == 'integrationCategory'] | order(orderRank asc) {\n    _id,\n    _type,\n    title,\n    'slug': slug.current,\n  }\n": AllIntegrationCategoriesQueryResult;
    "\n  *[_type == 'integrationApplication' && category._ref == $categoryId] | order(orderRank asc) {\n    _id,\n    _type,\n    applicationName,\n    image {\n      asset->{ url },\n      altText\n    },\n    category->{\n      _id,\n      _type,\n      title,\n      'slug': slug.current,\n    },\n    addDescription,\n    applicationDesc,\n  }\n": IntegrationApplicationsByCategoryQueryResult;
    "\n  *[_type == 'integrationCategory' && slug.current == $slug][0] {\n    _id,\n    _type,\n    title,\n    'slug': slug.current,\n  }\n": IntegrationCategoryBySlugQueryResult;
    "*[_type == \"page\" && defined(slug.current)] {\n  'params': { 'slug': slug.current }\n}": PageSlugsQueryResult;
    "*[_type == 'page' && slug.current == $slug][0] {\n  _type,\n  _id,\n  title,\n  pageType,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": PageBySlugQueryResult;
    "*[_type == \"post\" && defined(slug.current)] {\n  'params': { 'slug': slug.current }\n}": PostSlugsQueryResult;
    "*[_type == 'blogPage'][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  heroText,\n  featuredBlog->{\n    _id,\n    _type,\n    title,\n    'slug': slug.current,\n    excerpt,\n    category->{\n      _id,\n      title,\n      'slug': slug.current,\n    },\n    image { \n      asset->{ url }, \n      altText \n    },\n  },\n  editorsPicks[]->{\n    _id,\n    _type,\n    title,\n    'slug': slug.current,\n    excerpt,\n    category->{\n      _id,\n      title,\n      'slug': slug.current,\n    },\n    image { \n      asset->{ url }, \n      altText \n    },\n  },\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n  \"posts\": *[_type == 'post'] | order(publishedAt desc) {\n    _id,\n    _type,\n    _createdAt,\n    title,\n    'slug': slug.current,\n    excerpt,\n    category->{\n      _id,\n      title,\n      'slug': slug.current,\n    },\n    image { \n      asset->{ url }, \n      altText \n    },\n  },\n  \"categories\": *[_type == \"postCategory\"] | order(orderRank asc) {\n    _id,\n    _type,\n    title,\n    'slug': slug.current,\n  },\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": BlogPageQueryResult;
    "*[_type == 'post' && slug.current == $slug][0] {\n  _id,\n  _type,\n  _createdAt,\n  publishedAt,\n  isModified,\n  modifiedAt,\n  readTime,\n  title,\n  'slug': slug.current,\n  excerpt,\n  \"tableOfContents\": content[style in [\"h2\"]],\n  content[],\n  faqs[] {\n    question,\n    answer\n  },\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  author->{\n    _id,\n    name,\n    'slug': slug.current,\n    position,\n    bio,\n    avatar { \n      asset->{ url }, \n    },\n    socials[] {\n      platform,\n      url,\n      customIcon {\n        asset->{ url },\n      },\n    }\n  },\n  relatedPostsType,\n  \"relatedPosts\": select(\n    relatedPostsType == \"custom\" => customRelatedPosts[]->{ \n      _id,\n      _type,\n      _createdAt,\n      title,\n      'slug': slug.current,\n      excerpt,\n      category->{\n        _id,\n        title,\n        'slug': slug.current,\n      },\n      image { \n        asset->{ url }, \n        altText \n      }\n    },\n    relatedPostsType == \"autofill\" => *[_type == 'post' && category._ref == ^.category._ref && _id != ^._id][0...3]{ \n      _id,\n      _type,\n      _createdAt,\n      title,\n      'slug': slug.current,\n      category->{\n        _id,\n        title,\n        'slug': slug.current,\n      },\n      excerpt,\n      image { \n        asset->{ url }, \n        altText \n      }\n    },\n  ),\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": PostBySlugQueryResult;
    "*[_type == 'post'] | order(_createdAt asc) {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  excerpt,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  image { \n    asset->{ url }, \n    altText \n  },\n}": AllPostsQueryResult;
    "\n{\n  \"posts\": *[_type == \"post\"] | order(_createdAt desc) [$offset...$end] {\n    _id,\n    _type,\n    title,\n    'slug': slug.current,\n    excerpt,\n    category->{\n      _id,\n      title,\n      'slug': slug.current,\n    },\n    image {\n      asset->{ url },\n      altText\n    },\n  },\n  \"total\": count(*[_type == \"post\"])\n}\n": PaginatedPostsQueryResult;
    "* [_type == 'postCategory'] | order(orderRank asc) {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n}": AllPostCategoriesQueryResult;
    "* [_type == 'post' && category -> slug.current == $slug] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  excerpt,\n  category-> {\n  _id,\n  title,\n  'slug': slug.current,\n},\n  image {\n    asset-> { url },\n  altText \n  },\n}": PostsByCategoryQueryResult;
    "* [_type == 'postCategory' && slug.current == $slug][0] {\n  _id,\n    _type,\n    title,\n    'slug': slug.current,\n} ": PostCategoryBySlugQueryResult;
    "*[_type == 'privacyPage'][0] {\n\t_id,\n\t_type,\n\ttitle,\n\tcontent[],\n\t\n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n\t\"seo\": {\n\t\t\"title\": coalesce(seo.title, title, \"\"),\n\t\t\"description\": coalesce(seo.description,  \"\"),\n\t\t\"noIndex\": seo.noIndex == true,\n\t\t\"image\": seo.image,\n\t},\n}": PrivacyPageQueryResult;
    "*[_type == \"project\" && defined(slug.current)] {\n  'params': { 'slug': slug.current }\n}": ProjectSlugsQueryResult;
    "*[_type == 'projectsPage'][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n  \"projects\": *[_type == \"project\"] | order(_createdAt asc) {\n    _id,\n    _type,\n    title,\n    'slug': slug.current,\n    excerpt,\n    category->{\n      _id,\n      title,\n      'slug': slug.current,\n    },\n    image { \n      asset->{ url }, \n      height,\n      altText \n    },\n    \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n  },\n  \"categories\": *[_type == \"projectCategory\"] | order(orderRank asc) {\n    _id,\n    _type,\n    title,\n    'slug': slug.current,\n  },\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": ProjectsPageQueryResult;
    "*[_type == \"project\" && defined(slug.current)][] {\n  'params': { 'slug': slug.current }\n}": ProjectPathsQueryResult;
    "*[_type == 'project' && slug.current == $slug][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": ProjectBySlugQueryResult;
    "*[_type == 'project'] | order(_createdAt asc) {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  excerpt,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  image { \n    asset->{ url }, \n    height,\n    altText \n  },\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n}": AllProjectsQueryResult;
    "*[_type == 'projectCategory'] | order(orderRank asc) {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n}": AllProjectCategoriesQueryResult;
    "*[_type == 'project' && category->slug.current == $slug] {\n  _id,\n  _type,\n  _createdAt,\n  title,\n  'slug': slug.current,\n  excerpt,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  image { \n    asset->{ url }, \n    height,\n    altText \n  },\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n}": ProjectsByCategoryQueryResult;
    "*[_type == 'projectCategory' && slug.current == $slug][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n}": ProjectCategoryBySlugQueryResult;
    "*[_type == \"service\" && defined(slug.current)] {\n  'params': { 'slug': slug.current }\n}": ServiceSlugsQueryResult;
    "*[_type == 'service' && slug.current == $slug][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": ServiceBySlugQueryResult;
    "*[_type == 'service'] {\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n}": AllServicesQueryResult;
    "*[_type == 'servicesPage'][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": ServicesPageQueryResult;
    "*[_type == \"tamingDisconnectedAppsPage\"][0] {\n  _id,\n  _type,\n  badge,\n  title,\n  subtitle,\n  description[],\n  learningPoints[],\n  keyChallenges[],\n  formThumbnail{\n    asset->{\n      _id,\n      url\n    }\n  },\n  videoId,\n  seo {\n    title,\n    description,\n    noIndex,\n    image,\n  }\n}": TamingDisconnectedAppsPageQueryResult;
    "*[_type == 'termsPage'][0] {\n\t_id,\n\t_type,\n\ttitle,\n\tcontent[],\n\t\n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n\t\"seo\": {\n\t\t\"title\": coalesce(seo.title, title, \"\"),\n\t\t\"description\": coalesce(seo.description,  \"\"),\n\t\t\"noIndex\": seo.noIndex == true,\n\t\t\"image\": seo.image,\n\t},\n}": TermsPageQueryResult;
    "\n  *[_type in [\"page\", \"post\", \"project\", \"service\", \"blogPage\", \"projectsPage\", \"servicesPage\"] && defined(slug.current)] {\n    \"href\": select(\n      _type == \"page\" => \"/\" + slug.current,\n      _type == \"post\" => \"/blog/\" + slug.current,\n      _type == \"blogPage\" => \"/blog\",\n      _type == \"project\" => \"/projects/\" + slug.current,\n      slug.current\n    ),\n    _updatedAt\n  }\n": SitemapQueryResult;
    "\n  *[_type == \"sitemap\"][0] {\n    addToSitemap,\n    removeFromSitemap\n  }\n": SitemapSettingsQueryResult;
    "\n  *[_type == \"redirect\" && isEnabled == true] {\n      source,\n      destination,\n      permanent\n  }\n": RedirectsQueryResult;
    "*[_type == \"announcementBar\"][0] {\n    show,\n    backgroundColor { value },\n    textColor { value },\n    linkColor { value },\n    icon {\n        asset->{\n            url,\n        }\n    },\n    text,\n    linkText,\n    link,\n    excludedRoutes[] {\n        path\n    }\n}": AnnouncementBarQueryResult;
    "*[_type == 'demoSettings'][0] {\n  mainHeading,\n  benefits[] {\n    icon {\n      asset->{ url }\n    },\n    text\n  },\n  trustedByText,\n  testimonialCard {\n    quoteText,\n    authorName,\n    authorTitle,\n    authorImage {\n      asset->{ url }\n    }\n  },\n  testimonialsHeading,\n  testimonialsG2[] {\n    name,\n    jobTitle,\n    company,\n    quote,\n    avatar {\n      asset->{ url }\n    },\n    logo {\n      asset->{ url }\n    }\n  },\n  logos[] {\n    asset->{ url }\n  },\n  demoComponentHeading,\n  \"seo\": {\n    \"title\": coalesce(seo.title, \"Schedule a demo | Stitchflow\"),\n    \"description\": coalesce(seo.description, \"See how Stitchflow helps IT teams discover shadow apps, fix access risks, and reclaim SaaS waste. Schedule a personalized demo today.\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": DemoSettingsQueryResult;
    "*[_type == 'testimonial'] | order(_createdAt desc) {\n  _id,\n  name,\n  jobTitle,\n  company,\n  quote,\n  avatar {\n    asset->{ url }\n  },\n  logo {\n    asset->{ url }\n  }\n}": TestimonialsQueryResult;
    "*[_type == \"footer\"][0] {\n  footerCoLinks {\n    companyNameMark {\n      asset->{\n        url,\n      }\n    },\n    copyright,\n    coLinks[] {\n      label,\n      url\n    },\n    businessEmail,\n  }\n}": FooterCoLinksQueryResult;
    "*[_type == \"footer\"][0] {\n  footerCTA {\n    title,\n    description,\n    ctaButton {\n      text,\n      link,\n      variant\n    },\n    desktopImage {\n      src {\n        asset->{\n          url\n        }\n      },\n      alt,\n      width,\n      height\n    },\n    mobileImage {\n      src {\n        asset->{\n          url\n        }\n      },\n      alt,\n      width,\n      height\n    }\n  },\n  footerCTAexcludedRoutes[] {\n    path\n  }\n}": FooterCTAQueryResult;
    "*[_type == \"footer\"][0] {\n  footerLinks {\n    companyLogo {\n      asset->{\n        url,\n      }\n    },\n    backedBy {\n      asset->{\n        url,\n      }\n    },\n    socialLinks[] {\n      platform,\n      url,\n      icon {\n          asset->{\n              url,\n          }\n      }\n    },\n    certifications[] {\n      label,\n      icon {\n          asset->{\n              url,\n          }\n      }\n    },\n    reviewBadges[] {\n      url,\n      icon {\n          asset->{\n              url,\n          }\n      }\n    },\n    platform[] {\n      label,\n      url,\n      badge\n    },\n    resources[] {\n      label,\n      url,\n      badge\n    },\n    companys[] {\n      label,\n      url,\n      badge\n    },\n    getStarted[] {\n      label,\n      url,\n      badge\n    },\n    freeTools[] {\n      label,\n      url,\n      badge\n    },\n    customers[] {\n      label,\n      url,\n      badge\n    },\n    popularGuides[] {\n      label,\n      url,\n      badge\n    }\n  }\n}": FooterLinksQueryResult;
    "*[_type == \"footer\"][0] {\n  footerCTA {\n    title,\n    description,\n    ctaButton {\n      text,\n      link,\n      variant\n    },\n    desktopImage {\n      src {\n        asset->{\n          url\n        }\n      },\n      alt,\n      width,\n      height\n    },\n    mobileImage {\n      src {\n        asset->{\n          url\n        }\n      },\n      alt,\n      width,\n      height\n    }\n  },\n  footerLinks {\n    companyLogo {\n      asset->{\n        url,\n      }\n    },\n    backedBy {\n      asset->{\n        url,\n      }\n    },\n    socialLinks[] {\n      platform,\n      url,\n      icon {\n          asset->{\n              url,\n          }\n      }\n    },\n    certifications[] {\n      label,\n      icon {\n          asset->{\n              url,\n          }\n      }\n    },\n    reviewBadges[] {\n      url,\n      icon {\n          asset->{\n              url,\n          }\n      }\n    },\n    platform[] {\n      label,\n      url,\n      badge\n    },\n    resources[] {\n      label,\n      url,\n      badge\n    },\n    companys[] {\n      label,\n      url,\n      badge\n    },\n    getStarted[] {\n      label,\n      url,\n      badge\n    },\n    freeTools[] {\n      label,\n      url,\n      badge\n    },\n    customers[] {\n      label,\n      url,\n      badge\n    },\n    popularGuides[] {\n      label,\n      url,\n      badge\n    },\n  },\n  footerCoLinks {\n    companyNameMark {\n      asset->{\n        url,\n      }\n    },\n    copyright,\n    coLinks[] {\n      label,\n      url\n    },\n    businessEmail,\n  },\n  footerExcludedRoutes[] {\n    path\n  },\n  footerCTAexcludedRoutes[] {\n    path\n  }\n}": FooterQueryResult;
    "*[_type == \"homePage\"][0] {\n  _id,\n  _type,\n  heading,\n  headingWidth,\n  subheading,\n  subheadingWidth,\n  clickthrough,\n  emailCapture,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        value\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n,\n    \n  _type == \"testimonialCarouselBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    testimonials[] {\n      text,\n      author,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      companyLogo {\n        asset->{\n          url\n        },\n        alt,\n        width,\n        height\n      }\n    }\n  }\n,\n    \n  _type == \"heroSectionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    titleWidth,\n    description,\n    descriptionWidth,\n    showButton,\n    button {\n      text,\n      link,\n      variant,\n      buttonBelowSpacing\n    },\n    showImage,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      height,\n      width\n    },\n    modifySpacing,\n    spacing {\n      topSpacing,\n      bottomSpacing,\n      titleBelowSpacing,\n      descriptionBelowSpacing,\n      imageBelowSpacing\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepProcessBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    subheading,\n    steps[] {\n      number,\n      title,\n      description,\n      badgeColor {\n        value\n      },\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        width,\n        height\n      }\n    },\n    borderColor {\n      value\n    },\n    backgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"clickthroughTopicBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    useCases[] {\n      title,\n      description,\n      backgroundColor {\n        value\n      },\n      embedUrl,\n    },\n    sectionBackgroundColor {\n      value\n    }\n  }\n,\n    \n  _type == \"stepRightImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    steps[] {\n      number,\n      title\n    },\n    footnote,\n    image {\n      asset->{\n        url,\n        metadata {\n          dimensions\n        }\n      },\n      alt\n    },\n    badgeColor {\n      value\n    },\n    backgroundGradient {\n      topColor {\n        value\n      },\n      bottomColor {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"iconListBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconListTwoColumnBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    heading,\n    features[] {\n      title,\n      description,\n      icon {\n        asset->{\n          url\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"iconHighlightBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[]{\n      text,\n      image {\n        asset->{\n          url,\n        }\n      }\n    },\n    backgroundColor {\n      value\n    },\n  }\n,\n    \n  _type == \"pricingBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor{\n      value\n    },\n    pricingBlockReference->{\n      _id,\n      freePilotCard{\n        title,\n        subtitle,\n        features,\n        buttonText,\n        buttonLink\n      },\n      afterPilotCard{\n        title,\n        price,\n        priceUnit\n      },\n    }\n  }\n,\n    \n  _type == \"itToolsCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    backgroundColor {\n      value\n    },\n    spacing {\n      top,\n      bottom\n    },\n    tools[] {\n      label,\n      title,\n      description,\n      url,\n      comingSoon,\n      buttonText,\n      labelBackground {\n        value\n      }\n    }\n  }\n,\n    \n  _type == \"socialReviewBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    background {\n      color {\n        value\n      },\n      gradient\n    },\n    spacing {\n      top,\n      bottom\n    },\n    avatarImage {\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    comments[] {\n      username,\n      content,\n      width\n    }\n  }\n,\n    \n  _type == \"accordionAndImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    sectionTitle,\n    description,\n    spacing {\n      top,\n      bottom\n    },\n    image {\n      asset->{\n        url,\n      }\n    },\n    features[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"frequentlyAskedQuestionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"joinOurNewsletterBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    description,\n    placeholder,\n    buttonText,\n    successMessage,\n    processingText,\n    spacing {\n      top,\n      bottom\n    },\n    backgroundColor {\n      value\n    },\n    successBorderColor {\n      value\n    },\n    successTextColor {\n      value\n    }\n  }\n,\n    \n  _type == \"avatarWithDetails\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    sectionTitle,\n    spacing {\n      topSpacing,\n      topSpacingMobile,\n      bottomSpacing,\n      bottomSpacingMobile,\n      headingBottomSpacing,\n      headingBottomSpacingMobile\n    },\n    avatarList[]{\n      name,\n      title,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      bio,\n      socialLinks[]{\n        name,\n        url,\n        icon {\n          asset->{\n            url,\n            metadata {\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"iconBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n      title,\n      icons[] {\n      logo { asset->{url} },\n      altText,\n      width,\n      height\n    },\n  }\n,\n    \n  _type == \"pngImageBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    hasFeaturedCard,\n    featuredCard {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    cards[] {\n      image { asset->{url} },\n      altText,\n      title,\n      description,\n      bgColor { value }\n    },\n    sectionBgColor { value }\n  }\n,\n    \n  _type == \"oktaIdpHeroSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpWhySaasSection\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    lineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    cards[] {\n      mainHeading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpPointers\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    pointers[] {\n      text\n    }\n  }\n,\n    \n  _type == \"oktaIdpSaasManagementActuallyWorks\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    topLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    sections[] {\n      mainTitle,\n      subTitle,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    bottomLineImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n  }\n,\n    \n  _type == \"oktaIdpCustomer\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    _key,\n    _type,\n    title,\n    cards[] {\n      _key,\n      mainHeading,\n      description,\n      name,\n      designation,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      avatarImage {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      impact[] {\n        _key,\n        contractCount,\n        contractDesc,\n        reductionRate,\n        reductionDesc\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpTraditionalTools\" => {\n    _key,\n    _type,\n    traditionalTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    },\n    stitchflowTools[] {\n      list,\n      listIcon {\n        alt,\n        asset->{\n          url,\n          metadata {\n            dimensions { width, height }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"oktaIdpFaqSection\" => {\n    _key,\n    _type,\n    heading,\n    faqs[] {\n      question,\n      answer\n    }\n  }\n,\n    \n  _type == \"oktaIdpCtaSection\" => {\n    _key,\n    _type,\n    heading,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"samHeroSection\" => {\n    _key,\n    _type,\n    title,\n    description,\n    buttonText,\n    avatarImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    backedByImage {\n      alt,\n      width,\n      height,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    },\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samCenteredBlock\" => {\n    _key,\n    _type,\n    badge,\n    title,\n    description,\n    buttonText\n  }\n,\n    \n  _type == \"samCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      tagline,\n      heading,\n      description,\n      image {\n        alt,\n        width,\n        height,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"samFixTheGapsBlock\" => {\n    _key,\n    _type,\n    title,\n    subtitle,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      button,\n      image {\n        alt,\n        asset-> { url, metadata { dimensions { width, height } } }\n      },\n      icon {\n        alt,\n        asset-> { url }\n      },\n      subsections[] {\n        title,\n        desc\n      }\n    }\n  }\n,\n    \n  _type == \"samActionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    videoUrl\n  }\n,\n    \n  _type == \"auditReadinessHeroBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    video {\n      asset->{\n        url\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessLeftAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessRightAccordionBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    accordionItems[] {\n      heading,\n      subheading,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"auditReadinessSolutionsListBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    teamCards[] {\n      title,\n      description\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsHeroBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    marqueeImages[] {\n      width,\n      height,\n      asset {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    },\n    heroImage {\n      alt,\n      asset->{\n        url,\n        metadata { dimensions { width, height } }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsBrandsBlock\" => {\n    _key,\n    _type,\n    brandStats[] {\n      stat,\n      description,\n      width,\n      height,\n      logo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsStickyStackBlock\" => {\n    _key,\n    _type,\n    eyebrow,\n    heading,\n    highlightedText,\n    description,\n    ctaLabel,\n    ctaLink,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      mobileImage {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsFeaturesBlock\" => {\n    _key,\n    _type,\n    heading,\n    highlightedText,\n    description,\n    features[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsSectionWithCardsBlock\" => {\n    _key,\n    _type,\n    tagline,\n    heading,\n    highlightedText,\n    description,\n    cards[] {\n      title,\n      description,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"disconnectedAppsEmpoweredTeamsBlock\" => {\n    _key,\n    _type,\n    heading,\n    brands[] {\n      caseStudy,\n      caseStudyLink,\n      image {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      }\n    }\n  }\n,\n    \n  _type == \"heroBannerWithTagBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    tag,\n    headingBold,\n    headingOrdinary,\n    headingWidth,\n    subheading[],\n    subheadingWidth\n  }\n,\n    \n  _type == \"dataTableBlock\" => {\n    _key,\n    _type,\n    heading,\n    subheading,\n    tableHeaders[] {\n      id,\n      label,\n      width\n    },\n    tableRows[] {\n      feature,\n      values[] {\n        text,\n        color\n      }\n    }\n  }\n,\n    \n  _type == \"testimonialV1Block\" => {\n    _key,\n    _type,\n    testimonials[] {\n      company,\n      companyLogo {\n        alt,\n        asset->{\n          url,\n          metadata { dimensions { width, height } }\n        }\n      },\n      text,\n      profile {\n        name,\n        role,\n        image {\n          alt,\n          asset->{\n            url,\n            metadata { dimensions { width, height } }\n          }\n        }\n      }\n    }\n  }\n\n  }\n,\n  \"seo\": {\n    \"title\": coalesce(seo.title, heading, \"\"),\n    \"description\": coalesce(seo.description, \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": HomePageQueryResult;
    "*[_type ==\"navbar\"][0]{\n  logo {\n    src {\n      asset->{\n        _id,\n        url\n      }\n    },\n    alt,\n    width,\n    height\n  },\n  menuItems[] {\n    name,\n    hasDropdown,\n    dropdownItems[] {\n      title,\n      description,\n      path\n    },\n    path\n  },\n  ctaButton {\n    text,\n    link,\n    variant\n  },\n  excludedRoutes[] {\n    path\n  }\n}": NavbarQueryResult;
    "\n  *[_id == $id][0]{\n    title,\n  }    \n": OgImageQueryResult;
    "*[_type == 'generalSettings'][0] {\n  siteTitle,\n  siteLogo { \n    asset->{ url },\n  },\n  copyright,\n  homePage->{\n    _id,\n    _type,\n    title,\n    'slug': slug.current,\n    \"seo\": {\n      \"title\": coalesce(seo.title, title, \"\"),\n      \"description\": coalesce(seo.description,  \"\"),\n      \"noIndex\": seo.noIndex == true,\n      \"image\": seo.image,\n    },\n  },\n}": GeneralSettingsQueryResult;
    "*[_type == 'marketingSettings'][0] {\n  googleAnalyticsId,\n  googleTagManagerId,\n}": MarketingSettingsQueryResult;
    "*[_type == 'blogSettings'][0] {\n  showRelatedPosts,\n  showTableOfContents,\n  showPostsByCategory\n}": BlogSettingsQueryResult;
  }
}
