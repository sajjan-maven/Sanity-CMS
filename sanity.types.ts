/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type AnnouncementBanner = {
  _type: "announcementBanner";
  show?: boolean;
  backgroundColor?: Color;
  icon?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  textColor?: Color;
  text?: string;
  linkColor?: Color;
  linkText?: string;
  link?: string;
};

export type MenuItem = {
  _type: "menuItem";
  name?: string;
  hasDropdown?: boolean;
  path?: string;
  dropdownItems?: Array<{
    _key: string;
  } & DropdownItem>;
};

export type DropdownItem = {
  _type: "dropdownItem";
  title?: string;
  description?: string;
  path?: string;
};

export type VideoObject = {
  _type: "videoObject";
  title?: string;
  videoUrl?: string;
};

export type CallToActionObject = {
  _type: "callToActionObject";
  callToActionTitle?: string;
  callToActionParagraph?: string;
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
};

export type SpacerObject = {
  _type: "spacerObject";
  spacing?: "none" | "small" | "medium" | "large";
};

export type SingleImageObject = {
  _type: "singleImageObject";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    aspectRatio?: "square" | "rectangle" | "portrait";
    _type: "image";
  };
};

export type ButtonObject = {
  _type: "buttonObject";
  showButton?: boolean;
  buttonText?: string;
  buttonType?: "internal" | "anchor" | "external" | "fileDownload" | "emailAddress";
  buttonAnchorLocation?: "currentPage" | "choosePage";
  buttonPageReference?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "servicesPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "projectsPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "service";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "project";
  };
  buttonAnchorId?: string;
  buttonExternalUrl?: string;
  buttonEmailAddress?: string;
  buttonFileUrl?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    media?: unknown;
    _type: "file";
  };
  buttonVariant?: "primary" | "secondary" | "tertiary" | "outline" | "underline";
  buttonWidth?: "auto" | "fullWidth";
};

export type RichTextObject = {
  _type: "richTextObject";
  richTextContent?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type HeadingObject = {
  _type: "headingObject";
  headingText?: string;
  headingTag?: "h2" | "h3" | "h4" | "h5" | "h6";
  headingSize?: "xxxl" | "xxl" | "xl" | "lg" | "md" | "sm" | "xs";
};

export type ComparisonTableBlock = {
  _type: "comparisonTableBlock";
  title?: string;
  leftColumn?: {
    title?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
  };
  rightColumn?: {
    title?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    backgroundColor?: Color;
  };
  rows?: Array<{
    leftText?: string;
    rightText?: string;
    _key: string;
  }>;
};

export type FeaturedTestimonialBlock = {
  _type: "featuredTestimonialBlock";
  quote?: string;
  author?: {
    name?: string;
    position?: string;
    avatar?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
  };
  quoteIcon?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type SimpleCardBlock = {
  _type: "simpleCardBlock";
  title?: string;
  cards?: Array<{
    title?: string;
    description?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    backgroundColor?: Color;
    _key: string;
  }>;
};

export type HeroClickthroughBlock = {
  _type: "heroClickthroughBlock";
  heading?: string;
  headingWidth?: number;
  subheading?: string;
  subheadingWidth?: number;
};

export type FormBlock = {
  _type: "formBlock";
  heading?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  form?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "form";
  };
  anchorId?: string;
};

export type ServicesBlock = {
  _type: "servicesBlock";
  heading?: string;
  services?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "service";
  }>;
  background?: "white" | "pattern";
  topCornerRadius?: "straight" | "rounded";
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  anchorId?: string;
  paddingTop?: "none" | "small" | "medium" | "default" | "large";
  paddingBottom?: "none" | "small" | "medium" | "default" | "large";
};

export type TestimonialBlock = {
  _type: "testimonialBlock";
  heading?: string;
  eyebrow?: string;
  testimonials?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "testimonial";
  }>;
  cornerRadiusTop?: "rounded" | "straight";
  cornerRadiusBottom?: "rounded" | "straight";
  anchorId?: string;
};

export type MediaBlock = {
  _type: "mediaBlock";
  backgroundType?: "image" | "video";
  backgroundWidth?: "full" | "contained";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    _type: "image";
  };
  overlayType?: "none" | "dark";
  dialogType?: "none" | "video";
  videoUrl?: string;
  anchorId?: string;
};

export type LogoBlock = {
  _type: "logoBlock";
  heading?: string;
  logos?: Array<{
    title?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    size?: "default" | "large";
    link?: string;
    _key: string;
  }>;
  anchorId?: string;
};

export type CallToActionBlock = {
  _type: "callToActionBlock";
  heading?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  anchorId?: string;
};

export type PortableTextBlock = {
  _type: "portableTextBlock";
  title?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & CallToActionObject>;
  alignment?: "left" | "center" | "right";
  anchorId?: string;
};

export type FreeformBlock = {
  _type: "freeformBlock";
  title?: string;
  columnsPerRow?: "2" | "3" | "4";
  columns?: Array<{
    title?: string;
    spacing?: "none" | "small" | "medium" | "large";
    alignment?: "left" | "center" | "right";
    items?: Array<{
      _key: string;
    } & SpacerObject | {
      _key: string;
    } & HeadingObject | {
      _key: string;
    } & RichTextObject | {
      _key: string;
    } & ButtonObject | {
      _key: string;
    } & SingleImageObject>;
    _key: string;
  }>;
  border?: "none" | "topBottom" | "top" | "bottom";
  anchorId?: string;
};

export type FeaturesMinimalBlock = {
  _type: "featuresMinimalBlock";
  heading?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  features?: Array<string>;
  enableBorderTop?: boolean;
  cornerRadiusTop?: "rounded" | "straight";
  enableBorderBottom?: boolean;
  cornerRadiusBottom?: "rounded" | "straight";
  anchorId?: string;
};

export type FeatureCardsBlock = {
  _type: "featureCardsBlock";
  heading?: string;
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  features?: Array<{
    title?: string;
    description?: string;
    items?: Array<string>;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    button?: {
      showButton?: boolean;
      buttonText?: string;
      buttonType?: "internal" | "anchor" | "external" | "fileDownload" | "emailAddress";
      buttonAnchorLocation?: "currentPage" | "choosePage";
      buttonPageReference?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "blogPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "servicesPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "projectsPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "service";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "project";
      };
      buttonAnchorId?: string;
      buttonExternalUrl?: string;
      buttonEmailAddress?: string;
      buttonFileUrl?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      buttonVariant?: "primary" | "secondary" | "tertiary" | "outline" | "underline";
      buttonWidth?: "auto" | "fullWidth";
    };
    _key: string;
  }>;
  showCallToAction?: boolean;
  callToActionHeading?: string;
  callToActionContent?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  callToActionButtons?: Array<{
    _key: string;
  } & ButtonObject>;
  anchorId?: string;
};

export type HeaderBlock = {
  _type: "headerBlock";
  heading?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  bottomCornerRadius?: "straight" | "rounded";
  anchorId?: string;
};

export type HeroBlock = {
  _type: "heroBlock";
  heading?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  mediaType?: "image" | "none";
  bottomCornerRadius?: "straight" | "rounded";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    height?: "full" | "short";
    _type: "image";
  };
  buttons?: Array<{
    _key: string;
  } & ButtonObject>;
  dialogType?: "none" | "video";
  videoUrl?: string;
  overlayType?: "none" | "dark";
  anchorId?: string;
};

export type PageBuilder = Array<{
  _key: string;
} & HeroBlock | {
  _key: string;
} & HeaderBlock | {
  _key: string;
} & FeatureCardsBlock | {
  _key: string;
} & FeaturesMinimalBlock | {
  _key: string;
} & FreeformBlock | {
  _key: string;
} & PortableTextBlock | {
  _key: string;
} & CallToActionBlock | {
  _key: string;
} & LogoBlock | {
  _key: string;
} & TestimonialBlock | {
  _key: string;
} & ServicesBlock | {
  _key: string;
} & FormBlock | {
  _key: string;
} & MediaBlock | {
  _key: string;
} & HeroClickthroughBlock | {
  _key: string;
} & SimpleCardBlock | {
  _key: string;
} & FeaturedTestimonialBlock | {
  _key: string;
} & ComparisonTableBlock>;

export type Footer = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  footerCTA?: FooterCTA;
  footerLinks?: FooterLinks;
  footerCoLinks?: FooterCoLinks;
};

export type FooterCoLinks = {
  _type: "footerCoLinks";
  companyNameMark?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  copyright?: string;
  coLinks?: Array<{
    label?: string;
    url?: string;
    _key: string;
  }>;
  businessEmail?: string;
};

export type FooterLinks = {
  _type: "footerLinks";
  companyLogo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  socialLinks?: Array<{
    platform?: string;
    url?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
  backedBy?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  certifications?: Array<{
    label?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
  reviewBadges?: Array<{
    platform?: string;
    url?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
  platform?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
  resources?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
  companys?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
  getStarted?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
  freeTools?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
  customers?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
  popularGuides?: Array<{
    label?: string;
    url?: string;
    badge?: "new" | "popular";
    _key: string;
  }>;
};

export type FooterCTA = {
  _type: "footerCTA";
  title?: string;
  description?: string;
  ctaButton?: CtaButton;
  desktopImage?: {
    src?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    alt?: string;
    width?: number;
    height?: number;
  };
  mobileImage?: {
    src?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    alt?: string;
    width?: number;
    height?: number;
  };
};

export type Navbar = {
  _id: string;
  _type: "navbar";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  logo?: Logo;
  menuItems?: Array<{
    _key: string;
  } & MenuItem>;
  ctaButton?: CtaButton;
};

export type CtaButton = {
  _type: "ctaButton";
  text?: string;
  link?: string;
  variant?: "primary" | "secondary" | "danger" | "outline";
};

export type Logo = {
  _type: "logo";
  src?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  alt?: string;
  width?: number;
  height?: number;
};

export type Form = {
  _id: string;
  _type: "form";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  submitButtonText?: string;
  fields?: Array<{
    name?: string;
    placeholder?: string;
    inputType?: "text" | "textarea" | "email" | "tel";
    isRequired?: boolean;
    _key: string;
  }>;
};

export type Testimonial = {
  _id: string;
  _type: "testimonial";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  jobTitle?: string;
  company?: string;
  quote?: string;
  avatar?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  orderRank?: string;
};

export type Post = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  category?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "postCategory";
  };
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
  excerpt?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
  } & CallToActionObject | {
    _key: string;
  } & SingleImageObject | {
    _key: string;
  } & VideoObject>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    caption?: string;
    _type: "image";
  };
  relatedPostsType?: "autofill" | "custom";
  customRelatedPosts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "post";
  }>;
  seo?: SeoObject;
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  username?: string;
  bio?: string;
  avatar?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type PostCategory = {
  _id: string;
  _type: "postCategory";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  categoryColor?: SimplerColor;
  orderRank?: string;
};

export type Redirect = {
  _id: string;
  _type: "redirect";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  source?: string;
  destination?: string;
  permanent?: boolean;
  isEnabled?: boolean;
};

export type BlogSettings = {
  _id: string;
  _type: "blogSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  showRelatedPosts?: boolean;
  showTableOfContents?: boolean;
  showPostsByCategory?: boolean;
};

export type MarketingSettings = {
  _id: string;
  _type: "marketingSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  googleAnalyticsId?: string;
  googleTagManagerId?: string;
};

export type NavigationSettings = {
  _id: string;
  _type: "navigationSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  navbarMenuItems?: Array<{
    menuItemType?: "single" | "group";
    title?: string;
    pageReference?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "blogPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "servicesPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "projectsPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "service";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "project";
    };
    pageReferences?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "blogPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "servicesPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "projectsPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "service";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "project";
    }>;
    isButton?: boolean;
    _key: string;
  }>;
  showSlideOutMenu?: boolean;
  slideOutMenuItems?: Array<{
    menuItemType?: "single" | "group";
    title?: string;
    pageReference?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "blogPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "servicesPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "projectsPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "service";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "project";
    };
    pageReferences?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "blogPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "servicesPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "projectsPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "service";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "project";
    }>;
    isButton?: boolean;
    _key: string;
  }>;
  slideOutMenuButtons?: Array<{
    _key: string;
  } & ButtonObject>;
  showCompanyDetailsSlideOutMenu?: boolean;
  footerColumns?: Array<{
    title?: string;
    menuItems?: Array<{
      title?: string;
      linkType?: "internal" | "external";
      pageReference?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "blogPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "servicesPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "projectsPage";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "service";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "project";
      };
      externalUrl?: string;
      _key: string;
    }>;
    _key: string;
  }>;
  footerLegalMenuItems?: Array<{
    title?: string;
    pageReference?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "blogPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "servicesPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "projectsPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "service";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "project";
    };
    _key: string;
  }>;
};

export type GeneralSettings = {
  _id: string;
  _type: "generalSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  siteTitle?: string;
  siteLogo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  homePage?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "servicesPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "projectsPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "service";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "project";
  };
  companyEmailAddress?: string;
  companyPhoneNumber?: string;
  companySocialMediaLinks?: Array<{
    title?: string;
    profileUrl?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
  copyright?: string;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type BlogPage = {
  _id: string;
  _type: "blogPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type ServicesPage = {
  _id: string;
  _type: "servicesPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type ProjectsPage = {
  _id: string;
  _type: "projectsPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type Service = {
  _id: string;
  _type: "service";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  shortDescription?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    caption?: string;
    _type: "image";
  };
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
  orderRank?: string;
};

export type Project = {
  _id: string;
  _type: "project";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  category?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "projectCategory";
  };
  excerpt?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    altText?: string;
    caption?: string;
    _type: "image";
  };
  pageBuilder?: PageBuilder;
  seo?: SeoObject;
};

export type SeoObject = {
  _type: "seoObject";
  title?: string;
  description?: string;
  noIndex?: boolean;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type ProjectCategory = {
  _id: string;
  _type: "projectCategory";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  orderRank?: string;
};

export type HighlightColor = {
  _type: "highlightColor";
  label?: string;
  value?: string;
};

export type TextColor = {
  _type: "textColor";
  label?: string;
  value?: string;
};

export type SimplerColor = {
  _type: "simplerColor";
  label?: string;
  value?: string;
};

export type MediaTag = {
  _id: string;
  _type: "media.tag";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
};

export type Color = {
  _type: "color";
  hex?: string;
  alpha?: number;
  hsl?: HslaColor;
  hsv?: HsvaColor;
  rgb?: RgbaColor;
};

export type RgbaColor = {
  _type: "rgbaColor";
  r?: number;
  g?: number;
  b?: number;
  a?: number;
};

export type HsvaColor = {
  _type: "hsvaColor";
  h?: number;
  s?: number;
  v?: number;
  a?: number;
};

export type HslaColor = {
  _type: "hslaColor";
  h?: number;
  s?: number;
  l?: number;
  a?: number;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = AnnouncementBanner | MenuItem | DropdownItem | VideoObject | CallToActionObject | SpacerObject | SingleImageObject | ButtonObject | RichTextObject | HeadingObject | ComparisonTableBlock | FeaturedTestimonialBlock | SimpleCardBlock | HeroClickthroughBlock | FormBlock | ServicesBlock | TestimonialBlock | MediaBlock | LogoBlock | CallToActionBlock | PortableTextBlock | FreeformBlock | FeaturesMinimalBlock | FeatureCardsBlock | HeaderBlock | HeroBlock | PageBuilder | Footer | FooterCoLinks | FooterLinks | FooterCTA | Navbar | CtaButton | Logo | Form | Testimonial | Post | Author | PostCategory | Redirect | BlogSettings | MarketingSettings | NavigationSettings | GeneralSettings | Page | BlogPage | ServicesPage | ProjectsPage | Service | Project | SeoObject | ProjectCategory | HighlightColor | TextColor | SimplerColor | MediaTag | Color | RgbaColor | HsvaColor | HslaColor | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries/documents/page.ts
// Variable: pageSlugsQuery
// Query: *[_type == "page" && defined(slug.current)] {  'params': { 'slug': slug.current }}
export type PageSlugsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: pageBySlugQuery
// Query: *[_type == 'page' && slug.current == $slug][0] {  _type,  _id,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        hex      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },  },      _type == "comparisonTableBlock" => {    _id,  _key,  _type,  _key,  _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        hex      }    },    rows[] {      leftText,      rightText    }  }  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type PageBySlugQueryResult = {
  _type: "page";
  _id: string;
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;

// Source: ./src/sanity/lib/queries/documents/post.ts
// Variable: postSlugsQuery
// Query: *[_type == "post" && defined(slug.current)] {  'params': { 'slug': slug.current }}
export type PostSlugsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: blogPageQuery
// Query: *[_type == 'blogPage'][0] {  _id,  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        hex      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },  },      _type == "comparisonTableBlock" => {    _id,  _key,  _type,  _key,  _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        hex      }    },    rows[] {      leftText,      rightText    }  }  },  "posts": *[_type == 'post'] | order(_createdAt asc) {    _id,    _type,    _createdAt,    title,    'slug': slug.current,    excerpt,    category->{      _id,      title,      'slug': slug.current,    },    author->{      _id,      name,      username,      bio,      avatar {         asset->{ url },       },    },    image {       asset->{ url },       altText     },  },  "categories": *[_type == "postCategory"] | order(orderRank asc) {    _id,    _type,    title,    'slug': slug.current,  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type BlogPageQueryResult = {
  _id: string;
  _type: "blogPage";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  }> | null;
  posts: Array<{
    _id: string;
    _type: "post";
    _createdAt: string;
    title: string | null;
    slug: string | null;
    excerpt: string | null;
    category: {
      _id: string;
      title: string | null;
      slug: string | null;
    } | null;
    author: {
      _id: string;
      name: string | null;
      username: string | null;
      bio: string | null;
      avatar: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    } | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      altText: string | null;
    } | null;
  }>;
  categories: Array<{
    _id: string;
    _type: "postCategory";
    title: string | null;
    slug: string | null;
  }>;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: postBySlugQuery
// Query: *[_type == 'post' && slug.current == $slug][0] {  _id,  _type,  _createdAt,  title,  'slug': slug.current,  excerpt,  "tableOfContents": content[style in ["h2", "h3", "h4", "h5", "h6"]],  content[],  category->{    _id,    title,    categoryColor {      value    },    'slug': slug.current,  },  author->{    _id,    name,    username,    bio,    avatar {       asset->{ url },     },  },  image {     asset->{ url },     altText,    caption,   },  relatedPostsType,  "relatedPosts": select(    relatedPostsType == "custom" => customRelatedPosts[]->{       _id,      _createdAt,      title,      'slug': slug.current,      excerpt,      category->{        _id,        title,        categoryColor->{          value        },        'slug': slug.current,      },      author->{        _id,        name,        username,        bio,        avatar {           asset->{ url },         },      },      image {         asset->{ url },         altText       }    },    relatedPostsType == "autofill" => *[_type == 'post' && category._ref == ^.category._ref && _id != ^._id][0...3]{       _id,      _createdAt,      title,      'slug': slug.current,      category->{        _id,        title,        categoryColor->{          value        },        'slug': slug.current,      },      author->{        _id,        name,        username,        bio,        avatar {           asset->{ url },         },      },      excerpt,      image {         asset->{ url },         altText       }    },  ),  "settings": *[_type == "blogSettings"][0] {    showRelatedPosts,    showTableOfContents,    showPostsByCategory  },  "categories": *[_type == "postCategory"] {    _id,    title,    'slug': slug.current,  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type PostBySlugQueryResult = {
  _id: string;
  _type: "post";
  _createdAt: string;
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  tableOfContents: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  content: Array<{
    _key: string;
  } & CallToActionObject | {
    _key: string;
  } & SingleImageObject | {
    _key: string;
  } & VideoObject | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  category: {
    _id: string;
    title: string | null;
    categoryColor: {
      value: string | null;
    } | null;
    slug: string | null;
  } | null;
  author: {
    _id: string;
    name: string | null;
    username: string | null;
    bio: string | null;
    avatar: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    altText: string | null;
    caption: string | null;
  } | null;
  relatedPostsType: "autofill" | "custom" | null;
  relatedPosts: Array<{
    _id: string;
    _createdAt: string;
    title: string | null;
    slug: string | null;
    category: {
      _id: string;
      title: string | null;
      categoryColor: null;
      slug: string | null;
    } | null;
    author: {
      _id: string;
      name: string | null;
      username: string | null;
      bio: string | null;
      avatar: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    } | null;
    excerpt: string | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      altText: string | null;
    } | null;
  }> | null;
  settings: {
    showRelatedPosts: boolean | null;
    showTableOfContents: boolean | null;
    showPostsByCategory: boolean | null;
  } | null;
  categories: Array<{
    _id: string;
    title: string | null;
    slug: string | null;
  }>;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: allPostsQuery
// Query: *[_type == 'post'] | order(_createdAt asc) {  _id,  _type,  _createdAt,  title,  'slug': slug.current,  excerpt,  category->{    _id,    title,    'slug': slug.current,  },  author->{    _id,    name,    username,    bio,    avatar {       asset->{ url },     },  },  image {     asset->{ url },     altText   },}
export type AllPostsQueryResult = Array<{
  _id: string;
  _type: "post";
  _createdAt: string;
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  author: {
    _id: string;
    name: string | null;
    username: string | null;
    bio: string | null;
    avatar: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    altText: string | null;
  } | null;
}>;
// Variable: allPostCategoriesQuery
// Query: *[_type == 'postCategory'] | order(orderRank asc) {  _id,  _type,  title,  'slug': slug.current,}
export type AllPostCategoriesQueryResult = Array<{
  _id: string;
  _type: "postCategory";
  title: string | null;
  slug: string | null;
}>;
// Variable: postsByCategoryQuery
// Query: *[_type == 'post' && category->slug.current == $slug] {  _id,  _type,  _createdAt,  title,  'slug': slug.current,  excerpt,  category->{    _id,    title,    'slug': slug.current,  },  author->{    _id,    name,    username,    bio,    avatar {       asset->{ url },     },  },  image {     asset->{ url },     altText   },}
export type PostsByCategoryQueryResult = Array<{
  _id: string;
  _type: "post";
  _createdAt: string;
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  author: {
    _id: string;
    name: string | null;
    username: string | null;
    bio: string | null;
    avatar: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    altText: string | null;
  } | null;
}>;
// Variable: postCategoryBySlugQuery
// Query: *[_type == 'postCategory' && slug.current == $slug][0] {  _id,  _type,  title,  'slug': slug.current,}
export type PostCategoryBySlugQueryResult = {
  _id: string;
  _type: "postCategory";
  title: string | null;
  slug: string | null;
} | null;

// Source: ./src/sanity/lib/queries/documents/project.ts
// Variable: projectSlugsQuery
// Query: *[_type == "project" && defined(slug.current)] {  'params': { 'slug': slug.current }}
export type ProjectSlugsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: projectsPageQuery
// Query: *[_type == 'projectsPage'][0] {  _id,  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        hex      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },  },      _type == "comparisonTableBlock" => {    _id,  _key,  _type,  _key,  _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        hex      }    },    rows[] {      leftText,      rightText    }  }  },  "projects": *[_type == "project"] | order(_createdAt asc) {    _id,    _type,    title,    'slug': slug.current,    excerpt,    category->{      _id,      title,      'slug': slug.current,    },    image {       asset->{ url },       height,      altText     },      pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        hex      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },  },      _type == "comparisonTableBlock" => {    _id,  _key,  _type,  _key,  _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        hex      }    },    rows[] {      leftText,      rightText    }  }  },  },  "categories": *[_type == "projectCategory"] | order(orderRank asc) {    _id,    _type,    title,    'slug': slug.current,  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type ProjectsPageQueryResult = {
  _id: string;
  _type: "projectsPage";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  }> | null;
  projects: Array<{
    _id: string;
    _type: "project";
    title: string | null;
    slug: string | null;
    excerpt: string | null;
    category: {
      _id: string;
      title: string | null;
      slug: string | null;
    } | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      height: null;
      altText: string | null;
    } | null;
    pageBuilder: Array<{
      _id: null;
      _key: string;
      _type: "callToActionBlock";
      heading: string | null;
      content: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      buttons: Array<{
        _key: string;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      }> | null;
      anchorId: string | null;
      paddingTop: null;
      paddingBottom: null;
    } | {
      _id: null;
      _key: string;
      _type: "comparisonTableBlock";
      title: string | null;
      leftColumn: {
        title: string | null;
        icon: {
          asset: {
            url: string | null;
          } | null;
          alt: string | null;
        } | null;
      } | null;
      rightColumn: {
        title: string | null;
        icon: {
          asset: {
            url: string | null;
          } | null;
          alt: string | null;
        } | null;
        backgroundColor: {
          hex: string | null;
        } | null;
      } | null;
      rows: Array<{
        leftText: string | null;
        rightText: string | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "featureCardsBlock";
      heading: string | null;
      buttons: Array<{
        _key: string;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      }> | null;
      features: Array<{
        _key: string;
        title: string | null;
        description: string | null;
        items: Array<string> | null;
        image: {
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        button: {
          _key: null;
          showButton: boolean | null;
          buttonText: string | null;
          buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
          buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
          buttonWidth: "auto" | "fullWidth" | null;
          buttonFileUrl: {
            asset: {
              url: string | null;
            } | null;
          } | null;
          buttonPageReference: {
            _id: string;
            _type: "blogPage";
            title: string | null;
            slug: string | null;
          } | {
            _id: string;
            _type: "page";
            title: string | null;
            slug: string | null;
          } | {
            _id: string;
            _type: "project";
            title: string | null;
            slug: string | null;
          } | {
            _id: string;
            _type: "projectsPage";
            title: string | null;
            slug: string | null;
          } | {
            _id: string;
            _type: "service";
            title: string | null;
            slug: string | null;
          } | {
            _id: string;
            _type: "servicesPage";
            title: string | null;
            slug: string | null;
          } | null;
          buttonEmailAddress: string | null;
          buttonExternalUrl: string | null;
          buttonAnchorLocation: "choosePage" | "currentPage" | null;
          buttonAnchorId: string | null;
        } | null;
      }> | null;
      showCallToAction: boolean | null;
      callToActionHeading: string | null;
      callToActionContent: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      callToActionButtons: Array<{
        _key: string;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      }> | null;
      anchorId: string | null;
      paddingTop: null;
      paddingBottom: null;
    } | {
      _id: null;
      _key: string;
      _type: "featuredTestimonialBlock";
      quote: string | null;
      author: {
        name: string | null;
        position: string | null;
        avatar: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: SanityImageDimensions | null;
            } | null;
          } | null;
          alt: string | null;
        } | null;
      } | null;
      quoteIcon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | {
      _id: null;
      _key: string;
      _type: "featuresMinimalBlock";
      heading: string | null;
      content: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      buttons: Array<{
        _key: string;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      }> | null;
      features: Array<string> | null;
      enableBorderTop: boolean | null;
      cornerRadiusTop: "rounded" | "straight" | null;
      enableBorderBottom: boolean | null;
      cornerRadiusBottom: "rounded" | "straight" | null;
      anchorId: string | null;
      paddingTop: null;
      paddingBottom: null;
    } | {
      _id: null;
      _key: string;
      _type: "formBlock";
      heading: string | null;
      content: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      form: {
        title: string | null;
        submitButtonText: string | null;
        fields: Array<{
          name?: string;
          placeholder?: string;
          inputType?: "email" | "tel" | "text" | "textarea";
          isRequired?: boolean;
          _key: string;
        }> | null;
      } | null;
      anchorId: string | null;
      paddingTop: null;
      paddingBottom: null;
    } | {
      _id: null;
      _key: string;
      _type: "freeformBlock";
      title: string | null;
      columnsPerRow: "2" | "3" | "4" | null;
      columns: Array<{
        _key: string;
        _type: null;
        title: string | null;
        spacing: "large" | "medium" | "none" | "small" | null;
        alignment: "center" | "left" | "right" | null;
        items: Array<{
          _key: string;
          _type: "buttonObject";
          image: null;
          heading: null;
          headingText: null;
          headingTag: null;
          headingSize: null;
          richTextContent: null;
          buttonText: string | null;
          buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
          buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
          buttonPageReference: {
            _id: string;
            title: string | null;
            slug: string | null;
          } | null;
          buttonExternalUrl: string | null;
          spacing: null;
        } | {
          _key: string;
          _type: "headingObject";
          image: null;
          heading: null;
          headingText: string | null;
          headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
          headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
          richTextContent: null;
          buttonText: null;
          buttonVariant: null;
          buttonType: null;
          buttonPageReference: null;
          buttonExternalUrl: null;
          spacing: null;
        } | {
          _key: string;
          _type: "richTextObject";
          image: null;
          heading: null;
          headingText: null;
          headingTag: null;
          headingSize: null;
          richTextContent: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "normal";
            listItem?: never;
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          buttonText: null;
          buttonVariant: null;
          buttonType: null;
          buttonPageReference: null;
          buttonExternalUrl: null;
          spacing: null;
        } | {
          _key: string;
          _type: "singleImageObject";
          image: {
            aspectRatio: "portrait" | "rectangle" | "square" | null;
            asset: {
              _ref: null;
              _type: "sanity.imageAsset";
              url: string | null;
              altText: string | null;
              description: string | null;
              tags: null;
              title: string | null;
            } | null;
          } | null;
          heading: null;
          headingText: null;
          headingTag: null;
          headingSize: null;
          richTextContent: null;
          buttonText: null;
          buttonVariant: null;
          buttonType: null;
          buttonPageReference: null;
          buttonExternalUrl: null;
          spacing: null;
        } | {
          _key: string;
          _type: "spacerObject";
          image: null;
          heading: null;
          headingText: null;
          headingTag: null;
          headingSize: null;
          richTextContent: null;
          buttonText: null;
          buttonVariant: null;
          buttonType: null;
          buttonPageReference: null;
          buttonExternalUrl: null;
          spacing: "large" | "medium" | "none" | "small" | null;
        }> | null;
      }> | null;
      anchorId: string | null;
      border: "bottom" | "none" | "top" | "topBottom" | null;
    } | {
      _id: null;
      _key: string;
      _type: "headerBlock";
      heading: string | null;
      content: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      bottomCornerRadius: "rounded" | "straight" | null;
      anchorId: string | null;
    } | {
      _id: null;
      _key: string;
      _type: "heroBlock";
      heading: string | null;
      content: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: never;
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      mediaType: "image" | "none" | null;
      bottomCornerRadius: "rounded" | "straight" | null;
      buttons: Array<{
        _key: string;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      }> | null;
      image: {
        height: "full" | "short" | null;
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      dialogType: "none" | "video" | null;
      videoUrl: string | null;
      overlayType: "dark" | "none" | null;
      anchorId: string | null;
    } | {
      _id: null;
      _key: string;
      _type: "heroClickthroughBlock";
      heading: string | null;
      subheading: string | null;
      headingWidth: number | null;
      subheadingWidth: number | null;
    } | {
      _id: null;
      _key: string;
      _type: "logoBlock";
      heading: string | null;
      logos: Array<{
        _key: string;
        title: string | null;
        image: {
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        size: "default" | "large" | null;
        link: string | null;
      }> | null;
      anchorId: string | null;
    } | {
      _id: null;
      _key: string;
      _type: "mediaBlock";
      backgroundType: "image" | "video" | null;
      backgroundWidth: "contained" | "full" | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      overlayType: "dark" | "none" | null;
      dialogType: "none" | "video" | null;
      videoUrl: string | null;
      anchorId: string | null;
    } | {
      _id: null;
      _key: string;
      _type: "portableTextBlock";
      title: string | null;
      content: Array<{
        _key: string;
      } & CallToActionObject | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      alignment: "center" | "left" | "right" | null;
      anchorId: string | null;
      paddingTop: null;
      paddingBottom: null;
    } | {
      _id: null;
      _key: string;
      _type: "servicesBlock";
      heading: string | null;
      services: Array<{
        _id: string;
        title: string | null;
        shortDescription: string | null;
        image: {
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        slug: string | null;
      }> | null;
      buttons: Array<{
        _key: string;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      }> | null;
      background: "pattern" | "white" | null;
      topCornerRadius: "rounded" | "straight" | null;
      anchorId: string | null;
      paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
      paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
    } | {
      _id: null;
      _key: string;
      _type: "simpleCardBlock";
      title: string | null;
      cards: Array<{
        title: string | null;
        description: string | null;
        image: {
          asset: {
            url: string | null;
            metadata: {
              dimensions: SanityImageDimensions | null;
            } | null;
          } | null;
          alt: string | null;
        } | null;
        backgroundColor: {
          hex: string | null;
        } | null;
      }> | null;
    } | {
      _id: null;
      _key: string;
      _type: "testimonialBlock";
      heading: string | null;
      eyebrow: string | null;
      testimonials: Array<{
        _id: string;
        name: string | null;
        jobTitle: string | null;
        company: string | null;
        quote: string | null;
        avatar: {
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        logo: {
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
      }> | null;
      anchorId: string | null;
      cornerRadiusTop: "rounded" | "straight" | null;
      cornerRadiusBottom: "rounded" | "straight" | null;
      paddingTop: null;
      paddingBottom: null;
    }> | null;
  }>;
  categories: Array<{
    _id: string;
    _type: "projectCategory";
    title: string | null;
    slug: string | null;
  }>;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: projectPathsQuery
// Query: *[_type == "project" && defined(slug.current)][] {  'params': { 'slug': slug.current }}
export type ProjectPathsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: projectBySlugQuery
// Query: *[_type == 'project' && slug.current == $slug][0] {  _id,  _type,  title,  'slug': slug.current,  category->{    _id,    title,    'slug': slug.current,  },    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        hex      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },  },      _type == "comparisonTableBlock" => {    _id,  _key,  _type,  _key,  _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        hex      }    },    rows[] {      leftText,      rightText    }  }  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type ProjectBySlugQueryResult = {
  _id: string;
  _type: "project";
  title: string | null;
  slug: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: allProjectsQuery
// Query: *[_type == 'project'] | order(_createdAt asc) {  _id,  _type,  title,  'slug': slug.current,  excerpt,  category->{    _id,    title,    'slug': slug.current,  },  image {     asset->{ url },     height,    altText   },    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        hex      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },  },      _type == "comparisonTableBlock" => {    _id,  _key,  _type,  _key,  _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        hex      }    },    rows[] {      leftText,      rightText    }  }  },}
export type AllProjectsQueryResult = Array<{
  _id: string;
  _type: "project";
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    height: null;
    altText: string | null;
  } | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  }> | null;
}>;
// Variable: allProjectCategoriesQuery
// Query: *[_type == 'projectCategory'] | order(orderRank asc) {  _id,  _type,  title,  'slug': slug.current,}
export type AllProjectCategoriesQueryResult = Array<{
  _id: string;
  _type: "projectCategory";
  title: string | null;
  slug: string | null;
}>;
// Variable: projectsByCategoryQuery
// Query: *[_type == 'project' && category->slug.current == $slug] {  _id,  _type,  _createdAt,  title,  'slug': slug.current,  excerpt,  category->{    _id,    title,    'slug': slug.current,  },  image {     asset->{ url },     height,    altText   },    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        hex      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },  },      _type == "comparisonTableBlock" => {    _id,  _key,  _type,  _key,  _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        hex      }    },    rows[] {      leftText,      rightText    }  }  },}
export type ProjectsByCategoryQueryResult = Array<{
  _id: string;
  _type: "project";
  _createdAt: string;
  title: string | null;
  slug: string | null;
  excerpt: string | null;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
  } | null;
  image: {
    asset: {
      url: string | null;
    } | null;
    height: null;
    altText: string | null;
  } | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  }> | null;
}>;
// Variable: projectCategoryBySlugQuery
// Query: *[_type == 'projectCategory' && slug.current == $slug][0] {  _id,  _type,  title,  'slug': slug.current,}
export type ProjectCategoryBySlugQueryResult = {
  _id: string;
  _type: "projectCategory";
  title: string | null;
  slug: string | null;
} | null;

// Source: ./src/sanity/lib/queries/documents/service.ts
// Variable: serviceSlugsQuery
// Query: *[_type == "service" && defined(slug.current)] {  'params': { 'slug': slug.current }}
export type ServiceSlugsQueryResult = Array<{
  params: {
    slug: string | null;
  };
}>;
// Variable: serviceBySlugQuery
// Query: *[_type == 'service' && slug.current == $slug][0] {  _id,  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        hex      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },  },      _type == "comparisonTableBlock" => {    _id,  _key,  _type,  _key,  _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        hex      }    },    rows[] {      leftText,      rightText    }  }  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type ServiceBySlugQueryResult = {
  _id: string;
  _type: "service";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;
// Variable: allServicesQuery
// Query: *[_type == 'service'] {  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        hex      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },  },      _type == "comparisonTableBlock" => {    _id,  _key,  _type,  _key,  _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        hex      }    },    rows[] {      leftText,      rightText    }  }  },}
export type AllServicesQueryResult = Array<{
  _type: "service";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  }> | null;
}>;
// Variable: servicesPageQuery
// Query: *[_type == 'servicesPage'][0] {  _id,  _type,  title,  'slug': slug.current,    pageBuilder[] {      _type == "heroBlock" => {      _id,  _key,  _type,    heading,    content[],    mediaType,    bottomCornerRadius,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    image {       height,        asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    dialogType,    videoUrl,    overlayType,    anchorId  },      _type == "headerBlock" => {      _id,  _key,  _type,    heading,    content[],    bottomCornerRadius,    anchorId  },      _type == "featureBlock" => {      _id,  _key,  _type,    heading,    features[] {      title,      description,      icon {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      pageReference->{        _id,        title,        "slug": slug.current      },    },    anchorId  },      _type == "featureCardsBlock" => {      _id,  _key,  _type,    heading,    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features[] {      _key,      title,      description,      items,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      button {          _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId      },      },    showCallToAction,    callToActionHeading,    callToActionContent,    callToActionButtons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "featuresMinimalBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    features,    enableBorderTop,    cornerRadiusTop,    enableBorderBottom,    cornerRadiusBottom,    anchorId,      paddingTop,  paddingBottom  },      _type == "callToActionBlock" => {      _id,  _key,  _type,    heading,    content,    buttons[] {        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    anchorId,      paddingTop,  paddingBottom  },      _type == "logoBlock" => {      _id,  _key,  _type,    heading,    logos[] {      _key,      title,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      size,      link    },    anchorId  },      _type == "testimonialBlock" => {      _id,  _key,  _type,    heading,    eyebrow,    testimonials[]->{      _id,      name,      jobTitle,      company,      quote,      avatar {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      logo {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },    },    anchorId,    cornerRadiusTop,    cornerRadiusBottom,      paddingTop,  paddingBottom  },      _type == "freeformBlock" => {      _id,  _key,  _type,    title,    columnsPerRow,    columns[] {      _key,      _type,      title,      spacing,      alignment,      items[] {        _key,        _type,        image {           aspectRatio,            asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },         },        heading,        headingText,        headingTag,        headingSize,        richTextContent,        buttonText,        buttonVariant,        buttonType,        buttonPageReference->{          _id,          title,          "slug": slug.current        },        buttonExternalUrl,        spacing      },    },    anchorId,    border  },      _type == "portableTextBlock" => {      _id,  _key,  _type,    title,    content[],    alignment,    anchorId,      paddingTop,  paddingBottom  },      _type == "blogArchiveBlock" => {      _id,  _key,  _type,    heading,    "categories": *[_type == "postCategory"] {      _id,      title,      "slug": slug.current,    },    anchorId,      paddingTop,  paddingBottom  },      _type == "servicesBlock" => {      _id,  _key,  _type,    heading,    services[]->{      _id,      title,      shortDescription,      image {           asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },       },      "slug": slug.current,    },    buttons[]{        _key,  showButton,  buttonText,  buttonVariant,  buttonType,  buttonWidth,  buttonFileUrl {    asset->{ url }  },  buttonPageReference->{    _id,    _type,    title,    "slug": slug.current  },  buttonEmailAddress,  buttonExternalUrl,  buttonAnchorLocation,  buttonAnchorId    },    background,    topCornerRadius,    anchorId,      paddingTop,  paddingBottom  },      _type == "formBlock" => {      _id,  _key,  _type,    heading,    content[],    form->{      title,      submitButtonText,      fields    },    anchorId,      paddingTop,  paddingBottom  },      _type == "mediaBlock" => {      _id,  _key,  _type,    backgroundType,    backgroundWidth,    image {         asset->{     _ref,    _type,    url,    altText,    description,    "tags": opt.media.tags[]->name.current,    title,  },     },    overlayType,    dialogType,    videoUrl,    anchorId  },      _type == "heroClickthroughBlock" => {      _id,  _key,  _type,    heading,    subheading,    headingWidth,    subheadingWidth  },      _type == "simpleCardBlock" => {      _id,  _key,  _type,    title,    cards[] {      title,      description,      image {        asset->{          url,          metadata {            dimensions          }        },        alt      },      backgroundColor {        hex      }    }  },      _type == "featuredTestimonialBlock" => {      _id,  _key,  _type,    quote,    author {      name,      position,      avatar {        asset->{          url,          metadata {            dimensions          }        },        alt      }    },    quoteIcon {      asset->{        url      },      alt    },  },      _type == "comparisonTableBlock" => {    _id,  _key,  _type,  _key,  _type,    title,    leftColumn {      title,      icon {        asset->{          url        },        alt      }    },    rightColumn {      title,      icon {        asset->{          url        },        alt      },      backgroundColor {        hex      }    },    rows[] {      leftText,      rightText    }  }  },  "seo": {    "title": coalesce(seo.title, title, ""),    "description": coalesce(seo.description,  ""),    "noIndex": seo.noIndex == true,    "image": seo.image,  },}
export type ServicesPageQueryResult = {
  _id: string;
  _type: "servicesPage";
  title: string | null;
  slug: string | null;
  pageBuilder: Array<{
    _id: null;
    _key: string;
    _type: "callToActionBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "comparisonTableBlock";
    title: string | null;
    leftColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    rightColumn: {
      title: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    } | null;
    rows: Array<{
      leftText: string | null;
      rightText: string | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "featureCardsBlock";
    heading: string | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<{
      _key: string;
      title: string | null;
      description: string | null;
      items: Array<string> | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      button: {
        _key: null;
        showButton: boolean | null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonWidth: "auto" | "fullWidth" | null;
        buttonFileUrl: {
          asset: {
            url: string | null;
          } | null;
        } | null;
        buttonPageReference: {
          _id: string;
          _type: "blogPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "page";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "project";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "projectsPage";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "service";
          title: string | null;
          slug: string | null;
        } | {
          _id: string;
          _type: "servicesPage";
          title: string | null;
          slug: string | null;
        } | null;
        buttonEmailAddress: string | null;
        buttonExternalUrl: string | null;
        buttonAnchorLocation: "choosePage" | "currentPage" | null;
        buttonAnchorId: string | null;
      } | null;
    }> | null;
    showCallToAction: boolean | null;
    callToActionHeading: string | null;
    callToActionContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    callToActionButtons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "featuredTestimonialBlock";
    quote: string | null;
    author: {
      name: string | null;
      position: string | null;
      avatar: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    } | null;
    quoteIcon: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
  } | {
    _id: null;
    _key: string;
    _type: "featuresMinimalBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    features: Array<string> | null;
    enableBorderTop: boolean | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    enableBorderBottom: boolean | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "formBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    form: {
      title: string | null;
      submitButtonText: string | null;
      fields: Array<{
        name?: string;
        placeholder?: string;
        inputType?: "email" | "tel" | "text" | "textarea";
        isRequired?: boolean;
        _key: string;
      }> | null;
    } | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "freeformBlock";
    title: string | null;
    columnsPerRow: "2" | "3" | "4" | null;
    columns: Array<{
      _key: string;
      _type: null;
      title: string | null;
      spacing: "large" | "medium" | "none" | "small" | null;
      alignment: "center" | "left" | "right" | null;
      items: Array<{
        _key: string;
        _type: "buttonObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: string | null;
        buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
        buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
        buttonPageReference: {
          _id: string;
          title: string | null;
          slug: string | null;
        } | null;
        buttonExternalUrl: string | null;
        spacing: null;
      } | {
        _key: string;
        _type: "headingObject";
        image: null;
        heading: null;
        headingText: string | null;
        headingTag: "h2" | "h3" | "h4" | "h5" | "h6" | null;
        headingSize: "lg" | "md" | "sm" | "xl" | "xs" | "xxl" | "xxxl" | null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "richTextObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal";
          listItem?: never;
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "singleImageObject";
        image: {
          aspectRatio: "portrait" | "rectangle" | "square" | null;
          asset: {
            _ref: null;
            _type: "sanity.imageAsset";
            url: string | null;
            altText: string | null;
            description: string | null;
            tags: null;
            title: string | null;
          } | null;
        } | null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: null;
      } | {
        _key: string;
        _type: "spacerObject";
        image: null;
        heading: null;
        headingText: null;
        headingTag: null;
        headingSize: null;
        richTextContent: null;
        buttonText: null;
        buttonVariant: null;
        buttonType: null;
        buttonPageReference: null;
        buttonExternalUrl: null;
        spacing: "large" | "medium" | "none" | "small" | null;
      }> | null;
    }> | null;
    anchorId: string | null;
    border: "bottom" | "none" | "top" | "topBottom" | null;
  } | {
    _id: null;
    _key: string;
    _type: "headerBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroBlock";
    heading: string | null;
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: never;
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    mediaType: "image" | "none" | null;
    bottomCornerRadius: "rounded" | "straight" | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    image: {
      height: "full" | "short" | null;
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    overlayType: "dark" | "none" | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "heroClickthroughBlock";
    heading: string | null;
    subheading: string | null;
    headingWidth: number | null;
    subheadingWidth: number | null;
  } | {
    _id: null;
    _key: string;
    _type: "logoBlock";
    heading: string | null;
    logos: Array<{
      _key: string;
      title: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      size: "default" | "large" | null;
      link: string | null;
    }> | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "mediaBlock";
    backgroundType: "image" | "video" | null;
    backgroundWidth: "contained" | "full" | null;
    image: {
      asset: {
        _ref: null;
        _type: "sanity.imageAsset";
        url: string | null;
        altText: string | null;
        description: string | null;
        tags: null;
        title: string | null;
      } | null;
    } | null;
    overlayType: "dark" | "none" | null;
    dialogType: "none" | "video" | null;
    videoUrl: string | null;
    anchorId: string | null;
  } | {
    _id: null;
    _key: string;
    _type: "portableTextBlock";
    title: string | null;
    content: Array<{
      _key: string;
    } & CallToActionObject | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    alignment: "center" | "left" | "right" | null;
    anchorId: string | null;
    paddingTop: null;
    paddingBottom: null;
  } | {
    _id: null;
    _key: string;
    _type: "servicesBlock";
    heading: string | null;
    services: Array<{
      _id: string;
      title: string | null;
      shortDescription: string | null;
      image: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      slug: string | null;
    }> | null;
    buttons: Array<{
      _key: string;
      showButton: boolean | null;
      buttonText: string | null;
      buttonVariant: "outline" | "primary" | "secondary" | "tertiary" | "underline" | null;
      buttonType: "anchor" | "emailAddress" | "external" | "fileDownload" | "internal" | null;
      buttonWidth: "auto" | "fullWidth" | null;
      buttonFileUrl: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      buttonPageReference: {
        _id: string;
        _type: "blogPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "page";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "project";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "projectsPage";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "service";
        title: string | null;
        slug: string | null;
      } | {
        _id: string;
        _type: "servicesPage";
        title: string | null;
        slug: string | null;
      } | null;
      buttonEmailAddress: string | null;
      buttonExternalUrl: string | null;
      buttonAnchorLocation: "choosePage" | "currentPage" | null;
      buttonAnchorId: string | null;
    }> | null;
    background: "pattern" | "white" | null;
    topCornerRadius: "rounded" | "straight" | null;
    anchorId: string | null;
    paddingTop: "default" | "large" | "medium" | "none" | "small" | null;
    paddingBottom: "default" | "large" | "medium" | "none" | "small" | null;
  } | {
    _id: null;
    _key: string;
    _type: "simpleCardBlock";
    title: string | null;
    cards: Array<{
      title: string | null;
      description: string | null;
      image: {
        asset: {
          url: string | null;
          metadata: {
            dimensions: SanityImageDimensions | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      backgroundColor: {
        hex: string | null;
      } | null;
    }> | null;
  } | {
    _id: null;
    _key: string;
    _type: "testimonialBlock";
    heading: string | null;
    eyebrow: string | null;
    testimonials: Array<{
      _id: string;
      name: string | null;
      jobTitle: string | null;
      company: string | null;
      quote: string | null;
      avatar: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
      logo: {
        asset: {
          _ref: null;
          _type: "sanity.imageAsset";
          url: string | null;
          altText: string | null;
          description: string | null;
          tags: null;
          title: string | null;
        } | null;
      } | null;
    }> | null;
    anchorId: string | null;
    cornerRadiusTop: "rounded" | "straight" | null;
    cornerRadiusBottom: "rounded" | "straight" | null;
    paddingTop: null;
    paddingBottom: null;
  }> | null;
  seo: {
    title: string | "";
    description: string | "";
    noIndex: boolean | false;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  };
} | null;

// Source: ./src/sanity/lib/queries/misc.ts
// Variable: sitemapQuery
// Query: *[_type in ["page", "post", "project", "service", "blogPage", "projectsPage", "servicesPage"] && defined(slug.current)] {    "href": select(      _type == "page" => "/" + slug.current,      _type == "post" => "/blog/" + slug.current,      _type == "blogPage" => "/blog",      _type == "project" => "/projects/" + slug.current,      _type == "projectsPage" => "/projects",      _type == "service" => "/services/" + slug.current,      _type == "servicesPage" => "/services",      slug.current    ),    _updatedAt  }
export type SitemapQueryResult = Array<{
  href: "/blog";
  _updatedAt: string;
} | {
  href: "/projects";
  _updatedAt: string;
} | {
  href: "/services";
  _updatedAt: string;
} | {
  href: string | null;
  _updatedAt: string;
}>;
// Variable: redirectsQuery
// Query: *[_type == "redirect" && isEnabled == true] {      source,      destination,      permanent  }
export type RedirectsQueryResult = Array<{
  source: string | null;
  destination: string | null;
  permanent: boolean | null;
}>;

// Source: ./src/sanity/lib/queries/singletons/announcement-banner.ts
// Variable: announcementBannerQuery
// Query: *[_type == "announcementBanner"][0] {    show,    backgroundColor { hex },    textColor { hex },    linkColor { hex },    icon {        asset->{            url,        }    },    text,    linkText,    link  }
export type AnnouncementBannerQueryResult = null;

// Source: ./src/sanity/lib/queries/singletons/footer-co-links.ts
// Variable: footerCoLinksQuery
// Query: *[_type == "footer"][0] {  footerCoLinks {    companyNameMark {      asset->{        url,      }    },    copyright,    coLinks[] {      label,      url    },    businessEmail,  }}
export type FooterCoLinksQueryResult = {
  footerCoLinks: {
    companyNameMark: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    copyright: string | null;
    coLinks: Array<{
      label: string | null;
      url: string | null;
    }> | null;
    businessEmail: string | null;
  } | null;
} | null;

// Source: ./src/sanity/lib/queries/singletons/footer-cta.ts
// Variable: footerCTAQuery
// Query: *[_type == "footer"][0] {  footerCTA {    title,    description,    ctaButton {      text,      link,      variant    },    desktopImage {      src {        asset->{          url        }      },      alt,      width,      height    },    mobileImage {      src {        asset->{          url        }      },      alt,      width,      height    }  }}
export type FooterCTAQueryResult = {
  footerCTA: {
    title: string | null;
    description: string | null;
    ctaButton: {
      text: string | null;
      link: string | null;
      variant: "danger" | "outline" | "primary" | "secondary" | null;
    } | null;
    desktopImage: {
      src: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      alt: string | null;
      width: number | null;
      height: number | null;
    } | null;
    mobileImage: {
      src: {
        asset: {
          url: string | null;
        } | null;
      } | null;
      alt: string | null;
      width: number | null;
      height: number | null;
    } | null;
  } | null;
} | null;

// Source: ./src/sanity/lib/queries/singletons/footer-links.ts
// Variable: footerLinksQuery
// Query: *[_type == "footer"][0] {  footerLinks {    companyLogo {      asset->{        url,      }    },    backedBy {      asset->{        url,      }    },    socialLinks[] {      platform,      url,      icon {          asset->{              url,          }      }    },    certifications[] {      label,      icon {          asset->{              url,          }      }    },    reviewBadges[] {      url,      icon {          asset->{              url,          }      }    },    platform[] {      label,      url,      badge    },    resources[] {      label,      url,      badge    },    companys[] {      label,      url,      badge    },    getStarted[] {      label,      url,      badge    },    freeTools[] {      label,      url,      badge    },    customers[] {      label,      url,      badge    },    popularGuides[] {      label,      url,      badge    }  }}
export type FooterLinksQueryResult = {
  footerLinks: {
    companyLogo: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    backedBy: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    socialLinks: Array<{
      platform: string | null;
      url: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    certifications: Array<{
      label: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    reviewBadges: Array<{
      url: string | null;
      icon: {
        asset: {
          url: string | null;
        } | null;
      } | null;
    }> | null;
    platform: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    resources: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    companys: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    getStarted: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    freeTools: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    customers: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
    popularGuides: Array<{
      label: string | null;
      url: string | null;
      badge: "new" | "popular" | null;
    }> | null;
  } | null;
} | null;

// Source: ./src/sanity/lib/queries/singletons/navbar.ts
// Variable: navbarQuery
// Query: *[_type =="navbar"][0]{  logo {    src {      asset->{        _id,        url      }    },    alt,    width,    height  },  menuItems[] {    name,    hasDropdown,    dropdownItems[] {      title,      description,      path    },    path  },  ctaButton {    text,    link,    variant  }}
export type NavbarQueryResult = {
  logo: {
    src: {
      asset: {
        _id: string;
        url: string | null;
      } | null;
    } | null;
    alt: string | null;
    width: number | null;
    height: number | null;
  } | null;
  menuItems: Array<{
    name: string | null;
    hasDropdown: boolean | null;
    dropdownItems: Array<{
      title: string | null;
      description: string | null;
      path: string | null;
    }> | null;
    path: string | null;
  }> | null;
  ctaButton: {
    text: string | null;
    link: string | null;
    variant: "danger" | "outline" | "primary" | "secondary" | null;
  } | null;
} | null;

// Source: ./src/sanity/lib/queries/singletons/og.ts
// Variable: ogImageQuery
// Query: *[_id == $id][0]{    title,  }
export type OgImageQueryResult = {
  title: null;
} | {
  title: string | null;
} | null;

// Source: ./src/sanity/lib/queries/singletons/settings.ts
// Variable: generalSettingsQuery
// Query: *[_type == 'generalSettings'][0] {  siteTitle,  siteLogo {     asset->{ url },  },  copyright,  homePage->{    _id,    _type,    title,    'slug': slug.current,    "seo": {      "title": coalesce(seo.title, title, ""),      "description": coalesce(seo.description,  ""),      "noIndex": seo.noIndex == true,      "image": seo.image,    },  },}
export type GeneralSettingsQueryResult = {
  siteTitle: string | null;
  siteLogo: {
    asset: {
      url: string | null;
    } | null;
  } | null;
  copyright: string | null;
  homePage: {
    _id: string;
    _type: "blogPage";
    title: string | null;
    slug: string | null;
    seo: {
      title: string | "";
      description: string | "";
      noIndex: boolean | false;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  } | {
    _id: string;
    _type: "page";
    title: string | null;
    slug: string | null;
    seo: {
      title: string | "";
      description: string | "";
      noIndex: boolean | false;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  } | {
    _id: string;
    _type: "project";
    title: string | null;
    slug: string | null;
    seo: {
      title: string | "";
      description: string | "";
      noIndex: boolean | false;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  } | {
    _id: string;
    _type: "projectsPage";
    title: string | null;
    slug: string | null;
    seo: {
      title: string | "";
      description: string | "";
      noIndex: boolean | false;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  } | {
    _id: string;
    _type: "service";
    title: string | null;
    slug: string | null;
    seo: {
      title: string | "";
      description: string | "";
      noIndex: boolean | false;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  } | {
    _id: string;
    _type: "servicesPage";
    title: string | null;
    slug: string | null;
    seo: {
      title: string | "";
      description: string | "";
      noIndex: boolean | false;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      } | null;
    };
  } | null;
} | null;
// Variable: marketingSettingsQuery
// Query: *[_type == 'marketingSettings'][0] {  googleAnalyticsId,  googleTagManagerId,}
export type MarketingSettingsQueryResult = {
  googleAnalyticsId: string | null;
  googleTagManagerId: string | null;
} | null;
// Variable: blogSettingsQuery
// Query: *[_type == 'blogSettings'][0] {  showRelatedPosts,  showTableOfContents,  showPostsByCategory}
export type BlogSettingsQueryResult = {
  showRelatedPosts: boolean | null;
  showTableOfContents: boolean | null;
  showPostsByCategory: boolean | null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type == \"page\" && defined(slug.current)] {\n  'params': { 'slug': slug.current }\n}": PageSlugsQueryResult;
    "*[_type == 'page' && slug.current == $slug][0] {\n  _type,\n  _id,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n  \n  _id,\n  _key,\n  _type\n,\n  _key,\n  _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n\n  }\n,\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": PageBySlugQueryResult;
    "*[_type == \"post\" && defined(slug.current)] {\n  'params': { 'slug': slug.current }\n}": PostSlugsQueryResult;
    "*[_type == 'blogPage'][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n  \n  _id,\n  _key,\n  _type\n,\n  _key,\n  _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n\n  }\n,\n  \"posts\": *[_type == 'post'] | order(_createdAt asc) {\n    _id,\n    _type,\n    _createdAt,\n    title,\n    'slug': slug.current,\n    excerpt,\n    category->{\n      _id,\n      title,\n      'slug': slug.current,\n    },\n    author->{\n      _id,\n      name,\n      username,\n      bio,\n      avatar { \n        asset->{ url }, \n      },\n    },\n    image { \n      asset->{ url }, \n      altText \n    },\n  },\n  \"categories\": *[_type == \"postCategory\"] | order(orderRank asc) {\n    _id,\n    _type,\n    title,\n    'slug': slug.current,\n  },\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": BlogPageQueryResult;
    "*[_type == 'post' && slug.current == $slug][0] {\n  _id,\n  _type,\n  _createdAt,\n  title,\n  'slug': slug.current,\n  excerpt,\n  \"tableOfContents\": content[style in [\"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]],\n  content[],\n  category->{\n    _id,\n    title,\n    categoryColor {\n      value\n    },\n    'slug': slug.current,\n  },\n  author->{\n    _id,\n    name,\n    username,\n    bio,\n    avatar { \n      asset->{ url }, \n    },\n  },\n  image { \n    asset->{ url }, \n    altText,\n    caption, \n  },\n  relatedPostsType,\n  \"relatedPosts\": select(\n    relatedPostsType == \"custom\" => customRelatedPosts[]->{ \n      _id,\n      _createdAt,\n      title,\n      'slug': slug.current,\n      excerpt,\n      category->{\n        _id,\n        title,\n        categoryColor->{\n          value\n        },\n        'slug': slug.current,\n      },\n      author->{\n        _id,\n        name,\n        username,\n        bio,\n        avatar { \n          asset->{ url }, \n        },\n      },\n      image { \n        asset->{ url }, \n        altText \n      }\n    },\n    relatedPostsType == \"autofill\" => *[_type == 'post' && category._ref == ^.category._ref && _id != ^._id][0...3]{ \n      _id,\n      _createdAt,\n      title,\n      'slug': slug.current,\n      category->{\n        _id,\n        title,\n        categoryColor->{\n          value\n        },\n        'slug': slug.current,\n      },\n      author->{\n        _id,\n        name,\n        username,\n        bio,\n        avatar { \n          asset->{ url }, \n        },\n      },\n      excerpt,\n      image { \n        asset->{ url }, \n        altText \n      }\n    },\n  ),\n  \"settings\": *[_type == \"blogSettings\"][0] {\n    showRelatedPosts,\n    showTableOfContents,\n    showPostsByCategory\n  },\n  \"categories\": *[_type == \"postCategory\"] {\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": PostBySlugQueryResult;
    "*[_type == 'post'] | order(_createdAt asc) {\n  _id,\n  _type,\n  _createdAt,\n  title,\n  'slug': slug.current,\n  excerpt,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  author->{\n    _id,\n    name,\n    username,\n    bio,\n    avatar { \n      asset->{ url }, \n    },\n  },\n  image { \n    asset->{ url }, \n    altText \n  },\n}": AllPostsQueryResult;
    "*[_type == 'postCategory'] | order(orderRank asc) {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n}": AllPostCategoriesQueryResult;
    "*[_type == 'post' && category->slug.current == $slug] {\n  _id,\n  _type,\n  _createdAt,\n  title,\n  'slug': slug.current,\n  excerpt,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  author->{\n    _id,\n    name,\n    username,\n    bio,\n    avatar { \n      asset->{ url }, \n    },\n  },\n  image { \n    asset->{ url }, \n    altText \n  },\n}": PostsByCategoryQueryResult;
    "*[_type == 'postCategory' && slug.current == $slug][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n}": PostCategoryBySlugQueryResult;
    "*[_type == \"project\" && defined(slug.current)] {\n  'params': { 'slug': slug.current }\n}": ProjectSlugsQueryResult;
    "*[_type == 'projectsPage'][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n  \n  _id,\n  _key,\n  _type\n,\n  _key,\n  _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n\n  }\n,\n  \"projects\": *[_type == \"project\"] | order(_createdAt asc) {\n    _id,\n    _type,\n    title,\n    'slug': slug.current,\n    excerpt,\n    category->{\n      _id,\n      title,\n      'slug': slug.current,\n    },\n    image { \n      asset->{ url }, \n      height,\n      altText \n    },\n    \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n  \n  _id,\n  _key,\n  _type\n,\n  _key,\n  _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n\n  }\n,\n  },\n  \"categories\": *[_type == \"projectCategory\"] | order(orderRank asc) {\n    _id,\n    _type,\n    title,\n    'slug': slug.current,\n  },\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": ProjectsPageQueryResult;
    "*[_type == \"project\" && defined(slug.current)][] {\n  'params': { 'slug': slug.current }\n}": ProjectPathsQueryResult;
    "*[_type == 'project' && slug.current == $slug][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n  \n  _id,\n  _key,\n  _type\n,\n  _key,\n  _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n\n  }\n,\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": ProjectBySlugQueryResult;
    "*[_type == 'project'] | order(_createdAt asc) {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  excerpt,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  image { \n    asset->{ url }, \n    height,\n    altText \n  },\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n  \n  _id,\n  _key,\n  _type\n,\n  _key,\n  _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n\n  }\n,\n}": AllProjectsQueryResult;
    "*[_type == 'projectCategory'] | order(orderRank asc) {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n}": AllProjectCategoriesQueryResult;
    "*[_type == 'project' && category->slug.current == $slug] {\n  _id,\n  _type,\n  _createdAt,\n  title,\n  'slug': slug.current,\n  excerpt,\n  category->{\n    _id,\n    title,\n    'slug': slug.current,\n  },\n  image { \n    asset->{ url }, \n    height,\n    altText \n  },\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n  \n  _id,\n  _key,\n  _type\n,\n  _key,\n  _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n\n  }\n,\n}": ProjectsByCategoryQueryResult;
    "*[_type == 'projectCategory' && slug.current == $slug][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n}": ProjectCategoryBySlugQueryResult;
    "*[_type == \"service\" && defined(slug.current)] {\n  'params': { 'slug': slug.current }\n}": ServiceSlugsQueryResult;
    "*[_type == 'service' && slug.current == $slug][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n  \n  _id,\n  _key,\n  _type\n,\n  _key,\n  _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n\n  }\n,\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": ServiceBySlugQueryResult;
    "*[_type == 'service'] {\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n  \n  _id,\n  _key,\n  _type\n,\n  _key,\n  _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n\n  }\n,\n}": AllServicesQueryResult;
    "*[_type == 'servicesPage'][0] {\n  _id,\n  _type,\n  title,\n  'slug': slug.current,\n  \n  pageBuilder[] {\n    \n  _type == \"heroBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    mediaType,\n    bottomCornerRadius,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    image { \n      height,\n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    dialogType,\n    videoUrl,\n    overlayType,\n    anchorId\n  }\n,\n    \n  _type == \"headerBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    bottomCornerRadius,\n    anchorId\n  }\n,\n    \n  _type == \"featureBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    features[] {\n      title,\n      description,\n      icon { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      pageReference->{\n        _id,\n        title,\n        \"slug\": slug.current\n      },\n    },\n    anchorId\n  }\n,\n    \n  _type == \"featureCardsBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features[] {\n      _key,\n      title,\n      description,\n      items,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      button {\n        \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n      },  \n    },\n    showCallToAction,\n    callToActionHeading,\n    callToActionContent,\n    callToActionButtons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"featuresMinimalBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    features,\n    enableBorderTop,\n    cornerRadiusTop,\n    enableBorderBottom,\n    cornerRadiusBottom,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"callToActionBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content,\n    buttons[] {\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"logoBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    logos[] {\n      _key,\n      title,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      size,\n      link\n    },\n    anchorId\n  }\n,\n    \n  _type == \"testimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    eyebrow,\n    testimonials[]->{\n      _id,\n      name,\n      jobTitle,\n      company,\n      quote,\n      avatar { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      logo { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n    },\n    anchorId,\n    cornerRadiusTop,\n    cornerRadiusBottom,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"freeformBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    columnsPerRow,\n    columns[] {\n      _key,\n      _type,\n      title,\n      spacing,\n      alignment,\n      items[] {\n        _key,\n        _type,\n        image { \n          aspectRatio,\n          \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n        },\n        heading,\n        headingText,\n        headingTag,\n        headingSize,\n        richTextContent,\n        buttonText,\n        buttonVariant,\n        buttonType,\n        buttonPageReference->{\n          _id,\n          title,\n          \"slug\": slug.current\n        },\n        buttonExternalUrl,\n        spacing\n      },\n    },\n    anchorId,\n    border\n  }\n,\n    \n  _type == \"portableTextBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    content[],\n    alignment,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"blogArchiveBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    \"categories\": *[_type == \"postCategory\"] {\n      _id,\n      title,\n      \"slug\": slug.current,\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"servicesBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    services[]->{\n      _id,\n      title,\n      shortDescription,\n      image { \n        \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n      },\n      \"slug\": slug.current,\n    },\n    buttons[]{\n      \n  _key,\n  showButton,\n  buttonText,\n  buttonVariant,\n  buttonType,\n  buttonWidth,\n  buttonFileUrl {\n    asset->{ url }\n  },\n  buttonPageReference->{\n    _id,\n    _type,\n    title,\n    \"slug\": slug.current\n  },\n  buttonEmailAddress,\n  buttonExternalUrl,\n  buttonAnchorLocation,\n  buttonAnchorId\n\n    },\n    background,\n    topCornerRadius,\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"formBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    content[],\n    form->{\n      title,\n      submitButtonText,\n      fields\n    },\n    anchorId,\n    \n  paddingTop,\n  paddingBottom\n\n  }\n,\n    \n  _type == \"mediaBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    backgroundType,\n    backgroundWidth,\n    image { \n      \n  asset->{ \n    _ref,\n    _type,\n    url,\n    altText,\n    description,\n    \"tags\": opt.media.tags[]->name.current,\n    title,\n  }, \n\n    },\n    overlayType,\n    dialogType,\n    videoUrl,\n    anchorId\n  }\n,\n\n    \n  _type == \"heroClickthroughBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    heading,\n    subheading,\n    headingWidth,\n    subheadingWidth\n  }\n,\n    \n  _type == \"simpleCardBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    title,\n    cards[] {\n      title,\n      description,\n      image {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    }\n  }\n,\n    \n  _type == \"featuredTestimonialBlock\" => {\n    \n  _id,\n  _key,\n  _type\n,\n    quote,\n    author {\n      name,\n      position,\n      avatar {\n        asset->{\n          url,\n          metadata {\n            dimensions\n          }\n        },\n        alt\n      }\n    },\n    quoteIcon {\n      asset->{\n        url\n      },\n      alt\n    },\n  }\n,\n    \n  _type == \"comparisonTableBlock\" => {\n  \n  _id,\n  _key,\n  _type\n,\n  _key,\n  _type,\n    title,\n    leftColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      }\n    },\n    rightColumn {\n      title,\n      icon {\n        asset->{\n          url\n        },\n        alt\n      },\n      backgroundColor {\n        hex\n      }\n    },\n    rows[] {\n      leftText,\n      rightText\n    }\n  }\n\n  }\n,\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n    \"description\": coalesce(seo.description,  \"\"),\n    \"noIndex\": seo.noIndex == true,\n    \"image\": seo.image,\n  },\n}": ServicesPageQueryResult;
    "\n  *[_type in [\"page\", \"post\", \"project\", \"service\", \"blogPage\", \"projectsPage\", \"servicesPage\"] && defined(slug.current)] {\n    \"href\": select(\n      _type == \"page\" => \"/\" + slug.current,\n      _type == \"post\" => \"/blog/\" + slug.current,\n      _type == \"blogPage\" => \"/blog\",\n      _type == \"project\" => \"/projects/\" + slug.current,\n      _type == \"projectsPage\" => \"/projects\",\n      _type == \"service\" => \"/services/\" + slug.current,\n      _type == \"servicesPage\" => \"/services\",\n      slug.current\n    ),\n    _updatedAt\n  }\n": SitemapQueryResult;
    "\n  *[_type == \"redirect\" && isEnabled == true] {\n      source,\n      destination,\n      permanent\n  }\n": RedirectsQueryResult;
    "*[_type == \"announcementBanner\"][0] {\n    show,\n    backgroundColor { hex },\n    textColor { hex },\n    linkColor { hex },\n    icon {\n        asset->{\n            url,\n        }\n    },\n    text,\n    linkText,\n    link\n  }\n": AnnouncementBannerQueryResult;
    "*[_type == \"footer\"][0] {\n  footerCoLinks {\n    companyNameMark {\n      asset->{\n        url,\n      }\n    },\n    copyright,\n    coLinks[] {\n      label,\n      url\n    },\n    businessEmail,\n  }\n}": FooterCoLinksQueryResult;
    "*[_type == \"footer\"][0] {\n  footerCTA {\n    title,\n    description,\n    ctaButton {\n      text,\n      link,\n      variant\n    },\n    desktopImage {\n      src {\n        asset->{\n          url\n        }\n      },\n      alt,\n      width,\n      height\n    },\n    mobileImage {\n      src {\n        asset->{\n          url\n        }\n      },\n      alt,\n      width,\n      height\n    }\n  }\n}": FooterCTAQueryResult;
    "*[_type == \"footer\"][0] {\n  footerLinks {\n    companyLogo {\n      asset->{\n        url,\n      }\n    },\n    backedBy {\n      asset->{\n        url,\n      }\n    },\n    socialLinks[] {\n      platform,\n      url,\n      icon {\n          asset->{\n              url,\n          }\n      }\n    },\n    certifications[] {\n      label,\n      icon {\n          asset->{\n              url,\n          }\n      }\n    },\n    reviewBadges[] {\n      url,\n      icon {\n          asset->{\n              url,\n          }\n      }\n    },\n    platform[] {\n      label,\n      url,\n      badge\n    },\n    resources[] {\n      label,\n      url,\n      badge\n    },\n    companys[] {\n      label,\n      url,\n      badge\n    },\n    getStarted[] {\n      label,\n      url,\n      badge\n    },\n    freeTools[] {\n      label,\n      url,\n      badge\n    },\n    customers[] {\n      label,\n      url,\n      badge\n    },\n    popularGuides[] {\n      label,\n      url,\n      badge\n    }\n  }\n}": FooterLinksQueryResult;
    "*[_type ==\"navbar\"][0]{\n  logo {\n    src {\n      asset->{\n        _id,\n        url\n      }\n    },\n    alt,\n    width,\n    height\n  },\n  menuItems[] {\n    name,\n    hasDropdown,\n    dropdownItems[] {\n      title,\n      description,\n      path\n    },\n    path\n  },\n  ctaButton {\n    text,\n    link,\n    variant\n  }\n}": NavbarQueryResult;
    "\n  *[_id == $id][0]{\n    title,\n  }    \n": OgImageQueryResult;
    "*[_type == 'generalSettings'][0] {\n  siteTitle,\n  siteLogo { \n    asset->{ url },\n  },\n  copyright,\n  homePage->{\n    _id,\n    _type,\n    title,\n    'slug': slug.current,\n    \"seo\": {\n      \"title\": coalesce(seo.title, title, \"\"),\n      \"description\": coalesce(seo.description,  \"\"),\n      \"noIndex\": seo.noIndex == true,\n      \"image\": seo.image,\n    },\n  },\n}": GeneralSettingsQueryResult;
    "*[_type == 'marketingSettings'][0] {\n  googleAnalyticsId,\n  googleTagManagerId,\n}": MarketingSettingsQueryResult;
    "*[_type == 'blogSettings'][0] {\n  showRelatedPosts,\n  showTableOfContents,\n  showPostsByCategory\n}": BlogSettingsQueryResult;
  }
}
